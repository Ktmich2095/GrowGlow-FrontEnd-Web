{
  "version": 3,
  "sources": ["../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Color.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/List.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Math.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/Registry.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/States.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Children.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Container.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Text.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Label.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Data.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Component.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Time.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Series.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Draw.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Line.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/RadialText.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/RadialLabel.js", "../../../../../node_modules/d3-shape/src/constant.js", "../../../../../node_modules/d3-shape/src/math.js", "../../../../../node_modules/d3-path/src/path.js", "../../../../../node_modules/d3-shape/src/path.js", "../../../../../node_modules/d3-shape/src/arc.js", "../../../../../node_modules/d3-shape/src/array.js", "../../../../../node_modules/d3-shape/src/curve/linear.js", "../../../../../node_modules/d3-shape/src/curve/radial.js", "../../../../../node_modules/d3-shape/src/symbol/asterisk.js", "../../../../../node_modules/d3-shape/src/symbol/diamond.js", "../../../../../node_modules/d3-shape/src/symbol/star.js", "../../../../../node_modules/d3-shape/src/symbol/triangle.js", "../../../../../node_modules/d3-shape/src/symbol/triangle2.js", "../../../../../node_modules/d3-shape/src/symbol/wye.js", "../../../../../node_modules/d3-shape/src/noop.js", "../../../../../node_modules/d3-shape/src/curve/basis.js", "../../../../../node_modules/d3-shape/src/curve/basisClosed.js", "../../../../../node_modules/d3-shape/src/curve/basisOpen.js", "../../../../../node_modules/d3-shape/src/curve/bundle.js", "../../../../../node_modules/d3-shape/src/curve/cardinal.js", "../../../../../node_modules/d3-shape/src/curve/cardinalClosed.js", "../../../../../node_modules/d3-shape/src/curve/cardinalOpen.js", "../../../../../node_modules/d3-shape/src/curve/catmullRom.js", "../../../../../node_modules/d3-shape/src/curve/catmullRomClosed.js", "../../../../../node_modules/d3-shape/src/curve/catmullRomOpen.js", "../../../../../node_modules/d3-shape/src/curve/linearClosed.js", "../../../../../node_modules/d3-shape/src/curve/monotone.js", "../../../../../node_modules/d3-shape/src/curve/natural.js", "../../../../../node_modules/d3-shape/src/curve/step.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Slice.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Tick.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/ColorSet.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js"],
  "sourcesContent": ["/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am5.percent(X)`.\r\n *\r\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\r\n * * `am5.p0`\r\n * * `am5.p50`\r\n * * `am5.p100`\r\n */\r\nexport class Percent {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param percent  Percent value\r\n     */\r\n    constructor(percent) {\r\n        /**\r\n         * Value in percent.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = percent;\r\n    }\r\n    /**\r\n     * Relative value.\r\n     *\r\n     * E.g. 100% is 1, 50% is 0.5, etc.\r\n     *\r\n     * This is useful to apply transformations to other values. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * Alternatively, you can use `am5.percent()` helper function:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * @readonly\r\n     * @return Relative value\r\n     */\r\n    get value() {\r\n        return this._value / 100;\r\n    }\r\n    /**\r\n     * Value in percent.\r\n     *\r\n     * @readonly\r\n     * @return Percent\r\n     */\r\n    get percent() {\r\n        return this._value;\r\n    }\r\n    toString() {\r\n        return \"\" + this._value + \"%\";\r\n    }\r\n    interpolate(min, max) {\r\n        return min + (this.value * (max - min));\r\n    }\r\n    static normalize(percent, min, max) {\r\n        if (percent instanceof Percent) {\r\n            return percent;\r\n        }\r\n        else {\r\n            if (min === max) {\r\n                return new Percent(0);\r\n            }\r\n            else {\r\n                return new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric percent value to a proper [[Percent]] object.\r\n *\r\n * ```TypeScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n * ```JavaScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n *\r\n * @param value  Percent\r\n * @return Percent object\r\n */\r\nexport function percent(value) {\r\n    return new Percent(value);\r\n}\r\n/**\r\n * A shortcut function to `am5.percent(0)`.\r\n */\r\nexport const p0 = percent(0);\r\n/**\r\n * A shortcut function to `am5.percent(100)`.\r\n */\r\nexport const p100 = percent(100);\r\n/**\r\n * A shortcut function to `am5.percent(50)`.\r\n */\r\nexport const p50 = percent(50);\r\n/**\r\n * Checks if value is a [[Percent]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Input value\r\n * @return Is percent?\r\n */\r\nexport function isPercent(value) {\r\n    return value instanceof Percent;\r\n}\r\n", "import * as $type from \"./Type\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport { Disposer, DisposerClass } from \"./Disposer\";\r\n/**\r\n * ============================================================================\r\n * DOM FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Execute a function when DOM is ready.\r\n *\r\n * @since 5.0.2\r\n * @param  f  Callback\r\n */\r\nexport function ready(f) {\r\n    if (document.readyState !== \"loading\") {\r\n        f();\r\n    }\r\n    else {\r\n        const listener = () => {\r\n            if (document.readyState !== \"loading\") {\r\n                document.removeEventListener(\"readystatechange\", listener);\r\n                f();\r\n            }\r\n        };\r\n        document.addEventListener(\"readystatechange\", listener);\r\n    }\r\n}\r\n/**\r\n * Removes a DOM element.\r\n * @param  el  Target element\r\n */\r\nexport function removeElement(el) {\r\n    if (el.parentNode) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function addEventListener(dom, type, listener, options) {\r\n    //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n    dom.addEventListener(type, listener, options || false);\r\n    return new Disposer(() => {\r\n        dom.removeEventListener(type, listener, options || false);\r\n    });\r\n}\r\n/**\r\n * Function that adds an event listener which is triggered when the browser's zoom changes.\r\n *\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function onZoom(listener) {\r\n    // TODO use matchMedia instead ?\r\n    return addEventListener(window, \"resize\", (_ev) => {\r\n        listener();\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function supports(cap) {\r\n    switch (cap) {\r\n        case \"touchevents\":\r\n            //return \"ontouchstart\" in document.documentElement;\r\n            return window.hasOwnProperty(\"TouchEvent\");\r\n        case \"pointerevents\":\r\n            return window.hasOwnProperty(\"PointerEvent\");\r\n        case \"mouseevents\":\r\n            return window.hasOwnProperty(\"MouseEvent\");\r\n        case \"wheelevents\":\r\n            return window.hasOwnProperty(\"WheelEvent\");\r\n        case \"keyboardevents\":\r\n            return window.hasOwnProperty(\"KeyboardEvent\");\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getPointerId(event) {\r\n    let id = event.pointerId || 0;\r\n    return id;\r\n}\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore\r\n */\r\nexport function blur() {\r\n    if (document.activeElement && document.activeElement != document.body) {\r\n        if (document.activeElement.blur) {\r\n            document.activeElement.blur();\r\n        }\r\n        else {\r\n            let input = document.createElement(\"button\");\r\n            input.style.position = \"fixed\";\r\n            input.style.top = \"0px\";\r\n            input.style.left = \"-10000px\";\r\n            document.body.appendChild(input);\r\n            input.focus();\r\n            input.blur();\r\n            document.body.removeChild(input);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Focuses element.\r\n *\r\n * @ignore\r\n */\r\nexport function focus(el) {\r\n    if (el) {\r\n        el.focus();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getRendererEvent(key) {\r\n    if (supports(\"pointerevents\")) {\r\n        return key;\r\n    }\r\n    else if (supports(\"touchevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"touchstart\";\r\n            case \"pointerout\": return \"touchend\";\r\n            case \"pointerleave\": return \"touchend\";\r\n            case \"pointerdown\": return \"touchstart\";\r\n            case \"pointermove\": return \"touchmove\";\r\n            case \"pointerup\": return \"touchend\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    else if (supports(\"mouseevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"mouseover\";\r\n            case \"pointerout\": return \"mouseout\";\r\n            case \"pointerleave\": return \"mouseleave\";\r\n            case \"pointerdown\": return \"mousedown\";\r\n            case \"pointermove\": return \"mousemove\";\r\n            case \"pointerup\": return \"mouseup\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    return key;\r\n}\r\n/**\r\n * Determines if pointer event originated from a touch pointer or mouse.\r\n *\r\n * @param ev  Original event\r\n * @return Touch pointer?\r\n */\r\nexport function isTouchEvent(ev) {\r\n    if (typeof Touch !== \"undefined\" && ev instanceof Touch) {\r\n        return true;\r\n    }\r\n    else if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && ev.pointerType != null) {\r\n        switch (ev.pointerType) {\r\n            case \"touch\":\r\n            case \"pen\":\r\n            case 2:\r\n                return true;\r\n            case \"mouse\":\r\n            case 4:\r\n                return false;\r\n            default:\r\n                return !(ev instanceof MouseEvent);\r\n        }\r\n    }\r\n    else if (ev.type != null) {\r\n        if (ev.type.match(/^mouse/)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function setStyle(dom, property, value) {\r\n    dom.style[property] = value;\r\n}\r\nexport function getStyle(dom, property) {\r\n    return dom.style[property];\r\n}\r\n/**\r\n * Gets the target of the event, works for shadow DOM too.\r\n */\r\nexport function getEventTarget(event) {\r\n    if (event.composedPath) {\r\n        const path = event.composedPath();\r\n        if (path.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return path[0];\r\n        }\r\n    }\r\n    else {\r\n        return event.target;\r\n    }\r\n}\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nexport function contains(a, b) {\r\n    let cursor = b;\r\n    while (true) {\r\n        if (a === cursor) {\r\n            return true;\r\n        }\r\n        else if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host == null) {\r\n                return false;\r\n            }\r\n            else {\r\n                cursor = cursor.host;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns `true` if pointer event originated on an element within Root.\r\n *\r\n * @since 5.2.8\r\n * @param  event   Event\r\n * @param  target  Target element\r\n */\r\nexport function isLocalEvent(event, target) {\r\n    return event.target && contains(target.root.dom, event.target);\r\n}\r\n/**\r\n * Disables or enables interactivity of a DOM element.\r\n *\r\n * @param  target       Target element\r\n * @param  interactive  Interactive?\r\n */\r\nexport function setInteractive(target, interactive) {\r\n    if (interactive) {\r\n        target.style.pointerEvents = \"auto\";\r\n    }\r\n    else {\r\n        target.style.pointerEvents = \"none\";\r\n    }\r\n}\r\nexport function getEventKey(event) {\r\n    if (event.key !== undefined) {\r\n        return event.key;\r\n    }\r\n    switch (event.keyCode) {\r\n        case 9: return \"Tab\";\r\n        case 13: return \"Enter\";\r\n        case 16: return \"Shift\";\r\n        case 17: return \"Control\";\r\n        case 27: return \"Escape\";\r\n        case 32: return \" \";\r\n        case 37: return \"ArrowLeft\";\r\n        case 38: return \"ArrowUp\";\r\n        case 39: return \"ArrowRight\";\r\n        case 40: return \"ArrowDown\";\r\n        case 46: return \"Delete\";\r\n    }\r\n    return \"\" + event.keyCode;\r\n}\r\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getShadowRoot(a) {\r\n    let cursor = a;\r\n    while (true) {\r\n        if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host != null) {\r\n                return cursor;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nlet rootStylesheet;\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nfunction createStylesheet(element, text, nonce = \"\") {\r\n    // TODO use createElementNS ?\r\n    const e = document.createElement(\"style\");\r\n    e.type = \"text/css\";\r\n    if (nonce != \"\") {\r\n        e.setAttribute(\"nonce\", nonce);\r\n    }\r\n    e.textContent = text;\r\n    if (element === null) {\r\n        document.head.appendChild(e);\r\n    }\r\n    else {\r\n        element.appendChild(e);\r\n    }\r\n    return e;\r\n}\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet(element, nonce = \"\") {\r\n    if (element === null) {\r\n        if (rootStylesheet == null) {\r\n            // TODO use createElementNS ?\r\n            const e = document.createElement(\"style\");\r\n            e.type = \"text/css\";\r\n            if (nonce != \"\") {\r\n                e.setAttribute(\"nonce\", nonce);\r\n            }\r\n            document.head.appendChild(e);\r\n            rootStylesheet = e.sheet;\r\n        }\r\n        return rootStylesheet;\r\n    }\r\n    else {\r\n        // TODO use createElementNS ?\r\n        const e = document.createElement(\"style\");\r\n        e.type = \"text/css\";\r\n        if (nonce != \"\") {\r\n            e.setAttribute(\"nonce\", nonce);\r\n        }\r\n        element.appendChild(e);\r\n        return e.sheet;\r\n    }\r\n}\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction appendStylesheet(root, selector) {\r\n    const index = root.cssRules.length;\r\n    root.insertRule(selector + \"{}\", index);\r\n    return root.cssRules[index];\r\n}\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleRule extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param selector  CSS selector\r\n     * @param styles    An object of style attribute - value pairs\r\n     */\r\n    constructor(element, selector, styles, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * CSS rule.\r\n         */\r\n        Object.defineProperty(this, \"_rule\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._root = getStylesheet(element, nonce);\r\n        try {\r\n            this._rule = appendStylesheet(this._root, selector);\r\n        }\r\n        catch (err) {\r\n            // Create an empty rule on failed selectors\r\n            this._rule = appendStylesheet(this._root, \":not(*)\");\r\n        }\r\n        $object.each(styles, (key, value) => {\r\n            this.setStyle(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * A CSS selector text.\r\n     *\r\n     * E.g.: `.myClass p`\r\n     *\r\n     * @param selector  CSS selector\r\n     */\r\n    set selector(selector) {\r\n        this._rule.selectorText = selector;\r\n    }\r\n    /**\r\n     * @return CSS selector\r\n     */\r\n    get selector() {\r\n        return this._rule.selectorText;\r\n    }\r\n    // TODO test this\r\n    _dispose() {\r\n        // TODO a bit hacky\r\n        const index = $array.indexOf(this._root.cssRules, this._rule);\r\n        if (index === -1) {\r\n            throw new Error(\"Could not dispose StyleRule\");\r\n        }\r\n        else {\r\n            // TODO if it's empty remove it from the DOM ?\r\n            this._root.deleteRule(index);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the same style properties with browser-specific prefixes.\r\n     *\r\n     * @param name   Attribute name\r\n     * @param value  Attribute value\r\n     */\r\n    _setVendorPrefixName(name, value) {\r\n        const style = this._rule.style;\r\n        style.setProperty(\"-webkit-\" + name, value, \"\");\r\n        style.setProperty(\"-moz-\" + name, value, \"\");\r\n        style.setProperty(\"-ms-\" + name, value, \"\");\r\n        style.setProperty(\"-o-\" + name, value, \"\");\r\n        style.setProperty(name, value, \"\");\r\n    }\r\n    /**\r\n     * Sets a value for specific style attribute.\r\n     *\r\n     * @param name   Attribute\r\n     * @param value  Value\r\n     */\r\n    setStyle(name, value) {\r\n        if (name === \"transition\") {\r\n            this._setVendorPrefixName(name, value);\r\n        }\r\n        else {\r\n            this._rule.style.setProperty(name, value, \"\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Defines a class for an entire CSS style sheet.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleSheet extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param text  CSS stylesheet\r\n     */\r\n    constructor(element, text, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._element = createStylesheet(element, text, nonce);\r\n    }\r\n    _dispose() {\r\n        if (this._element.parentNode) {\r\n            this._element.parentNode.removeChild(this._element);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function addClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        const classes = className.split(\" \");\r\n        $array.each(classes, (name) => {\r\n            element.classList.add(name);\r\n        });\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \") + \" \" + className);\r\n        }\r\n        else {\r\n            element.setAttribute(\"class\", className);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function removeClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        element.classList.remove(className);\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \"));\r\n        }\r\n    }\r\n}\r\n// /**\r\n//  * Applies a set of styles to an element. Stores the original styles so they\r\n//  * can be restored later.\r\n//  *\r\n//  * @ignore\r\n//  * @param io      Element\r\n//   */\r\n// export function prepElementForDrag(dom: HTMLElement): void {\r\n// \t// @todo: save current values\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"none\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n// }\r\n// /**\r\n//  * Restores replaced styles\r\n//  *\r\n//  * @ignore\r\n//  * @param  io  Element\r\n//  */\r\n// export function unprepElementForDrag(dom: HTMLElement): void {\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\r\n// }\r\nexport function iOS() {\r\n    return /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\r\n}\r\nexport function getSafeResolution() {\r\n    return iOS() ? 1 : undefined;\r\n}\r\nexport function relativeToValue(percent, full) {\r\n    if ($type.isNumber(percent)) {\r\n        return percent;\r\n    }\r\n    else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\r\n        return full * percent.value;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\r\nexport function decimalPlaces(number) {\r\n    let match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n    if (!match) {\r\n        return 0;\r\n    }\r\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\r\nexport function padString(value, len = 0, char = \"0\") {\r\n    if (typeof value !== \"string\") {\r\n        value = value.toString();\r\n    }\r\n    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\nexport function trimLeft(text) {\r\n    return text.replace(/^[\\s]*/, \"\");\r\n}\r\nexport function trimRight(text) {\r\n    return text.replace(/[\\s]*$/, \"\");\r\n}\r\nexport function trim(text) {\r\n    return trimLeft(trimRight(text));\r\n}\r\nexport function truncateTextWithEllipsis(text, maxLength, breakWords = false, ellipsis = \"...\") {\r\n    if (text.length > maxLength) {\r\n        // Find the last non-alphanumeric character before maxLength\r\n        let lastNonAlphanumericIndex = maxLength - 1;\r\n        while (lastNonAlphanumericIndex >= 0 && text.charAt(lastNonAlphanumericIndex).match(/\\w/)) {\r\n            lastNonAlphanumericIndex--;\r\n        }\r\n        if (lastNonAlphanumericIndex >= 0 && breakWords == false) {\r\n            return text.substring(0, lastNonAlphanumericIndex + 1) + '...';\r\n        }\r\n        else {\r\n            // If no non-alphanumeric character found, truncate without breaking words\r\n            return text.substring(0, maxLength) + ellipsis;\r\n        }\r\n    }\r\n    else {\r\n        return text;\r\n    }\r\n}\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nexport function getFormat(format) {\r\n    // Undefined?\r\n    if (typeof format === \"undefined\") {\r\n        return \"string\";\r\n    }\r\n    // Cleanup and lowercase format\r\n    format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n    // Remove style tags\r\n    format = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n    // Trim\r\n    format = format.trim();\r\n    // Check for any explicit format hints (i.e. /Date)\r\n    let hints = format.match(/\\/(date|number|duration)$/);\r\n    if (hints) {\r\n        return hints[1];\r\n    }\r\n    // Check for explicit hints\r\n    if (format === \"number\") {\r\n        return \"number\";\r\n    }\r\n    if (format === \"date\") {\r\n        return \"date\";\r\n    }\r\n    if (format === \"duration\") {\r\n        return \"duration\";\r\n    }\r\n    // Detect number formatting symbols\r\n    if (format.match(/[#0]/)) {\r\n        return \"number\";\r\n    }\r\n    // Detect date formatting symbols\r\n    if (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n        return \"date\";\r\n    }\r\n    // Nothing? Let's display as string\r\n    return \"string\";\r\n}\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\r\nexport function cleanFormat(format) {\r\n    return format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\r\nexport function stripTags(text) {\r\n    return text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\r\nexport function plainText(text) {\r\n    return text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\r\nexport function escapeForRgex(value) {\r\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n/**\r\n * Adds space before each uppercase letter.\r\n *\r\n * @param   str Input string\r\n * @return      Output string\r\n */\r\nexport function addSpacing(str) {\r\n    let result = \"\";\r\n    for (let i = 0; i < str.length; i++) {\r\n        const char = str.charAt(i);\r\n        if (char.toUpperCase() == char && i != 0) {\r\n            result += \" \";\r\n        }\r\n        result += char;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Splits the string into separate characters. Keeps RTL words non-split.\r\n *\r\n * @param   source  Input\r\n * @return          Split text\r\n */\r\nexport function splitString(source) {\r\n    // Regular expression to identify RTL characters\r\n    const rtlChar = /[\\u0590-\\u05FF\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]/;\r\n    // Regular expression to capture segments ending with specific Arabic characters\r\n    const splitPattern = /([^اأدذرزو]*[اأدذرزو])/gi;\r\n    // Split input string into array of words or characters, including whitespace\r\n    let segments = source.split(/(\\s+)/); // Split by whitespace, capturing it\r\n    let result = [];\r\n    segments.forEach(segment => {\r\n        if (segment.match(/^\\s+$/)) {\r\n            // If the segment is purely whitespace\r\n            if (segment = \" \") {\r\n                segment = \"  \";\r\n            }\r\n            result.push(segment);\r\n        }\r\n        else if (rtlChar.test(segment)) {\r\n            // If the segment contains RTL characters, handle special splits\r\n            let parts = segment.split(splitPattern).filter(part => part !== '');\r\n            // Concatenate parts processed by the split pattern directly to result\r\n            result = result.concat(parts);\r\n        }\r\n        else {\r\n            // Treat this segment as LTR: split into characters\r\n            result = result.concat([...segment]);\r\n        }\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\r\nexport function getYearDay(date, utc = false) {\r\n    // TODO: utc needed?\r\n    utc;\r\n    const start = new Date(date.getFullYear(), 0, 0);\r\n    const diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n    return Math.floor(diff / oneDay);\r\n}\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\r\nexport function getWeek(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\r\n}\r\n/**\r\n * Returns a \"week year\" of the given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year of week\r\n * @since 5.3.0\r\n * @todo Account for UTC\r\n */\r\nexport function getWeekYear(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return firstDay.getFullYear();\r\n}\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\r\nexport function getMonthWeek(date, utc = false) {\r\n    const firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n    let currentWeek = getWeek(date, utc);\r\n    if (currentWeek == 1) {\r\n        currentWeek = 53;\r\n    }\r\n    return currentWeek - firstWeek + 1;\r\n}\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\r\nexport function getDayFromWeek(week, year, weekday = 1, utc = false) {\r\n    let date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n    if (utc) {\r\n        date.setUTCFullYear(year);\r\n    }\r\n    let day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n    return day;\r\n}\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\r\nexport function get12Hours(hours, base) {\r\n    if (hours > 12) {\r\n        hours -= 12;\r\n    }\r\n    else if (hours === 0) {\r\n        hours = 12;\r\n    }\r\n    return base != null ? hours + (base - 1) : hours;\r\n}\r\n/**\r\n * Returns a string name of the time zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\r\nexport function getTimeZone(date, long = false, savings = false, utc = false, timezone) {\r\n    if (utc) {\r\n        return long ? \"Coordinated Universal Time\" : \"UTC\";\r\n    }\r\n    else if (timezone) {\r\n        const d1 = date.toLocaleString(\"en-US\", { timeZone: timezone });\r\n        const d2 = date.toLocaleString(\"en-US\", { timeZone: timezone, timeZoneName: long ? \"long\" : \"short\" });\r\n        return trim(d2.substr(d1.length));\r\n    }\r\n    let wotz = date.toLocaleString(\"UTC\");\r\n    let wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n    //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n    if (savings === false) {\r\n        wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n    }\r\n    return trim(wtz);\r\n}\r\nexport function getTimezoneOffset(timezone, targetDate) {\r\n    const date = targetDate || new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\r\n    const utcDate = new Date(date.toLocaleString(\"en-US\", { timeZone: \"UTC\" }));\r\n    const tzDate = new Date(date.toLocaleString(\"en-US\", { timeZone: timezone }));\r\n    return (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\r\n}\r\nexport function capitalizeFirst(text) {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param h       The hue\r\n * @param s       The saturation\r\n * @param l       The lightness\r\n * @return The RGB representation\r\n */\r\nexport function hslToRgb(color) {\r\n    let r, g, b;\r\n    let h = color.h;\r\n    let s = color.s;\r\n    let l = color.l;\r\n    if (s == 0) {\r\n        r = g = b = l; // achromatic\r\n    }\r\n    else {\r\n        let hue2rgb = function hue2rgb(p, q, t) {\r\n            if (t < 0) {\r\n                t += 1;\r\n            }\r\n            if (t > 1) {\r\n                t -= 1;\r\n            }\r\n            if (t < 1 / 6) {\r\n                return p + (q - p) * 6 * t;\r\n            }\r\n            if (t < 1 / 2) {\r\n                return q;\r\n            }\r\n            if (t < 2 / 3) {\r\n                return p + (q - p) * (2 / 3 - t) * 6;\r\n            }\r\n            return p;\r\n        };\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n}\r\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param r       The red color value\r\n * @param g       The green color value\r\n * @param b       The blue color value\r\n * @return The HSL representation\r\n */\r\nexport function rgbToHsl(color) {\r\n    let r = color.r / 255;\r\n    let g = color.g / 255;\r\n    let b = color.b / 255;\r\n    let max = Math.max(r, g, b);\r\n    let min = Math.min(r, g, b);\r\n    let h = 0;\r\n    let s = 0;\r\n    let l = (max + min) / 2;\r\n    if (max === min) {\r\n        h = s = 0; // achromatic\r\n    }\r\n    else {\r\n        let d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return {\r\n        h: h,\r\n        s: s,\r\n        l: l,\r\n    };\r\n}\r\n/**\r\n * Converts HSV to HSL.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL\r\n */\r\nexport function hsvToHsl(hsv) {\r\n    const l = hsv.v * (1 - (hsv.s / 2));\r\n    const s = (l === 0 || l === 1\r\n        ? 0\r\n        : (hsv.v - l) / Math.min(l, 1 - l));\r\n    return {\r\n        h: hsv.h,\r\n        s,\r\n        l,\r\n        a: hsv.a,\r\n    };\r\n}\r\n/**\r\n * Converts HSL to HSV.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV\r\n */\r\nexport function hslToHsv(hsl) {\r\n    const v = hsl.l + (hsl.s * Math.min(hsl.l, 1 - hsl.l));\r\n    const s = (v === 0\r\n        ? 0\r\n        : 2 * (1 - (hsl.l / v)));\r\n    return {\r\n        h: hsl.h,\r\n        s,\r\n        v,\r\n        a: hsl.a,\r\n    };\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @param color    Reference color\r\n * @param percent  Brightness percent\r\n * @return Hex code of the new color\r\n */\r\nexport function lighten(rgb, percent) {\r\n    if (rgb) {\r\n        return {\r\n            r: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\r\n            g: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\r\n            b: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Gets lightness step.\r\n *\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getLightnessStep(value, percent) {\r\n    let base = percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @param color    Source color\r\n * @param percent  Brightness percent\r\n * @return New color\r\n */\r\nexport function brighten(rgb, percent) {\r\n    if (rgb) {\r\n        let base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\r\n        //let base = Math.max(rgb.r, rgb.g, rgb.b);\r\n        let step = getLightnessStep(base, percent);\r\n        return {\r\n            r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\r\n            g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\r\n            b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getBrightnessStep(_value, percent) {\r\n    let base = 255; //percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @param color  Source color\r\n * @return Light?\r\n */\r\nexport function isLight(color) {\r\n    return ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\r\n}\r\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @param color       Base color\r\n * @param saturation  Saturation (0-1)\r\n * @return New color\r\n */\r\nexport function saturate(rgb, saturation) {\r\n    if (rgb === undefined || saturation == 1) {\r\n        return rgb;\r\n    }\r\n    let hsl = rgbToHsl(rgb);\r\n    hsl.s = saturation;\r\n    return hslToRgb(hsl);\r\n}\r\n/**\r\n * Returns a color which contrasts more with the source `color`.\r\n *\r\n * @param  color             Base color\r\n * @param  lightAlternative  Light option\r\n * @param  darkAlternative   Dark option\r\n * @return New color\r\n */\r\nexport function alternativeColor(color, lightAlternative = { r: 255, g: 255, b: 255 }, darkAlternative = { r: 255, g: 255, b: 255 }) {\r\n    let light = lightAlternative;\r\n    let dark = darkAlternative;\r\n    if (isLight(darkAlternative)) {\r\n        light = darkAlternative;\r\n        dark = lightAlternative;\r\n    }\r\n    return isLight(color) ? dark : light;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function mergeTags(tags1, tags2) {\r\n    if (!tags1) {\r\n        tags1 = [];\r\n    }\r\n    return [...tags1, ...tags2].filter((value, index, self) => {\r\n        return self.indexOf(value) === index;\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function sameBounds(a, b) {\r\n    if (!b) {\r\n        return false;\r\n    }\r\n    if (a.left != b.left) {\r\n        return false;\r\n    }\r\n    if (a.right != b.right) {\r\n        return false;\r\n    }\r\n    if (a.top != b.top) {\r\n        return false;\r\n    }\r\n    if (a.bottom != b.bottom) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n", "import { __awaiter } from \"tslib\";\r\nimport { Percent } from \"./Percent\";\r\nimport { Color } from \"./Color\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $object from \"./Object\";\r\n/**\r\n * @ignore\r\n */\r\nexport function waitForAnimations(animations) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (animations !== undefined) {\r\n            const promises = [];\r\n            $object.each(animations, (_, animation) => {\r\n                promises.push(animation.waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function normalize(value, min, max) {\r\n    if (min === max) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function range(diff, from, to) {\r\n    return from + (diff * (to - from));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function defaultInterpolate(diff, from, to) {\r\n    if (diff >= 1) {\r\n        return to;\r\n    }\r\n    else {\r\n        return from;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function percentInterpolate(diff, from, to) {\r\n    return new Percent(range(diff, from.percent, to.percent));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function colorInterpolate(diff, from, to) {\r\n    return Color.interpolate(diff, from, to);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getInterpolate(from, to) {\r\n    if (typeof from === \"number\" && typeof to === \"number\") {\r\n        return range;\r\n    }\r\n    if (from instanceof Percent && to instanceof Percent) {\r\n        return percentInterpolate;\r\n    }\r\n    if (from instanceof Color && to instanceof Color) {\r\n        return colorInterpolate;\r\n    }\r\n    return defaultInterpolate;\r\n}\r\nexport var AnimationState;\r\n(function (AnimationState) {\r\n    AnimationState[AnimationState[\"Stopped\"] = 0] = \"Stopped\";\r\n    AnimationState[AnimationState[\"Playing\"] = 1] = \"Playing\";\r\n    AnimationState[AnimationState[\"Paused\"] = 2] = \"Paused\";\r\n})(AnimationState || (AnimationState = {}));\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimationTime {\r\n    constructor(entity, duration) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_playingDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_startingTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_current\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n        this._duration = duration;\r\n    }\r\n    _stopEvent() {\r\n        const type = \"stopped\";\r\n        if (this.events.isEnabled(type)) {\r\n            this.events.dispatch(type, { type: type, target: this });\r\n        }\r\n    }\r\n    _runAnimation(currentTime) {\r\n        if (this._playingDuration !== null) {\r\n            if (this._startingTime === null) {\r\n                this._startingTime = currentTime;\r\n                return AnimationState.Playing;\r\n            }\r\n            else {\r\n                const diff = (currentTime - this._startingTime) / this._playingDuration;\r\n                if (diff >= 1) {\r\n                    this._playingDuration = null;\r\n                    this._startingTime = null;\r\n                    this._from = this._to;\r\n                    this._current = this._to;\r\n                    this._entity.markDirty();\r\n                    this._stopEvent();\r\n                    const type = \"ended\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this });\r\n                    }\r\n                    return AnimationState.Stopped;\r\n                }\r\n                else {\r\n                    this._current = range(diff, this._from, this._to);\r\n                    this._entity.markDirty();\r\n                    const type = \"progress\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this, progress: diff });\r\n                    }\r\n                    return AnimationState.Playing;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return AnimationState.Stopped;\r\n        }\r\n    }\r\n    _play() {\r\n        this._from = this._current;\r\n        if (this._playingDuration === null) {\r\n            this._entity._root._addAnimation(this);\r\n            const type = \"started\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n        else {\r\n            this._startingTime = null;\r\n        }\r\n        this._playingDuration = Math.abs(this._to - this._from) * this._duration;\r\n    }\r\n    get duration() {\r\n        return this._duration;\r\n    }\r\n    set duration(value) {\r\n        if (this._duration !== value) {\r\n            this._duration = value;\r\n            if (value === 0) {\r\n                this.jumpTo(this._to);\r\n            }\r\n            else if (this._current !== this._to) {\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n    get current() {\r\n        if (this.easing) {\r\n            return this.easing(this._current);\r\n        }\r\n        else {\r\n            return this._current;\r\n        }\r\n    }\r\n    stop() {\r\n        this.jumpTo(this._current);\r\n    }\r\n    jumpTo(value) {\r\n        if (this._current !== value) {\r\n            this._entity.markDirty();\r\n        }\r\n        if (this._playingDuration !== null) {\r\n            this._stopEvent();\r\n        }\r\n        this._playingDuration = null;\r\n        this._startingTime = null;\r\n        this._current = value;\r\n        this._from = value;\r\n        this._to = value;\r\n    }\r\n    tweenTo(value) {\r\n        if (this._current === value || this._duration === 0) {\r\n            this.jumpTo(value);\r\n        }\r\n        else {\r\n            if (this._to !== value) {\r\n                this._to = value;\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n}\r\n/*export class AnimationValue extends AnimationTime {\r\n    public _min: number;\r\n    public _max: number;\r\n\r\n    constructor(entity: Entity, duration: number, min: number, max: number) {\r\n        super(entity, duration);\r\n        this._min = min;\r\n        this._max = max;\r\n    }\r\n\r\n    public get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    public set min(value: number) {\r\n        if (this._min !== value) {\r\n            this._min = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    public set max(value: number) {\r\n        if (this._max !== value) {\r\n            this._max = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public currentValue(): number {\r\n        return range(super.currentTime(), this._min, this._max);\r\n    }\r\n\r\n    public jumpToValue(value: number) {\r\n        super.jumpToTime(normalize(value, this._min, this._max));\r\n    }\r\n\r\n    public tweenToValue(value: number) {\r\n        super.tweenToTime(normalize(value, this._min, this._max));\r\n    }\r\n}\r\n*/\r\n", "import { range } from \"./Animation\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * @ignore\r\n */\r\nfunction string2hex(string) {\r\n    //string = cssColorNames[string.toLowerCase()] || string;\r\n    if (string[0] === \"#\") {\r\n        string = string.substr(1);\r\n    }\r\n    if (string.length == 3) {\r\n        string = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\r\n    }\r\n    return parseInt(string, 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function rgba2hex(color) {\r\n    color = color.replace(/[ ]/g, \"\");\r\n    // Init\r\n    let matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\r\n    // Try rgb() format\r\n    if (matches) {\r\n        matches.push(\"1\");\r\n    }\r\n    else {\r\n        matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\r\n        if (!matches) {\r\n            return 0x000000;\r\n        }\r\n    }\r\n    let hex = \"\";\r\n    for (let i = 1; i <= 3; i++) {\r\n        let val = parseInt(matches[i]).toString(16);\r\n        if (val.length == 1) {\r\n            val = \"0\" + val;\r\n        }\r\n        hex += val;\r\n    }\r\n    return string2hex(hex);\r\n}\r\n/**\r\n * Returns a new [[Color]] object base on input.\r\n *\r\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\r\n *\r\n * * `\"#f00\"`\r\n * * `\"#ff0000\"`\r\n * * `\"rgb(255, 0, 0)\"`\r\n * * `\"rgba(255, 0, 0, 1)\"`\r\n * * `0xff0000`\r\n *\r\n * @param   input  Input color\r\n * @return         Color\r\n */\r\nexport function color(input) {\r\n    return Color.fromAny(input);\r\n}\r\n/**\r\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\r\n * be used.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\r\n * @important\r\n */\r\nexport class Color {\r\n    constructor(hex) {\r\n        Object.defineProperty(this, \"_hex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._hex = hex | 0;\r\n    }\r\n    /**\r\n     * Color numeric value.\r\n     */\r\n    get hex() {\r\n        return this._hex;\r\n    }\r\n    /**\r\n     * Value of color's R channel.\r\n     * @return R value\r\n     */\r\n    get r() {\r\n        return this._hex >>> 16;\r\n    }\r\n    /**\r\n     * Value of color's G channel.\r\n     * @return G value\r\n     */\r\n    get g() {\r\n        return (this._hex >> 8) & 0xFF;\r\n    }\r\n    /**\r\n     * Value of color's B channel.\r\n     * @return B value\r\n     */\r\n    get b() {\r\n        return this._hex & 0xFF;\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\r\n     *\r\n     * @param   alpha  Opacity\r\n     * @return         CSS string\r\n     */\r\n    toCSS(alpha = 1) {\r\n        return \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `#rgb` string.\r\n     *\r\n     * @return         CSS string\r\n     */\r\n    toCSSHex() {\r\n        return \"#\" + $utils.padString(this.r.toString(16), 2) + $utils.padString(this.g.toString(16), 2) + $utils.padString(this.b.toString(16), 2);\r\n    }\r\n    /**\r\n     * Returns color's HSL info.\r\n     * @param   alpha Opacity\r\n     * @return        HSL info\r\n     */\r\n    toHSL(alpha = 1) {\r\n        return $utils.rgbToHsl({\r\n            r: this.r,\r\n            g: this.g,\r\n            b: this.b,\r\n            a: alpha\r\n        });\r\n    }\r\n    /**\r\n     * Converts HSL values into a new [[Color]] object.\r\n     *\r\n     * @param   h H value\r\n     * @param   s S value\r\n     * @param   l L value\r\n     * @return    Color object\r\n     */\r\n    static fromHSL(h, s, l) {\r\n        const rgb = $utils.hslToRgb({\r\n            h: h,\r\n            s: s,\r\n            l: l\r\n        });\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    toString() {\r\n        return this.toCSSHex();\r\n    }\r\n    /**\r\n     * Converts hex number into a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     *\r\n     * @param   hex  Hex color\r\n     * @return       Color\r\n     */\r\n    static fromHex(hex) {\r\n        return new Color(hex);\r\n    }\r\n    /**\r\n     * Converts RGB values to a new [[Color]] object.\r\n     *\r\n     * @param   r  R value\r\n     * @param   g  G value\r\n     * @param   b  B value\r\n     * @return     Color\r\n     */\r\n    static fromRGB(r, g, b) {\r\n        return new Color((b | 0) + (g << 8) + (r << 16));\r\n    }\r\n    /**\r\n     * Converts RGB string to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     *\r\n     * @param   s  RGB string\r\n     * @return     Color\r\n     */\r\n    static fromString(s) {\r\n        return new Color(string2hex(s));\r\n    }\r\n    /**\r\n     * Converts CSS rgba() syntax to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     *\r\n     * @param  {string} s [description]\r\n     * @return {Color}    [description]\r\n     */\r\n    static fromCSS(s) {\r\n        return new Color(rgba2hex(s));\r\n    }\r\n    /**\r\n     * Convert to color from virtually anything.\r\n     *\r\n     * Will throw an exception if unable to resolve the color.\r\n     *\r\n     * @param   s  Source\r\n     * @return     Color\r\n     */\r\n    static fromAny(s) {\r\n        if ($type.isString(s)) {\r\n            if (s[0] == \"#\") {\r\n                return Color.fromString(s);\r\n            }\r\n            else if (s.substr(0, 3) == \"rgb\") {\r\n                return Color.fromCSS(s);\r\n            }\r\n        }\r\n        else if ($type.isNumber(s)) {\r\n            return Color.fromHex(s);\r\n        }\r\n        else if (s instanceof Color) {\r\n            return Color.fromHex(s.hex);\r\n        }\r\n        throw new Error(\"Unknown color syntax: \" + s);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] object based on either `lightAlternative` or\r\n     * `darkAlternative` depending on which one is more contrasting with\r\n     * the `color`.\r\n     *\r\n     * @param   color             Reference color\r\n     * @param   lightAlternative  Light color\r\n     * @param   darkAlternative   Dark color\r\n     * @return                    Alternative color\r\n     */\r\n    static alternative(color, lightAlternative, darkAlternative) {\r\n        const rgb = $utils.alternativeColor({ r: color.r, g: color.g, b: color.b }, lightAlternative ? { r: lightAlternative.r, g: lightAlternative.g, b: lightAlternative.b } : undefined, darkAlternative ? { r: darkAlternative.r, g: darkAlternative.g, b: darkAlternative.b } : undefined);\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns an intermediate Color between two reference colors depending on\r\n     * the progress (`diff`) between the two.\r\n     *\r\n     * @param   diff  Progress\r\n     * @param   from  Source color\r\n     * @param   to    Target color\r\n     * @param   mode  Interpolation mode\r\n     * @return        Color\r\n     */\r\n    static interpolate(diff, from, to, mode = \"rgb\") {\r\n        if (mode == \"hsl\") {\r\n            const fromHSL = from.toHSL();\r\n            const toHSL = to.toHSL();\r\n            return Color.fromHSL(range(diff, fromHSL.h, toHSL.h), range(diff, fromHSL.s, toHSL.s), range(diff, fromHSL.l, toHSL.l));\r\n        }\r\n        else {\r\n            return Color.fromRGB(range(diff, from.r, to.r), range(diff, from.g, to.g), range(diff, from.b, to.b));\r\n        }\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] lightened by `percent` value.\r\n     *\r\n     * Use negative value to darken the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static lighten(color, percent) {\r\n        const rgb = $utils.lighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] brightened by `percent` value.\r\n     *\r\n     * Use negative value to dim the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static brighten(color, percent) {\r\n        const rgb = $utils.brighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] saturated by `percent` value.\r\n     *\r\n     * Value range is between `0` (fully desaturated), to `1` (full color).\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static saturate(color, percent) {\r\n        const rgb = $utils.saturate({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n}\r\n", "import { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n * @ignore\r\n */\r\nfunction checkBounds(index, len) {\r\n    if (!(index >= 0 && index < len)) {\r\n        throw new Error(\"Index out of bounds: \" + index);\r\n    }\r\n}\r\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\r\nexport class List {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param initial  Inital list of values to add to list\r\n     */\r\n    constructor(initial = []) {\r\n        /**\r\n         * List values.\r\n         */\r\n        Object.defineProperty(this, \"_values\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._values = initial;\r\n    }\r\n    /**\r\n     * An array of values in the list.\r\n     *\r\n     * Do not use this property to add values. Rather use dedicated methods, like\r\n     * `push()`, `removeIndex()`, etc.\r\n     *\r\n     * @readonly\r\n     * @return List values\r\n     */\r\n    get values() {\r\n        return this._values;\r\n    }\r\n    /**\r\n     * Checks if list contains specific item reference.\r\n     *\r\n     * @param item  Item to search for\r\n     * @return `true` if found, `false` if not found\r\n     */\r\n    contains(value) {\r\n        return this._values.indexOf(value) !== -1;\r\n    }\r\n    /**\r\n     * Removes specific item from the list.\r\n     *\r\n     * @param item An item to remove\r\n     */\r\n    removeValue(value) {\r\n        let i = 0;\r\n        let length = this._values.length;\r\n        while (i < length) {\r\n            // TODO handle NaN\r\n            if (this._values[i] === value) {\r\n                this.removeIndex(i);\r\n                --length;\r\n            }\r\n            else {\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Searches the list for specific item and returns its index.\r\n     *\r\n     * @param item  An item to search for\r\n     * @return Index or -1 if not found\r\n     */\r\n    indexOf(value) {\r\n        return $array.indexOf(this._values, value);\r\n    }\r\n    /**\r\n     * Number of items in list.\r\n     *\r\n     * @readonly\r\n     * @return Number of items\r\n     */\r\n    get length() {\r\n        return this._values.length;\r\n    }\r\n    /**\r\n     * Checks if there's a value at specific index.\r\n     *\r\n     * @param index  Index\r\n     * @return Value exists?\r\n     */\r\n    hasIndex(index) {\r\n        return index >= 0 && index < this._values.length;\r\n    }\r\n    /**\r\n     * Returns an item at specified index.\r\n     *\r\n     * @param index  Index\r\n     * @return List item\r\n     */\r\n    getIndex(index) {\r\n        return this._values[index];\r\n    }\r\n    _onPush(newValue) {\r\n        if (this.events.isEnabled(\"push\")) {\r\n            this.events.dispatch(\"push\", {\r\n                type: \"push\",\r\n                target: this,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.events.isEnabled(\"insertIndex\")) {\r\n            this.events.dispatch(\"insertIndex\", {\r\n                type: \"insertIndex\",\r\n                target: this,\r\n                index,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.events.isEnabled(\"setIndex\")) {\r\n            this.events.dispatch(\"setIndex\", {\r\n                type: \"setIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.events.isEnabled(\"removeIndex\")) {\r\n            this.events.dispatch(\"removeIndex\", {\r\n                type: \"removeIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue\r\n            });\r\n        }\r\n    }\r\n    _onMoveIndex(oldIndex, newIndex, value) {\r\n        if (this.events.isEnabled(\"moveIndex\")) {\r\n            this.events.dispatch(\"moveIndex\", {\r\n                type: \"moveIndex\",\r\n                target: this,\r\n                oldIndex,\r\n                newIndex,\r\n                value,\r\n            });\r\n        }\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.events.isEnabled(\"clear\")) {\r\n            this.events.dispatch(\"clear\", {\r\n                type: \"clear\",\r\n                target: this,\r\n                oldValues\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sets value at specific index.\r\n     *\r\n     * If there's already a value at the index, it is overwritten.\r\n     *\r\n     * @param index  Index\r\n     * @param value  New value\r\n     * @return New value\r\n     */\r\n    setIndex(index, value) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        // Do nothing if the old value and the new value are the same\r\n        if (oldValue !== value) {\r\n            this._values[index] = value;\r\n            this._onSetIndex(index, oldValue, value);\r\n        }\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Adds an item to the list at a specific index, which pushes all the other\r\n     * items further down the list.\r\n     *\r\n     * @param index Index\r\n     * @param item  An item to add\r\n     */\r\n    insertIndex(index, value) {\r\n        checkBounds(index, this._values.length + 1);\r\n        $array.insertIndex(this._values, index, value);\r\n        this._onInsertIndex(index, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    swap(a, b) {\r\n        const len = this._values.length;\r\n        checkBounds(a, len);\r\n        checkBounds(b, len);\r\n        if (a !== b) {\r\n            const value_a = this._values[a];\r\n            const value_b = this._values[b];\r\n            this._values[a] = value_b;\r\n            this._onSetIndex(a, value_a, value_b);\r\n            this._values[b] = value_a;\r\n            this._onSetIndex(b, value_b, value_a);\r\n        }\r\n    }\r\n    /**\r\n     * Removes a value at specific index.\r\n     *\r\n     * @param index  Index of value to remove\r\n     * @return Removed value\r\n     */\r\n    removeIndex(index) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        $array.removeIndex(this._values, index);\r\n        this._onRemoveIndex(index, oldValue);\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Moves an item to a specific index within the list.\r\n     *\r\n     * If the index is not specified it will move the item to the end of the\r\n     * list.\r\n     *\r\n     * @param value  Item to move\r\n     * @param index  Index to place item at\r\n     */\r\n    moveValue(value, toIndex) {\r\n        // TODO don't do anything if the desired index is the same as the current index\r\n        let index = this.indexOf(value);\r\n        // TODO remove all old values rather than only the first ?\r\n        if (index !== -1) {\r\n            $array.removeIndex(this._values, index);\r\n            if (toIndex == null) {\r\n                const toIndex = this._values.length;\r\n                this._values.push(value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n            else {\r\n                $array.insertIndex(this._values, toIndex, value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n        }\r\n        else if (toIndex == null) {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        }\r\n        else {\r\n            $array.insertIndex(this._values, toIndex, value);\r\n            this._onInsertIndex(toIndex, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item to the end of the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    push(value) {\r\n        this._values.push(value);\r\n        this._onPush(value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item as a first item in the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    unshift(value) {\r\n        this.insertIndex(0, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds multiple items to the list.\r\n     *\r\n     * @param items  An Array of items to add\r\n     */\r\n    pushAll(values) {\r\n        $array.each(values, (value) => {\r\n            this.push(value);\r\n        });\r\n    }\r\n    /**\r\n     * Copies and adds items from abother list.\r\n     *\r\n     * @param source  A list top copy items from\r\n     */\r\n    copyFrom(source) {\r\n        this.pushAll(source._values);\r\n    }\r\n    /**\r\n     * Returns the last item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    pop() {\r\n        let index = this._values.length - 1;\r\n        return index < 0 ? undefined : this.removeIndex(this._values.length - 1);\r\n    }\r\n    /**\r\n     * Returns the first item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    shift() {\r\n        return this._values.length ? this.removeIndex(0) : undefined;\r\n    }\r\n    /**\r\n     * Sets multiple items to the list.\r\n     *\r\n     * All current items are removed.\r\n     *\r\n     * @param newArray  New items\r\n     */\r\n    setAll(newArray) {\r\n        const old = this._values;\r\n        this._values = [];\r\n        this._onClear(old);\r\n        $array.each(newArray, (value) => {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        });\r\n    }\r\n    /**\r\n     * Removes all items from the list.\r\n     */\r\n    clear() {\r\n        this.setAll([]);\r\n    }\r\n    /**\r\n     * Returns an ES6 iterator for the list.\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const length = this._values.length;\r\n        for (let i = 0; i < length; ++i) {\r\n            yield this._values[i];\r\n        }\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    each(f) {\r\n        $array.each(this._values, f);\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list, from right to left.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    eachReverse(f) {\r\n        $array.eachReverse(this._values, f);\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] where the elements are disposed automatically when\r\n * removed from the list, unless `autoDispose` is set to `false`.\r\n */\r\nexport class ListAutoDispose extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Automatically disposes elements that are removed from the list.\r\n         *\r\n         * @default true\r\n         */\r\n        Object.defineProperty(this, \"autoDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onRemoveIndex(index, oldValue);\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.autoDispose) {\r\n            $array.each(oldValues, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n        super._onClear(oldValues);\r\n    }\r\n    _dispose() {\r\n        if (this.autoDispose) {\r\n            $array.each(this._values, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] that is able to create new elements as well as\r\n * apply additional settings to newly created items.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\r\n */\r\nexport class ListTemplate extends ListAutoDispose {\r\n    constructor(template, make) {\r\n        super();\r\n        Object.defineProperty(this, \"template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"make\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.template = template;\r\n        this.make = make;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this.autoDispose) {\r\n            this.template.dispose();\r\n        }\r\n    }\r\n}\r\n", "import { isNumber } from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport const PI = Math.PI;\r\nexport const HALFPI = PI / 2;\r\nexport const RADIANS = PI / 180;\r\nexport const DEGREES = 180 / PI;\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\r\nexport function round(value, precision, floor) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        let rounded = Math.round(value);\r\n        if (floor) {\r\n            if (rounded - value == 0.5) {\r\n                rounded--;\r\n            }\r\n        }\r\n        return rounded;\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.round(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\r\nexport function ceil(value, precision) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        return Math.ceil(value);\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.ceil(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointA(p0, p1, p2, tensionX, tensionY) {\r\n    return { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointB(p1, p2, p3, tensionX, tensionY) {\r\n    return { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\nexport function fitToRange(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n/**\r\n * Returns sine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function sin(angle) {\r\n    return Math.sin(RADIANS * angle);\r\n}\r\n/**\r\n * Returns tan of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function tan(angle) {\r\n    return Math.tan(RADIANS * angle);\r\n}\r\n/**\r\n * Returns cosine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\r\nexport function cos(angle) {\r\n    return Math.cos(RADIANS * angle);\r\n}\r\n// 0 to 360\r\nexport function normalizeAngle(value) {\r\n    value = value % 360;\r\n    if (value < 0) {\r\n        value += 360;\r\n    }\r\n    return value;\r\n}\r\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\r\nexport function getArcBounds(cx, cy, startAngle, endAngle, radius) {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let bpoints = [];\r\n    bpoints.push(getArcPoint(radius, startAngle));\r\n    bpoints.push(getArcPoint(radius, endAngle));\r\n    let fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\r\n    let toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\r\n    for (let angle = fromAngle; angle <= toAngle; angle += 90) {\r\n        if (angle >= startAngle && angle <= endAngle) {\r\n            bpoints.push(getArcPoint(radius, angle));\r\n        }\r\n    }\r\n    for (let i = 0; i < bpoints.length; i++) {\r\n        let pt = bpoints[i];\r\n        if (pt.x < minX) {\r\n            minX = pt.x;\r\n        }\r\n        if (pt.y < minY) {\r\n            minY = pt.y;\r\n        }\r\n        if (pt.x > maxX) {\r\n            maxX = pt.x;\r\n        }\r\n        if (pt.y > maxY) {\r\n            maxY = pt.y;\r\n        }\r\n    }\r\n    return ({ left: cx + minX, top: cy + minY, right: cx + maxX, bottom: cy + maxY });\r\n}\r\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\r\nexport function getArcPoint(radius, arc) {\r\n    return ({ x: radius * cos(arc), y: radius * sin(arc) });\r\n}\r\nexport function mergeBounds(bounds) {\r\n    const len = bounds.length;\r\n    if (len > 0) {\r\n        let bound = bounds[0];\r\n        let left = bound.left;\r\n        let top = bound.top;\r\n        let right = bound.right;\r\n        let bottom = bound.bottom;\r\n        if (len > 1) {\r\n            for (let i = 1; i < len; i++) {\r\n                bound = bounds[i];\r\n                left = Math.min(bound.left, left);\r\n                right = Math.max(bound.right, right);\r\n                top = Math.min(bound.top, top);\r\n                bottom = Math.max(bound.bottom, bottom);\r\n            }\r\n        }\r\n        return { left, right, top, bottom };\r\n    }\r\n    return { left: 0, right: 0, top: 0, bottom: 0 };\r\n}\r\nexport function fitAngleToRange(value, startAngle, endAngle) {\r\n    if (startAngle > endAngle) {\r\n        let temp = startAngle;\r\n        startAngle = endAngle;\r\n        endAngle = temp;\r\n    }\r\n    value = normalizeAngle(value);\r\n    let count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n    if (value < startAngle) {\r\n        value += 360 * (count + 1);\r\n    }\r\n    let maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\r\n    let maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\r\n    if (value > endAngle) {\r\n        if (value - 360 > startAngle) {\r\n            value -= 360;\r\n        }\r\n        else {\r\n            if (value < maxEnd) {\r\n                value = endAngle;\r\n            }\r\n            else {\r\n                value = startAngle;\r\n            }\r\n        }\r\n    }\r\n    if (value < startAngle) {\r\n        if (value > maxStart) {\r\n            value = startAngle;\r\n        }\r\n        else {\r\n            value = endAngle;\r\n        }\r\n    }\r\n    return value;\r\n}\r\nexport function inBounds(point, bounds) {\r\n    if (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function getAngle(point1, point2) {\r\n    if (!point2) {\r\n        point2 = { x: point1.x * 2, y: point1.y * 2 };\r\n    }\r\n    let diffX = point2.x - point1.x;\r\n    let diffY = point2.y - point1.y;\r\n    let angle = Math.atan2(diffY, diffX) * DEGREES;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    return normalizeAngle(angle);\r\n}\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {\r\n    let x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n    let y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n    return { x: x, y: y };\r\n}\r\nexport function getPointOnLine(pointA, pointB, position) {\r\n    return { x: pointA.x + (pointB.x - pointA.x) * position, y: pointA.y + (pointB.y - pointA.y) * position };\r\n}\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\r\nexport function closest(values, referenceValue) {\r\n    return values.reduce(function (prev, curr) {\r\n        return (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n    });\r\n}\r\n/**\r\n * Returns true if bounds overlap\r\n * @param bounds1 IBounds\r\n * @param bounds2 IBounds\r\n * @returns boolean\r\n */\r\nexport function boundsOverlap(bounds1, bounds2) {\r\n    const horizontalOverlap = bounds1.left < bounds2.right && bounds1.right > bounds2.left;\r\n    const verticalOverlap = bounds1.top < bounds2.bottom && bounds1.bottom > bounds2.top;\r\n    return horizontalOverlap && verticalOverlap;\r\n}\r\n/**\r\n * Generates points of a spiral\r\n * @param cx\r\n * @param cy\r\n * @param radius\r\n * @param radiusY\r\n * @param innerRadius\r\n * @param step\r\n * @param radiusStep\r\n * @param startAngle\r\n * @param endAngle\r\n * @returns IPoint[]\r\n */\r\nexport function spiralPoints(cx, cy, radius, radiusY, innerRadius, step, radiusStep, startAngle, endAngle) {\r\n    let r = innerRadius + 0.01;\r\n    let angle = startAngle * RADIANS;\r\n    let points = [];\r\n    while (r < radius + radiusStep) {\r\n        let stepSize = step;\r\n        if (stepSize / 2 > r) {\r\n            stepSize = 2 * r;\r\n        }\r\n        angle += 2 * Math.asin(stepSize / 2 / r);\r\n        if (angle * DEGREES > endAngle + ((radius - innerRadius) / radiusStep) * 360) {\r\n            break;\r\n        }\r\n        let degrees = angle * DEGREES;\r\n        let point = { x: cx + r * Math.cos(angle), y: cy + r * radiusY / radius * Math.sin(angle) };\r\n        points.push(point);\r\n        r = innerRadius + degrees / 360 * radiusStep;\r\n    }\r\n    points.shift();\r\n    return points;\r\n}\r\n/**\r\n * Returns true if circles overlap\r\n * @param circle1\r\n * @param circle2\r\n * @returns boolean\r\n */\r\nexport function circlesOverlap(circle1, circle2) {\r\n    return Math.hypot(circle1.x - circle2.x, circle1.y - circle2.y) <= circle1.radius + circle2.radius;\r\n}\r\n", "/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer in the documentation\r\n *\tand/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *\tcontributors may be used to endorse or promote products derived from this\r\n *\tsoftware without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function linear(t) {\r\n    return t;\r\n}\r\nexport function quad(t) {\r\n    return t * t;\r\n}\r\nexport function cubic(t) {\r\n    return t * t * t;\r\n}\r\nexport function pow(t, e) {\r\n    return Math.pow(t, e);\r\n}\r\nexport function exp(t) {\r\n    return Math.pow(2, 10 * t - 10);\r\n}\r\nexport function sine(t) {\r\n    return 1 - Math.cos(t * $math.HALFPI);\r\n}\r\nexport function circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n}\r\n/**\r\n * ============================================================================\r\n * TRANSFORMERS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function yoyo(ease) {\r\n    return function (t) {\r\n        if (t < 0.5) {\r\n            return ease(t * 2.0);\r\n        }\r\n        else {\r\n            return ease((1.0 - t) * 2.0);\r\n        }\r\n    };\r\n}\r\nexport function out(ease) {\r\n    return function (t) {\r\n        return 1.0 - ease(1.0 - t);\r\n    };\r\n}\r\nexport function inOut(ease) {\r\n    return function (t) {\r\n        if (t <= 0.5) {\r\n            return ease(t * 2.0) / 2.0;\r\n        }\r\n        else {\r\n            return 1.0 - (ease((1.0 - t) * 2.0) / 2.0);\r\n        }\r\n    };\r\n}\r\n/**\r\n * ============================================================================\r\n * BOUNCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet b1 = 4 / 11, b2 = 6 / 11, b3 = 8 / 11, b4 = 3 / 4, b5 = 9 / 11, b6 = 10 / 11, b7 = 15 / 16, b8 = 21 / 22, b9 = 63 / 64, b0 = 1 / b1 / b1;\r\nexport function bounce(t) {\r\n    return 1 - bounceOut(1 - t);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction bounceOut(t) {\r\n    t = t;\r\n    if (t < b1) {\r\n        return b0 * t * t;\r\n    }\r\n    else if (t < b3) {\r\n        return b0 * (t -= b2) * t + b4;\r\n    }\r\n    else if (t < b6) {\r\n        return b0 * (t -= b5) * t + b7;\r\n    }\r\n    else {\r\n        return b0 * (t -= b8) * t + b9;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * ELASTIC\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore\r\n */\r\nlet tau = 2 * Math.PI;\r\n/**\r\n * @ignore\r\n */\r\nlet amplitude = 1;\r\n/**\r\n * @ignore\r\n */\r\nlet period = 0.3 / tau;\r\n/**\r\n * @ignore\r\n */\r\nlet s = Math.asin(1 / amplitude) * period;\r\nexport function elastic(t) {\r\n    let v = t;\r\n    return amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\r\n}\r\n", "/**\r\n * @ignore\r\n */\r\nexport class Registry {\r\n    constructor() {\r\n        /**\r\n         * Currently running version of amCharts.\r\n         */\r\n        Object.defineProperty(this, \"version\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"5.11.2\"\r\n        });\r\n        /**\r\n         * List of applied licenses.\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"licenses\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * All created [[Root]] elements.\r\n         */\r\n        Object.defineProperty(this, \"rootElements\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\n/**\r\n    * @ignore\r\n */\r\nexport const registry = new Registry();\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license) {\r\n    registry.licenses.push(license);\r\n}\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nexport function disposeAllRootElements() {\r\n    let root;\r\n    while (root = registry.rootElements.pop()) {\r\n        root.dispose();\r\n    }\r\n}\r\n/**\r\n * Finds and returns a `Root` element assigned to a container with `id`.\r\n *\r\n * @param   id  Container ID\r\n * @return      Root\r\n * @since 5.9.2\r\n */\r\nexport function getRootById(id) {\r\n    let found;\r\n    registry.rootElements.forEach((item) => {\r\n        if (item.dom.id == id) {\r\n            found = item;\r\n        }\r\n    });\r\n    return found;\r\n}\r\n", "import * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\n/**\r\n * An object representing a collection of setting values to apply as required.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class State {\r\n    constructor(entity, settings) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_userSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n        this._settings = settings;\r\n        $object.each(settings, (key) => {\r\n            this._userSettings[key] = true;\r\n        });\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` to be set when the state\r\n     * is applied.\r\n     *\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userSettings[key] = true;\r\n        this.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userSettings[key];\r\n        delete this._settings[key];\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this.set(key, settings[key]);\r\n        });\r\n    }\r\n    _eachSetting(f) {\r\n        $object.each(this._settings, f);\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * All setting values are set immediately.\r\n     */\r\n    apply() {\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this !== defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                this._entity.set(key, value);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @return           Animations\r\n     */\r\n    applyAnimate(duration) {\r\n        if (duration == null) {\r\n            duration = this._settings.stateAnimationDuration;\r\n        }\r\n        if (duration == null) {\r\n            duration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\r\n        }\r\n        let easing = this._settings.stateAnimationEasing;\r\n        if (easing == null) {\r\n            easing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $ease.cubic));\r\n        }\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const animations = {};\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this != defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                const animation = this._entity.animate({\r\n                    key: key,\r\n                    to: value,\r\n                    duration: duration,\r\n                    easing: easing\r\n                });\r\n                if (animation) {\r\n                    animations[key] = animation;\r\n                }\r\n            }\r\n        });\r\n        return animations;\r\n    }\r\n}\r\n/**\r\n * Collection of [[State]] objects for an element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class States {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Checks if a state by `name` exists. Returns it there is one.\r\n     *\r\n     * @param  name  State name\r\n     * @return       State\r\n     */\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    /**\r\n     * Sets supplied `settings` on a state by the `name`.\r\n     *\r\n     * If such state does not yet exists, it is created.\r\n     *\r\n     * @param   name      State name\r\n     * @param   settings  Settings\r\n     * @return            New State\r\n     */\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new State(this._entity, settings);\r\n            this._states[name] = state;\r\n            return state;\r\n        }\r\n    }\r\n    /**\r\n     * Removes the state called `name`.\r\n     *\r\n     * @param   name      State name\r\n     */\r\n    remove(name) {\r\n        delete this._states[name];\r\n    }\r\n    /**\r\n     * Applies a named state to the target element.\r\n     *\r\n     * @param  newState  State name\r\n     */\r\n    apply(newState) {\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            state.apply();\r\n        }\r\n        this._entity._applyState(newState);\r\n    }\r\n    /**\r\n     * Applies a named state to the element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @param   newState  State name\r\n     * @return            Animations\r\n     */\r\n    applyAnimate(newState, duration) {\r\n        let animations;\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            animations = state.applyAnimate(duration);\r\n        }\r\n        this._entity._applyStateAnimated(newState, duration);\r\n        return animations;\r\n    }\r\n}\r\n", "import { Disposer } from \"./Disposer\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport { AnimationState, getInterpolate } from \"./Animation\";\r\nimport { States } from \"./States\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\nimport * as $array from \"./Array\";\r\nimport * as $order from \"./Order\";\r\n/**\r\n * Allows to dynamically modify setting value of its target element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n */\r\nexport class Adapters {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Add a function (`callback`) that will modify value for setting `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n     */\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        this._entity._markDirtyKey(key);\r\n        return new Disposer(() => {\r\n            if ($array.removeFirst(callbacks, callback)) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes all adapters for the specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n            if (callbacks.length !== 0) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Enables (previously disabled) adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    enable(key) {\r\n        if (this._disabled[key]) {\r\n            delete this._disabled[key];\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * Disables all adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    disable(key) {\r\n        if (!this._disabled[key]) {\r\n            this._disabled[key] = true;\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fold(key, value) {\r\n        if (!this._disabled[key]) {\r\n            const callbacks = this._callbacks[key];\r\n            if (callbacks !== undefined) {\r\n                for (let i = 0, len = callbacks.length; i < len; ++i) {\r\n                    value = callbacks[i](value, this._entity, key);\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n}\r\n/**\r\n * Animation object.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\r\n */\r\nexport class Animation {\r\n    constructor(animation, from, to, duration, easing, loops, startingTime) {\r\n        Object.defineProperty(this, \"_animation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_loops\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_interpolate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_oldTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_time\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_stopped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_playing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._animation = animation;\r\n        this._from = from;\r\n        this._to = to;\r\n        this._duration = duration;\r\n        this._easing = easing;\r\n        this._loops = loops;\r\n        this._interpolate = getInterpolate(from, to);\r\n        this._oldTime = startingTime;\r\n    }\r\n    get to() {\r\n        return this._to;\r\n    }\r\n    get from() {\r\n        return this._from;\r\n    }\r\n    get playing() {\r\n        return this._playing;\r\n    }\r\n    get stopped() {\r\n        return this._stopped;\r\n    }\r\n    stop() {\r\n        if (!this._stopped) {\r\n            this._stopped = true;\r\n            this._playing = false;\r\n            if (this.events.isEnabled(\"stopped\")) {\r\n                this.events.dispatch(\"stopped\", {\r\n                    type: \"stopped\",\r\n                    target: this,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    pause() {\r\n        this._playing = false;\r\n        this._oldTime = null;\r\n    }\r\n    play() {\r\n        if (!this._stopped && !this._playing) {\r\n            this._playing = true;\r\n            this._animation._startAnimation();\r\n        }\r\n    }\r\n    get percentage() {\r\n        return this._time / this._duration;\r\n    }\r\n    waitForStop() {\r\n        return new Promise((resolve, _reject) => {\r\n            if (this._stopped) {\r\n                resolve();\r\n            }\r\n            else {\r\n                const listener = () => {\r\n                    stopped.dispose();\r\n                    resolve();\r\n                };\r\n                const stopped = this.events.on(\"stopped\", listener);\r\n            }\r\n        });\r\n    }\r\n    _checkEnded() {\r\n        if (this._loops > 1) {\r\n            --this._loops;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _run(currentTime) {\r\n        if (this._oldTime !== null) {\r\n            this._time += currentTime - this._oldTime;\r\n            if (this._time > this._duration) {\r\n                this._time = this._duration;\r\n            }\r\n        }\r\n        this._oldTime = currentTime;\r\n    }\r\n    _reset(currentTime) {\r\n        this._oldTime = currentTime;\r\n        this._time = 0;\r\n    }\r\n    _value(diff) {\r\n        return this._interpolate(this._easing(diff), this._from, this._to);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nlet counter = 0;\r\n/**\r\n * Base class for [[Entity]] objects that support Settings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n */\r\nexport class Settings {\r\n    constructor(settings) {\r\n        /**\r\n         * Unique ID.\r\n         */\r\n        Object.defineProperty(this, \"uid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: ++counter\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO move this into Entity\r\n        Object.defineProperty(this, \"_userProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * If this is set to `false` then disposing does nothing, it's a no-op.\r\n         */\r\n        Object.defineProperty(this, \"enableDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._settings = settings;\r\n    }\r\n    _checkDirty() {\r\n        $object.keys(this._settings).forEach((key) => {\r\n            this._userProperties[key] = true;\r\n            this._markDirtyKey(key);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetUserSettings() {\r\n        this._userProperties = {};\r\n    }\r\n    _runAnimation(currentTime) {\r\n        let state = AnimationState.Stopped;\r\n        if (!this.isDisposed()) {\r\n            let playing = false;\r\n            let paused = false;\r\n            $object.each(this._animatingSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimation(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.set(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._set(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._set(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            $object.each(this._animatingPrivateSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimationPrivate(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.setPrivate(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._setPrivate(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._setPrivate(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            if (playing) {\r\n                state = AnimationState.Playing;\r\n            }\r\n            else if (paused) {\r\n                state = AnimationState.Paused;\r\n            }\r\n        }\r\n        return state;\r\n    }\r\n    _markDirtyKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    _markDirtyPrivateKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of settings changes\r\n     * or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    off(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            $array.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._settingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of private settings\r\n     * changes or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a private setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    offPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            $array.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._privateSettingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getRaw(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the setting exists.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key        Settings key\r\n     * @return  {boolean}  Key exists\r\n     */\r\n    has(key) {\r\n        return key in this._settings;\r\n    }\r\n    get(key, fallback) {\r\n        return this.getRaw(key, fallback);\r\n    }\r\n    _sendKeyEvent(key, value) {\r\n        const events = this._settingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    _sendPrivateKeyEvent(key, value) {\r\n        const events = this._privateSettingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setRaw(key, old, value) {\r\n        this._prevSettings[key] = old;\r\n        this._sendKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _set(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n            this._markDirtyKey(key);\r\n        }\r\n    }\r\n    _stopAnimation(key) {\r\n        const animation = this._animatingSettings[key];\r\n        if (animation) {\r\n            delete this._animatingSettings[key];\r\n            animation.stop();\r\n        }\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._set(key, value);\r\n        this._stopAnimation(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            this._prevSettings[key] = this._settings[key];\r\n            delete this._settings[key];\r\n            this._sendKeyEvent(key, undefined);\r\n            this._markDirtyKey(key);\r\n        }\r\n        this._stopAnimation(key);\r\n    }\r\n    /**\r\n     * Removes all keys;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     */\r\n    removeAll() {\r\n        $array.each($object.keys(this._settings), (key) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    /**\r\n     * Returns a value of a private setting.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n     */\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivateRaw(key, old, value) {\r\n        this._prevPrivateSettings[key] = old;\r\n        this._sendPrivateKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivate(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n    }\r\n    _stopAnimationPrivate(key) {\r\n        const animation = this._animatingPrivateSettings[key];\r\n        if (animation) {\r\n            animation.stop();\r\n            delete this._animatingPrivateSettings[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._setPrivate(key, value);\r\n        this._stopAnimationPrivate(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            this._prevPrivateSettings[key] = this._privateSettings[key];\r\n            delete this._privateSettings[key];\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n        this._stopAnimationPrivate(key);\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.each(settings, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * Animates setting values from current/start values to new ones.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n     * @param   options  Animation options\r\n     * @return           Animation object\r\n     */\r\n    animate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.get(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.set(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.set(key, to);\r\n            }\r\n            else {\r\n                this.set(key, from);\r\n                const animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    animatePrivate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.getPrivate(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.setPrivate(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.setPrivate(key, to);\r\n            }\r\n            else {\r\n                this.setPrivate(key, from);\r\n                const animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    _dispose() { }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (this.enableDispose && !this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * Base class.\r\n *\r\n * @important\r\n */\r\nexport class Entity extends Settings {\r\n    /**\r\n     * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n     *\r\n     * Use static method `Class.new()` instead.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @ignore\r\n     */\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(settings);\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_user_id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        }); // for testing purposes\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new States(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Adapters(this)\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createEvents()\r\n        });\r\n        Object.defineProperty(this, \"_userPrivateProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPrivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Templates for the themes\r\n        Object.defineProperty(this, \"_templates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Internal templates which can be overridden by the user's templates\r\n        Object.defineProperty(this, \"_internalTemplates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Default themes which can be overridden by the user's themes\r\n        Object.defineProperty(this, \"_defaultThemes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Disposers for all of the templates\r\n        Object.defineProperty(this, \"_templateDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Whether the template setup function should be run\r\n        Object.defineProperty(this, \"_runSetup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposerProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._root = root;\r\n        this._internalTemplates = templates;\r\n        if (settings.id) {\r\n            this._registerId(settings.id);\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root, settings, template) {\r\n        const x = (new this(root, settings, true));\r\n        x._template = template;\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    static _new(root, settings, templates = []) {\r\n        const x = (new this(root, settings, true, templates));\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    _afterNew() {\r\n        this._checkDirty();\r\n        let shouldApply = false;\r\n        const template = this._template;\r\n        if (template) {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        });\r\n        if (shouldApply) {\r\n            this._applyTemplates(false);\r\n        }\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n    }\r\n    // This is the same as _afterNew, except it also applies the themes.\r\n    // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\r\n    _afterNewApplyThemes() {\r\n        this._checkDirty();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._setObjectTemplate(this);\r\n        });\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n        this._applyThemes();\r\n    }\r\n    _createEvents() {\r\n        return new EventDispatcher();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get classNames() {\r\n        return this.constructor.classNames;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get className() {\r\n        return this.constructor.className;\r\n    }\r\n    _setDefaults() {\r\n    }\r\n    _setDefaultFn(key, f) {\r\n        const value = this.get(key);\r\n        if (value) {\r\n            return value;\r\n        }\r\n        else {\r\n            const value = f();\r\n            this.set(key, value);\r\n            return value;\r\n        }\r\n    }\r\n    _setDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.set(key, value);\r\n        }\r\n    }\r\n    _setRawDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.setRaw(key, value);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            this._dirty[key] = false;\r\n        });\r\n        $object.keys(this._dirtyPrivate).forEach((key) => {\r\n            this._dirtyPrivate[key] = false;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isDirty(key) {\r\n        return !!this._dirty[key];\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isPrivateDirty(key) {\r\n        return !!this._dirtyPrivate[key];\r\n    }\r\n    _markDirtyKey(key) {\r\n        this._dirty[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        this._dirtyPrivate[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    /**\r\n     * Checks if element is of certain class (or inherits one).\r\n     *\r\n     * @param   type  Class name to check\r\n     * @return {boolean} Is of class?\r\n     */\r\n    isType(type) {\r\n        return this.classNames.indexOf(type) !== -1;\r\n    }\r\n    _pushPropertyDisposer(key, disposer) {\r\n        let disposers = this._disposerProperties[key];\r\n        if (disposers === undefined) {\r\n            disposers = this._disposerProperties[key] = [];\r\n        }\r\n        disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _disposeProperty(key) {\r\n        const disposers = this._disposerProperties[key];\r\n        if (disposers !== undefined) {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n            delete this._disposerProperties[key];\r\n        }\r\n    }\r\n    /**\r\n     * @todo needs description\r\n     * @param  value  Template\r\n     */\r\n    set template(value) {\r\n        const template = this._template;\r\n        if (template !== value) {\r\n            this._template = value;\r\n            if (template) {\r\n                template._removeObjectTemplate(this);\r\n            }\r\n            if (value) {\r\n                value._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    get template() {\r\n        return this._template;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this._root._addDirtyEntity(this);\r\n    }\r\n    _startAnimation() {\r\n        this._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this._root.animationTime;\r\n    }\r\n    _applyState(_name) { }\r\n    _applyStateAnimated(_name, _duration) { }\r\n    get(key, fallback) {\r\n        const value = this.adapters.fold(key, this._settings[key]);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isUserSetting(key) {\r\n        return this._userProperties[key] || false;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userProperties[key] = true;\r\n        return super.set(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._userProperties[key] = true;\r\n        super.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    _setSoft(key, value) {\r\n        if (!this._userProperties[key]) {\r\n            return super.set(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userProperties[key];\r\n        this._removeTemplateProperty(key);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        return super.setPrivate(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        super.setPrivateRaw(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        delete this._userPrivateProperties[key];\r\n        this._removeTemplatePrivateProperty(key);\r\n    }\r\n    _setTemplateProperty(template, key, value) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (template === match) {\r\n                super.set(key, value);\r\n            }\r\n        }\r\n    }\r\n    _setTemplatePrivateProperty(template, key, value) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (template === match) {\r\n                super.setPrivate(key, value);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplateProperty(key) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.set(key, match._settings[key]);\r\n            }\r\n            else {\r\n                super.remove(key);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplatePrivateProperty(key) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.setPrivate(key, match._privateSettings[key]);\r\n            }\r\n            else {\r\n                super.removePrivate(key);\r\n            }\r\n        }\r\n    }\r\n    _walkParents(f) {\r\n        f(this._root._rootContainer);\r\n        f(this);\r\n    }\r\n    // TODO faster version of this method which is specialized to just 1 key\r\n    _applyStateByKey(name) {\r\n        const other = this.states.create(name, {});\r\n        const seen = {};\r\n        this._eachTemplate((template) => {\r\n            const state = template.states.lookup(name);\r\n            if (state) {\r\n                state._apply(other, seen);\r\n            }\r\n        });\r\n        $object.each(other._settings, (key) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                other.remove(key);\r\n            }\r\n        });\r\n    }\r\n    _applyTemplate(template, state) {\r\n        this._templateDisposers.push(template._apply(this, state));\r\n        $object.each(template._settings, (key, value) => {\r\n            if (!state.settings[key] && !this._userProperties[key]) {\r\n                state.settings[key] = true;\r\n                super.set(key, value);\r\n            }\r\n        });\r\n        $object.each(template._privateSettings, (key, value) => {\r\n            if (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\r\n                state.privateSettings[key] = true;\r\n                super.setPrivate(key, value);\r\n            }\r\n        });\r\n        if (this._runSetup && template.setup) {\r\n            this._runSetup = false;\r\n            template.setup(this);\r\n        }\r\n    }\r\n    /**\r\n     * Calls the closure with each template and returns the first template which is true\r\n     */\r\n    _findStaticTemplate(f) {\r\n        if (this._template) {\r\n            if (f(this._template)) {\r\n                return this._template;\r\n            }\r\n        }\r\n    }\r\n    _eachTemplate(f) {\r\n        this._findStaticTemplate((template) => {\r\n            f(template);\r\n            return false;\r\n        });\r\n        // _internalTemplates is sorted with most specific to the right\r\n        $array.eachReverse(this._internalTemplates, f);\r\n        // _templates is sorted with most specific to the left\r\n        $array.each(this._templates, f);\r\n    }\r\n    _applyTemplates(remove = true) {\r\n        if (remove) {\r\n            this._disposeTemplates();\r\n        }\r\n        const state = {\r\n            settings: {},\r\n            privateSettings: {},\r\n            states: {},\r\n        };\r\n        this._eachTemplate((template) => {\r\n            this._applyTemplate(template, state);\r\n        });\r\n        if (remove) {\r\n            $object.each(this._settings, (key) => {\r\n                if (!this._userProperties[key] && !state.settings[key]) {\r\n                    super.remove(key);\r\n                }\r\n            });\r\n            $object.each(this._privateSettings, (key) => {\r\n                if (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\r\n                    super.removePrivate(key);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _findTemplate(f) {\r\n        const value = this._findStaticTemplate(f);\r\n        if (value === undefined) {\r\n            // _internalTemplates is sorted with most specific to the right\r\n            const value = $array.findReverse(this._internalTemplates, f);\r\n            if (value === undefined) {\r\n                // _templates is sorted with most specific to the left\r\n                return $array.find(this._templates, f);\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    _findTemplateByKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._settings;\r\n        });\r\n    }\r\n    _findTemplateByPrivateKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._privateSettings;\r\n        });\r\n    }\r\n    _disposeTemplates() {\r\n        $array.each(this._templateDisposers, (disposer) => {\r\n            disposer.dispose();\r\n        });\r\n        this._templateDisposers.length = 0;\r\n    }\r\n    _removeTemplates() {\r\n        $array.each(this._templates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._templates.length = 0;\r\n    }\r\n    _applyThemes(force = false) {\r\n        let isConnected = false;\r\n        const defaults = [];\r\n        let themes = [];\r\n        const themeTags = new Set();\r\n        const tags = this.get(\"themeTagsSelf\");\r\n        if (tags) {\r\n            $array.each(tags, (tag) => {\r\n                themeTags.add(tag);\r\n            });\r\n        }\r\n        this._walkParents((entity) => {\r\n            if (entity === this._root._rootContainer) {\r\n                isConnected = true;\r\n            }\r\n            if (entity._defaultThemes.length > 0) {\r\n                defaults.push(entity._defaultThemes);\r\n            }\r\n            const theme = entity.get(\"themes\");\r\n            if (theme) {\r\n                themes.push(theme);\r\n            }\r\n            const tags = entity.get(\"themeTags\");\r\n            if (tags) {\r\n                $array.each(tags, (tag) => {\r\n                    themeTags.add(tag);\r\n                });\r\n            }\r\n        });\r\n        themes = defaults.concat(themes);\r\n        this._removeTemplates();\r\n        if (isConnected || force) {\r\n            $array.eachReverse(this.classNames, (name) => {\r\n                const allRules = [];\r\n                $array.each(themes, (themes) => {\r\n                    $array.each(themes, (theme) => {\r\n                        const rules = theme._lookupRules(name);\r\n                        if (rules) {\r\n                            $array.eachReverse(rules, (rule) => {\r\n                                const matches = rule.tags.every((tag) => {\r\n                                    return themeTags.has(tag);\r\n                                });\r\n                                if (matches) {\r\n                                    const result = $array.getFirstSortedIndex(allRules, (x) => {\r\n                                        const order = $order.compare(rule.tags.length, x.tags.length);\r\n                                        if (order === 0) {\r\n                                            return $order.compareArray(rule.tags, x.tags, $order.compare);\r\n                                        }\r\n                                        else {\r\n                                            return order;\r\n                                        }\r\n                                    });\r\n                                    allRules.splice(result.index, 0, rule);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                $array.each(allRules, (rule) => {\r\n                    this._templates.push(rule.template);\r\n                    rule.template._setObjectTemplate(this);\r\n                });\r\n            });\r\n        }\r\n        this._applyTemplates();\r\n        if (isConnected || force) {\r\n            // This causes it to only run the setup function the first time that the themes are applied\r\n            this._runSetup = false;\r\n        }\r\n        return isConnected || force;\r\n    }\r\n    _changed() { }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"id\")) {\r\n            const id = this.get(\"id\");\r\n            if (id) {\r\n                this._registerId(id);\r\n            }\r\n            const prevId = this._prevSettings.id;\r\n            if (prevId) {\r\n                delete this._root.entitiesById[prevId];\r\n                delete registry.entitiesById[prevId];\r\n            }\r\n        }\r\n    }\r\n    _registerId(id) {\r\n        if (this._root.entitiesById[id] && this._root.entitiesById[id] !== this) {\r\n            throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\r\n        }\r\n        this._root.entitiesById[id] = this;\r\n        registry.entitiesById[id] = this;\r\n    }\r\n    _afterChanged() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._removeObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._removeTemplates();\r\n        this._disposeTemplates();\r\n        this.events.dispose();\r\n        this._disposers.forEach((x) => {\r\n            x.dispose();\r\n        });\r\n        $object.each(this._disposerProperties, (_, disposers) => {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n        });\r\n        const id = this.get(\"id\");\r\n        if (id) {\r\n            delete this._root.entitiesById[id];\r\n            delete registry.entitiesById[id];\r\n        }\r\n    }\r\n    /**\r\n     * Creates and returns a \"disposable\" timeout.\r\n     *\r\n     * @param   fn     Callback\r\n     * @param   delay  Delay in milliseconds\r\n     * @return         Timeout disposer\r\n     */\r\n    setTimeout(fn, delay) {\r\n        const id = setTimeout(() => {\r\n            this.removeDispose(disposer);\r\n            fn();\r\n        }, delay);\r\n        const disposer = new Disposer(() => {\r\n            clearTimeout(id);\r\n        });\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeDispose(target) {\r\n        if (!this.isDisposed()) {\r\n            let index = $array.indexOf(this._disposers, target);\r\n            if (index > -1) {\r\n                this._disposers.splice(index, 1);\r\n            }\r\n        }\r\n        target.dispose();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hasTag(tag) {\r\n        return $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addTag(tag) {\r\n        if (!this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            tags.push(tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeTag(tag) {\r\n        if (this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            $array.remove(tags, tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    _t(text, locale, ...rest) {\r\n        return this._root.language.translate(text, locale, ...rest);\r\n    }\r\n    /**\r\n     * An instance of [[Root]] object.\r\n     *\r\n     * @readonly\r\n     * @since 5.0.6\r\n     * @return Root object\r\n     */\r\n    get root() {\r\n        return this._root;\r\n    }\r\n}\r\nObject.defineProperty(Entity, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Entity\"\r\n});\r\nObject.defineProperty(Entity, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: [\"Entity\"]\r\n});\r\n", "import { __awaiter } from \"tslib\";\r\nimport { Entity } from \"../util/Entity\";\r\nimport { Template } from \"../util/Template\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { EventDispatcher } from \"../util/EventDispatcher\";\r\nimport { MultiDisposer, CounterDisposer } from \"../util/Disposer\";\r\nimport { waitForAnimations } from \"../util/Animation\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $object from \"../util/Object\";\r\nimport * as $math from \"../util/Math\";\r\n//import { populateString } from \"../util/PopulateString\";\r\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nclass SpriteEventDispatcher extends EventDispatcher {\r\n    constructor(sprite) {\r\n        super();\r\n        Object.defineProperty(this, \"_sprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rendererDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dispatchParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._sprite = sprite;\r\n    }\r\n    _makePointerEvent(key, event) {\r\n        return {\r\n            type: key,\r\n            originalEvent: event.event,\r\n            point: event.point,\r\n            simulated: event.simulated,\r\n            native: event.native,\r\n            target: this._sprite\r\n        };\r\n    }\r\n    _onRenderer(key, dispatch) {\r\n        // TODO: is this OK? it'd be good not to require to set this on each individual element\r\n        this._sprite.set(\"interactive\", true);\r\n        this._sprite._display.interactive = true;\r\n        let events = this._rendererDisposers[key];\r\n        if (events === undefined) {\r\n            const disposer = this._sprite._display.on(key, (e) => {\r\n                dispatch.call(this, e);\r\n            });\r\n            events = this._rendererDisposers[key] = new CounterDisposer(() => {\r\n                delete this._rendererDisposers[key];\r\n                disposer.dispose();\r\n            });\r\n        }\r\n        return events.increment();\r\n    }\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        const info = super._on(once, type, callback, context, shouldClone, dispatch);\r\n        const rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\r\n        if (rendererEvent !== undefined) {\r\n            info.disposer = new MultiDisposer([\r\n                info.disposer,\r\n                this._onRenderer(type, rendererEvent),\r\n            ]);\r\n        }\r\n        return info;\r\n    }\r\n    /**\r\n     * Will stop any bubbling up of the event to element's parents.\r\n     *\r\n     * Should be called in an event handler, e.g.:\r\n     *\r\n     * ```TypeScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     */\r\n    stopParentDispatch() {\r\n        this._dispatchParents = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dispatchParents(type, event) {\r\n        const old = this._dispatchParents;\r\n        this._dispatchParents = true;\r\n        try {\r\n            this.dispatch(type, event);\r\n            if (this._dispatchParents && this._sprite.parent) {\r\n                this._sprite.parent.events.dispatchParents(type, event);\r\n            }\r\n        }\r\n        finally {\r\n            this._dispatchParents = old;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: {\r\n        \"click\": function (event) {\r\n            if (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\r\n                this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\r\n            }\r\n        },\r\n        \"rightclick\": function (event) {\r\n            if (this.isEnabled(\"rightclick\")) {\r\n                this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\r\n            }\r\n        },\r\n        \"middleclick\": function (event) {\r\n            if (this.isEnabled(\"middleclick\")) {\r\n                this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\r\n            }\r\n        },\r\n        \"dblclick\": function (event) {\r\n            this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\r\n        },\r\n        \"pointerover\": function (event) {\r\n            const sprite = this._sprite;\r\n            let dispatch = true;\r\n            if (sprite.getPrivate(\"trustBounds\")) {\r\n                sprite._getBounds();\r\n                const bounds = sprite.globalBounds();\r\n                if (sprite.isType(\"Graphics\")) {\r\n                    const strokeWidth = sprite.get(\"strokeWidth\", 1) / 2;\r\n                    if (strokeWidth >= 1) {\r\n                        bounds.left -= strokeWidth;\r\n                        bounds.right += strokeWidth;\r\n                        bounds.top -= strokeWidth;\r\n                        bounds.bottom += strokeWidth;\r\n                    }\r\n                }\r\n                if (!$math.inBounds(event.point, bounds)) {\r\n                    dispatch = false;\r\n                    sprite._root._renderer.removeHovering(sprite._display);\r\n                }\r\n            }\r\n            if (dispatch && this.isEnabled(\"pointerover\")) {\r\n                this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\r\n            }\r\n        },\r\n        \"pointerout\": function (event) {\r\n            if (this.isEnabled(\"pointerout\")) {\r\n                this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\r\n            }\r\n        },\r\n        \"pointerdown\": function (event) {\r\n            this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\r\n        },\r\n        \"pointerup\": function (event) {\r\n            if (this.isEnabled(\"pointerup\")) {\r\n                this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointerup\": function (event) {\r\n            if (this.isEnabled(\"globalpointerup\")) {\r\n                this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointermove\": function (event) {\r\n            if (this.isEnabled(\"globalpointermove\")) {\r\n                this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\r\n            }\r\n        },\r\n        \"wheel\": function (event) {\r\n            this.dispatchParents(\"wheel\", {\r\n                type: \"wheel\",\r\n                target: this._sprite,\r\n                originalEvent: event.event,\r\n                point: event.point,\r\n            });\r\n        },\r\n    }\r\n});\r\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\r\nexport class Sprite extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_adjustedLocalBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_templateField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_sizeDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // Will be true only when dragging\r\n        Object.defineProperty(this, \"_isDragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // The event when the dragging starts\r\n        Object.defineProperty(this, \"_dragEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // The position when dragging starts\r\n        Object.defineProperty(this, \"_dragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isHidden\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isShowing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isHiding\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_downPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_toggleDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dragDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_hoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipMoveDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipPointerDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_statesHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.setPrivateRaw(\"visible\", true);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * Marks some setting as dirty. Could be used to trigger adapter.\r\n     * @param key\r\n     */\r\n    markDirtyKey(key) {\r\n        this._markDirtyKey(key);\r\n    }\r\n    _markDirtyKey(key) {\r\n        super._markDirtyKey(key);\r\n        if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\r\n            this.markDirtyBounds();\r\n            this._addPercentagePositionChildren();\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        super._markDirtyPrivateKey(key);\r\n        if (key == \"x\" || key == \"y\") {\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _removeTemplateField() {\r\n        if (this._templateField) {\r\n            this._templateField._removeObjectTemplate(this);\r\n        }\r\n    }\r\n    _createEvents() {\r\n        return new SpriteEventDispatcher(this);\r\n    }\r\n    _processTemplateField() {\r\n        let template;\r\n        const field = this.get(\"templateField\");\r\n        if (field) {\r\n            const dataItem = this.dataItem;\r\n            if (dataItem) {\r\n                const context = dataItem.dataContext;\r\n                if (context) {\r\n                    template = context[field];\r\n                    if (!(template instanceof Template) && template) {\r\n                        template = Template.new(template);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this._templateField !== template) {\r\n            this._removeTemplateField();\r\n            this._templateField = template;\r\n            if (template) {\r\n                template._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    // TODO change this to run before the element is added to the parent, so that way\r\n    //      it doesn't need to apply the themes twice\r\n    _setDataItem(dataItem) {\r\n        const oldDataItem = this._dataItem;\r\n        this._dataItem = dataItem;\r\n        this._processTemplateField();\r\n        const eventType = \"dataitemchanged\";\r\n        if (dataItem != oldDataItem) {\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, {\r\n                    type: eventType,\r\n                    target: this,\r\n                    oldDataItem: oldDataItem,\r\n                    newDataItem: dataItem\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A [[DataItem]] used for this element.\r\n     *\r\n     * NOTE: data item is being assigned automatically in most cases where it\r\n     * matters. Use this accessor to set data item only if you know what you're\r\n     * doing.\r\n     *\r\n     * @param  value  Data item\r\n     */\r\n    set dataItem(value) {\r\n        this._setDataItem(value);\r\n    }\r\n    /**\r\n     * @return DataItem\r\n     */\r\n    get dataItem() {\r\n        if (this._dataItem) {\r\n            return this._dataItem;\r\n        }\r\n        else {\r\n            let parent = this._parent;\r\n            while (parent) {\r\n                if (parent._dataItem) {\r\n                    return parent._dataItem;\r\n                }\r\n                else {\r\n                    parent = parent._parent;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _addPercentageSizeChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\r\n                $array.pushOne(parent._percentageSizeChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentageSizeChildren, this);\r\n            }\r\n        }\r\n    }\r\n    _addPercentagePositionChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\r\n                $array.pushOne(parent._percentagePositionChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentagePositionChildren, this);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyPosition() {\r\n        this._root._addDirtyPosition(this);\r\n    }\r\n    updatePivotPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            const centerX = this.get(\"centerX\");\r\n            if (centerX != null) {\r\n                this._display.pivot.x = bounds.left + $utils.relativeToValue(centerX, bounds.right - bounds.left);\r\n            }\r\n            const centerY = this.get(\"centerY\");\r\n            if (centerY != null) {\r\n                this._display.pivot.y = bounds.top + $utils.relativeToValue(centerY, bounds.bottom - bounds.top);\r\n            }\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        // handling states in beforeChanged, otherwise states is not applied without animated theme\r\n        this._handleStates();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const previous = this._prevSettings.tooltip;\r\n            if (previous) {\r\n                previous.dispose();\r\n            }\r\n        }\r\n        if (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\r\n            this._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\r\n            this.markDirtyLayer();\r\n        }\r\n        if (this.isDirty(\"tooltipPosition\")) {\r\n            const tooltipMoveDp = this._tooltipMoveDp;\r\n            if (tooltipMoveDp) {\r\n                tooltipMoveDp.dispose();\r\n                this._tooltipMoveDp = undefined;\r\n            }\r\n            const tooltipPointerDp = this._tooltipPointerDp;\r\n            if (tooltipPointerDp) {\r\n                tooltipPointerDp.dispose();\r\n                this._tooltipPointerDp = undefined;\r\n            }\r\n            if (this.get(\"tooltipPosition\") == \"pointer\") {\r\n                if (this.isHover()) {\r\n                    this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                        this.showTooltip(e.point);\r\n                    });\r\n                }\r\n                this._tooltipPointerDp = new MultiDisposer([\r\n                    this.events.on(\"pointerover\", () => {\r\n                        this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                            this.showTooltip(e.point);\r\n                        });\r\n                    }),\r\n                    this.events.on(\"pointerout\", () => {\r\n                        const tooltipMoveDp = this._tooltipMoveDp;\r\n                        if (tooltipMoveDp) {\r\n                            tooltipMoveDp.dispose();\r\n                            this._tooltipMoveDp = undefined;\r\n                        }\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n    _handleStates() {\r\n        if (!this._statesHandled) {\r\n            if (this.isDirty(\"active\")) {\r\n                if (this.get(\"active\")) {\r\n                    this.states.applyAnimate(\"active\");\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            if (this.isDirty(\"disabled\")) {\r\n                if (this.get(\"disabled\")) {\r\n                    this.states.applyAnimate(\"disabled\");\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            this._statesHandled = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const display = this._display;\r\n        const events = this.events;\r\n        if (this.isDirty(\"draggable\")) {\r\n            const draggable = this.get(\"draggable\");\r\n            if (draggable) {\r\n                this.set(\"interactive\", true);\r\n                this._dragDp = new MultiDisposer([\r\n                    events.on(\"pointerdown\", (ev) => {\r\n                        this.dragStart(ev);\r\n                    }),\r\n                    events.on(\"globalpointermove\", (ev) => {\r\n                        this.dragMove(ev);\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        this.dragStop(ev);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._dragDp) {\r\n                    this._dragDp.dispose();\r\n                    this._dragDp = undefined;\r\n                }\r\n            }\r\n            display.cancelTouch = draggable ? true : false;\r\n        }\r\n        if (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            const showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\r\n            if (this._tooltipDp) {\r\n                this._tooltipDp.dispose();\r\n                this._tooltipDp = undefined;\r\n            }\r\n            if (tooltipText || tooltipHTML) {\r\n                if (showTooltipOn == \"click\") {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"click\", () => {\r\n                            this.setTimeout(() => {\r\n                                const tooltip = this.getTooltip();\r\n                                if (tooltip && !tooltip.isHidden() && tooltip.get(\"tooltipTarget\") === this) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                else {\r\n                                    this.showTooltip();\r\n                                }\r\n                            }, 10);\r\n                        }),\r\n                        $utils.addEventListener(document, \"click\", (_ev) => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n                else if (showTooltipOn == \"always\") {\r\n                    // nothing\r\n                }\r\n                else {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"pointerover\", () => {\r\n                            this.showTooltip();\r\n                        }),\r\n                        events.on(\"pointerout\", () => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"toggleKey\")) {\r\n            let toggleKey = this.get(\"toggleKey\");\r\n            if (toggleKey && toggleKey != \"none\") {\r\n                this._toggleDp = events.on(\"click\", () => {\r\n                    if (!this._isDragging) {\r\n                        this.set(toggleKey, !this.get(toggleKey));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._toggleDp) {\r\n                    this._toggleDp.dispose();\r\n                    this._toggleDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"opacity\")) {\r\n            display.alpha = Math.max(0, this.get(\"opacity\", 1));\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"rotation\")) {\r\n            this.markDirtyBounds();\r\n            display.angle = this.get(\"rotation\", 0);\r\n        }\r\n        if (this.isDirty(\"scale\")) {\r\n            this.markDirtyBounds();\r\n            display.scale = this.get(\"scale\", 0);\r\n        }\r\n        if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\r\n            this.markDirtyBounds();\r\n            this.updatePivotPoint();\r\n        }\r\n        if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\r\n            if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n                display.visible = false;\r\n                this.hideTooltip();\r\n            }\r\n            else {\r\n                display.visible = true;\r\n            }\r\n            this.markDirtyBounds();\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this.markDirtyBounds();\r\n            this._addPercentageSizeChildren();\r\n            const parent = this.parent;\r\n            if (parent) {\r\n                if ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\r\n                    parent.markDirty();\r\n                    parent._prevWidth = 0;\r\n                }\r\n            }\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\") || this.isDirty(\"marginLeft\") || this.isDirty(\"marginTop\") || this.isDirty(\"marginRight\") || this.isDirty(\"marginBottom\")) {\r\n            this.markDirtyBounds();\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this._sizeDirty) {\r\n            this._updateSize();\r\n        }\r\n        if (this.isDirty(\"wheelable\")) {\r\n            const wheelable = this.get(\"wheelable\");\r\n            if (wheelable) {\r\n                this.set(\"interactive\", true);\r\n            }\r\n            display.wheelable = wheelable ? true : false;\r\n        }\r\n        // Accessibility\r\n        if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"filter\")) {\r\n            //this.markDirtyBounds();\r\n            display.filter = this.get(\"filter\");\r\n        }\r\n        let filter = this.get(\"filter\", \"\");\r\n        if (this.isDirty(\"blur\")) {\r\n            const blur = this.get(\"blur\", 0);\r\n            if (blur != 0) {\r\n                filter += \" blur(\" + blur + \"px)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"saturate\")) {\r\n            const saturate = this.get(\"saturate\", 1);\r\n            if (saturate != 1) {\r\n                filter += \" saturate(\" + saturate + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"brightness\")) {\r\n            const brightness = this.get(\"brightness\", 1);\r\n            if (brightness != 1) {\r\n                filter += \" brightness(\" + brightness + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"contrast\")) {\r\n            const contrast = this.get(\"contrast\", 1);\r\n            if (contrast != 1) {\r\n                filter += \" contrast(\" + contrast + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"sepia\")) {\r\n            const sepia = this.get(\"sepia\", 0);\r\n            if (sepia != 0) {\r\n                filter += \" sepia(\" + sepia + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"hue\")) {\r\n            const hue = this.get(\"hue\", 0);\r\n            if (hue != 0) {\r\n                filter += \" hue-rotate(\" + hue + \"deg)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"invert\")) {\r\n            const invert = this.get(\"invert\", 0);\r\n            if (invert != 0) {\r\n                filter += \" invert(\" + invert + \")\";\r\n            }\r\n        }\r\n        if (filter) {\r\n            display.filter = filter;\r\n        }\r\n        if (this.isDirty(\"cursorOverStyle\")) {\r\n            display.cursorOverStyle = this.get(\"cursorOverStyle\");\r\n        }\r\n        if (this.isDirty(\"hoverOnFocus\")) {\r\n            if (this.get(\"hoverOnFocus\")) {\r\n                this._focusDp = new MultiDisposer([\r\n                    events.on(\"focus\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.showTooltip();\r\n                    }),\r\n                    events.on(\"blur\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.hideTooltip();\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._focusDp) {\r\n                    this._focusDp.dispose();\r\n                    this._focusDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"focusable\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n            this.markDirtyAccessibility();\r\n            this._disposers.push(events.on(\"blur\", () => {\r\n                this.setPrivateRaw(\"touchHovering\", false);\r\n            }));\r\n            this._disposers.push(events.once(\"boundschanged\", () => {\r\n                // We might need to do this to re-evaluate accessibility attributes\r\n                // once the element gains size (bounds)\r\n                this.markDirtyAccessibility();\r\n            }));\r\n        }\r\n        if (this.isPrivateDirty(\"focusable\")) {\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\r\n            // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\r\n            // @todo make sure ariaLabel gets populated in Root\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"exportable\")) {\r\n            display.exportable = this.get(\"exportable\");\r\n        }\r\n        if (this.isDirty(\"interactive\")) {\r\n            const events = this.events;\r\n            if (this.get(\"interactive\") && !events.isDisposed()) {\r\n                this._hoverDp = new MultiDisposer([\r\n                    events.on(\"click\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (!this.getPrivate(\"touchHovering\")) {\r\n                                this.setTimeout(() => {\r\n                                    this._handleOver();\r\n                                    if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                        this.showTooltip();\r\n                                    }\r\n                                    this.setPrivateRaw(\"touchHovering\", true);\r\n                                    this.events.dispatch(\"pointerover\", {\r\n                                        type: \"pointerover\",\r\n                                        target: ev.target,\r\n                                        originalEvent: ev.originalEvent,\r\n                                        point: ev.point,\r\n                                        simulated: ev.simulated\r\n                                    });\r\n                                }, 10);\r\n                            }\r\n                        }\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (this.getPrivate(\"touchHovering\")) {\r\n                                this._handleOut();\r\n                                if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                this.setPrivateRaw(\"touchHovering\", false);\r\n                                this.events.dispatch(\"pointerout\", {\r\n                                    type: \"pointerout\",\r\n                                    target: ev.target,\r\n                                    originalEvent: ev.originalEvent,\r\n                                    point: ev.point,\r\n                                    simulated: ev.simulated\r\n                                });\r\n                            }\r\n                        }\r\n                        if (this._isDown) {\r\n                            this._handleUp(ev);\r\n                        }\r\n                        //this._isDown = false;\r\n                    }),\r\n                    events.on(\"pointerover\", () => {\r\n                        this._handleOver();\r\n                    }),\r\n                    events.on(\"pointerout\", () => {\r\n                        this._handleOut();\r\n                    }),\r\n                    events.on(\"pointerdown\", (e) => {\r\n                        this._handleDown(e);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                this._display.interactive = false;\r\n                if (this._hoverDp) {\r\n                    this._hoverDp.dispose();\r\n                    this._hoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"forceInactive\")) {\r\n            this._display.inactive = this.get(\"forceInactive\", null);\r\n        }\r\n        if (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStart(e) {\r\n        this._dragEvent = e;\r\n        this.events.stopParentDispatch();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStop(e) {\r\n        this._dragEvent = undefined;\r\n        this._dragPoint = undefined;\r\n        this.events.stopParentDispatch();\r\n        if (this._isDragging) {\r\n            this._isDragging = false;\r\n            const type = \"dragstop\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, {\r\n                    type: type,\r\n                    target: this,\r\n                    originalEvent: e.originalEvent,\r\n                    point: e.point,\r\n                    simulated: e.simulated,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _handleOver() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\r\n                this.states.applyAnimate(\"hoverActive\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\r\n                this.states.applyAnimate(\"hoverDisabled\");\r\n            }\r\n            else {\r\n                this.states.applyAnimate(\"hover\");\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleOut() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else {\r\n                if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleUp(e) {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else if (this.states.lookup(\"down\")) {\r\n                if (this.isHover()) {\r\n                    this.states.applyAnimate(\"hover\");\r\n                }\r\n                else {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            // @todo remove this once migrated to _downPoints\r\n            this._downPoint = undefined;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            delete this._downPoints[pointerId];\r\n            if ($object.keys(this._downPoints).length == 0) {\r\n                this._isDown = false;\r\n            }\r\n        }\r\n    }\r\n    _hasMoved(e) {\r\n        // @todo remove this once migrated to _downPoints\r\n        // if (this._downPoint) {\r\n        // \tconst x = Math.abs(this._downPoint.x - e.point.x);\r\n        // \tconst y = Math.abs(this._downPoint.y - e.point.y);\r\n        // \treturn (x > 5) || (y > 5);\r\n        // }\r\n        const pointerId = $utils.getPointerId(e.originalEvent);\r\n        const downPoint = this._downPoints[pointerId];\r\n        if (downPoint) {\r\n            const x = Math.abs(downPoint.x - e.point.x);\r\n            const y = Math.abs(downPoint.y - e.point.y);\r\n            return (x > 5) || (y > 5);\r\n        }\r\n        return false;\r\n    }\r\n    _hasDown() {\r\n        return $object.keys(this._downPoints).length > 0;\r\n    }\r\n    _handleDown(e) {\r\n        const parent = this.parent;\r\n        if (parent && !this.get(\"draggable\")) {\r\n            parent._handleDown(e);\r\n        }\r\n        if (this.get(\"interactive\") && !this.isHidden()) {\r\n            if (this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n            this._downPoint = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n            // @todo remove this once migrated to _downPoints\r\n            this._isDown = true;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            this._downPoints[pointerId] = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragMove(e) {\r\n        let dragEvent = this._dragEvent;\r\n        if (dragEvent) {\r\n            if (dragEvent.simulated && !e.simulated) {\r\n                return true;\r\n            }\r\n            let angle = 0;\r\n            let parent = this.parent;\r\n            let scale = 1;\r\n            while (parent != null) {\r\n                angle += parent.get(\"rotation\", 0);\r\n                parent = parent.parent;\r\n                if (parent) {\r\n                    scale *= parent.get(\"scale\", 1);\r\n                }\r\n            }\r\n            let x = (e.point.x - dragEvent.point.x) / scale;\r\n            let y = (e.point.y - dragEvent.point.y) / scale;\r\n            const events = this.events;\r\n            if (dragEvent.simulated && !this._isDragging) {\r\n                this._isDragging = true;\r\n                this._dragEvent = e;\r\n                this._dragPoint = {\r\n                    x: this.x(),\r\n                    y: this.y()\r\n                };\r\n                const type = \"dragstart\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            if (this._isDragging) {\r\n                let dragPoint = this._dragPoint;\r\n                this.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\r\n                this.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\r\n                const type = \"dragged\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (Math.hypot(x, y) > 5) {\r\n                    this._isDragging = true;\r\n                    this._dragEvent = e;\r\n                    this._dragPoint = {\r\n                        x: this.x(),\r\n                        y: this.y()\r\n                    };\r\n                    const type = \"dragstart\";\r\n                    if (events.isEnabled(type)) {\r\n                        events.dispatch(type, {\r\n                            type: type,\r\n                            target: this,\r\n                            originalEvent: e.originalEvent,\r\n                            point: e.point,\r\n                            simulated: e.simulated\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n    }\r\n    _getBounds() {\r\n        this._localBounds = this._display.getLocalBounds();\r\n    }\r\n    /**\r\n     * Returns depth (how deep in the hierachy of the content tree) of this\r\n     * element.\r\n     *\r\n     * @return Depth\r\n     */\r\n    depth() {\r\n        let self = this.parent;\r\n        let depth = 0;\r\n        while (true) {\r\n            if (self) {\r\n                ++depth;\r\n                self = self.parent;\r\n            }\r\n            else {\r\n                return depth;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyBounds() {\r\n        const display = this._display;\r\n        if (this.get(\"isMeasured\")) {\r\n            this._root._addDirtyBounds(this);\r\n            display.isMeasured = true;\r\n            display.invalidateBounds();\r\n            const parent = this.parent;\r\n            if (parent && this.get(\"position\") != \"absolute\") {\r\n                if (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\r\n                    parent.markDirtyBounds();\r\n                }\r\n            }\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyAccessibility() {\r\n        //if (this._root.focused(this)) {\r\n        this._root._invalidateAccessibility(this);\r\n        //}\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyLayer() {\r\n        //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\r\n        this._display.markDirtyLayer(true);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this.markDirtyLayer();\r\n    }\r\n    _updateBounds() {\r\n        const oldBounds = this._adjustedLocalBounds;\r\n        let newBounds;\r\n        // if display.visible == false, it still returns bounds\r\n        if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n            newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            };\r\n            this._localBounds = newBounds;\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            this._getBounds();\r\n            this._fixMinBounds(this._localBounds);\r\n            this.updatePivotPoint();\r\n            this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\r\n            newBounds = this._adjustedLocalBounds;\r\n        }\r\n        if (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\r\n            const eventType = \"boundschanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n            if (this.parent) {\r\n                this.parent.markDirty();\r\n                this.parent.markDirtyBounds();\r\n            }\r\n            // Update tooltip position together with the Sprite\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n    }\r\n    _fixMinBounds(bounds) {\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        if ($type.isNumber(minWidth)) {\r\n            if (bounds.right - bounds.left < minWidth) {\r\n                bounds.right = bounds.left + minWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            if (bounds.bottom - bounds.top < minHeight) {\r\n                bounds.bottom = bounds.top + minHeight;\r\n            }\r\n        }\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        if ($type.isNumber(privateWidth)) {\r\n            if (privateWidth > 0) {\r\n                bounds.right = bounds.left + privateWidth;\r\n            }\r\n            else {\r\n                bounds.left = bounds.right + privateWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(privateHeight)) {\r\n            if (privateHeight > 0) {\r\n                bounds.bottom = bounds.top + privateHeight;\r\n            }\r\n            else {\r\n                bounds.top = bounds.bottom + privateHeight;\r\n            }\r\n        }\r\n    }\r\n    _removeParent(parent) {\r\n        if (parent) {\r\n            parent.children.removeValue(this);\r\n            $array.removeFirst(parent._percentageSizeChildren, this);\r\n            $array.removeFirst(parent._percentagePositionChildren, this);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._statesHandled = false;\r\n    }\r\n    /**\r\n     * Simulate hover over element.\r\n     */\r\n    hover() {\r\n        if (!this.isDisposed()) {\r\n            this.showTooltip();\r\n            this._handleOver();\r\n        }\r\n    }\r\n    /**\r\n     * Simulate unhover over element.\r\n     */\r\n    unhover() {\r\n        if (!this.isDisposed()) {\r\n            this.hideTooltip();\r\n            this._handleOut();\r\n        }\r\n    }\r\n    /**\r\n     * Shows element's [[Tooltip]].\r\n     */\r\n    showTooltip(point) {\r\n        if (!this.isDisposed()) {\r\n            const tooltip = this.getTooltip();\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            if ((tooltipText || tooltipHTML) && tooltip) {\r\n                const tooltipPosition = this.get(\"tooltipPosition\");\r\n                const tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\r\n                if (tooltipPosition == \"fixed\" || !point) {\r\n                    this._display._setMatrix();\r\n                    point = this.toGlobal(tooltipTarget._getTooltipPoint());\r\n                }\r\n                tooltip.set(\"pointTo\", point);\r\n                tooltip.set(\"tooltipTarget\", tooltipTarget);\r\n                if (!tooltip.get(\"x\")) {\r\n                    tooltip.set(\"x\", point.x);\r\n                }\r\n                if (!tooltip.get(\"y\")) {\r\n                    tooltip.set(\"y\", point.y);\r\n                }\r\n                if (tooltipText) {\r\n                    tooltip.label.set(\"text\", tooltipText);\r\n                }\r\n                if (tooltipHTML) {\r\n                    tooltip.label.set(\"html\", tooltipHTML);\r\n                }\r\n                const dataItem = this.dataItem;\r\n                if (dataItem) {\r\n                    tooltip.label._setDataItem(dataItem);\r\n                }\r\n                if (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\r\n                    this.hideTooltip();\r\n                    return;\r\n                }\r\n                tooltip.label.text.markDirtyText();\r\n                const promise = tooltip.show();\r\n                this.setPrivateRaw(\"showingTooltip\", true);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     */\r\n    hideTooltip() {\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            if (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this) || this.get(\"tooltip\") == tooltip) {\r\n                let timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\r\n                const promise = tooltip.hide(timeout);\r\n                this.setPrivateRaw(\"showingTooltip\", false);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    _getTooltipPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            let x = 0;\r\n            let y = 0;\r\n            if (!this.get(\"isMeasured\")) {\r\n                x = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\r\n                y = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\r\n            }\r\n            else {\r\n                x = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\r\n                y = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\r\n            }\r\n            return { x, y };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n    /**\r\n     * Returns [[Tooltip]] used for this element.\r\n     *\r\n     * @return Tooltip\r\n     */\r\n    getTooltip() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (!tooltip) {\r\n            let parent = this.parent;\r\n            if (parent) {\r\n                return parent.getTooltip();\r\n            }\r\n        }\r\n        else {\r\n            return tooltip;\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const parent = this.parent;\r\n        let dx = this.get(\"dx\", 0);\r\n        let dy = this.get(\"dy\", 0);\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        let xx = 0;\r\n        let yy = 0;\r\n        const position = this.get(\"position\");\r\n        if (x instanceof Percent) {\r\n            if (parent) {\r\n                x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                x = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(x)) {\r\n            xx = x + dx;\r\n        }\r\n        else {\r\n            if (_x != null) {\r\n                xx = _x;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    xx = parent.get(\"paddingLeft\", 0) + dx;\r\n                }\r\n            }\r\n        }\r\n        let y = this.get(\"y\");\r\n        let _y = this.getPrivate(\"y\");\r\n        if (y instanceof Percent) {\r\n            if (parent) {\r\n                y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                y = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(y)) {\r\n            yy = y + dy;\r\n        }\r\n        else {\r\n            if (_y != null) {\r\n                yy = _y;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    yy = parent.get(\"paddingTop\", 0) + dy;\r\n                }\r\n            }\r\n        }\r\n        const display = this._display;\r\n        if (display.x != xx || display.y != yy) {\r\n            display.invalidateBounds();\r\n            display.x = xx;\r\n            display.y = yy;\r\n            const eventType = \"positionchanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n        }\r\n        // Update tooltip position together with the Sprite\r\n        if (this.getPrivate(\"showingTooltip\")) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * Returns element's actual X position in pixels.\r\n     *\r\n     * @return X (px)\r\n     */\r\n    x() {\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (x instanceof Percent) {\r\n                return $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(x)) {\r\n                    if (_x != null) {\r\n                        return _x;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingLeft\", this._display.x);\r\n                    }\r\n                }\r\n                else {\r\n                    return x;\r\n                }\r\n            }\r\n        }\r\n        return this._display.x;\r\n    }\r\n    /**\r\n     * Returns element's actual Y position in pixels.\r\n     *\r\n     * @return Y (px)\r\n     */\r\n    y() {\r\n        let _y = this.getPrivate(\"y\");\r\n        if (_y != null) {\r\n            return _y;\r\n        }\r\n        let y = this.get(\"y\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (y instanceof Percent) {\r\n                return $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(y)) {\r\n                    if (_y != null) {\r\n                        return _y;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingTop\", this._display.y);\r\n                    }\r\n                }\r\n                else {\r\n                    return y;\r\n                }\r\n            }\r\n        }\r\n        return this._display.y;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._display.dispose();\r\n        this._removeTemplateField();\r\n        this._removeParent(this.parent);\r\n        this._root._removeFocusElement(this);\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.dispose();\r\n        }\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    adjustedLocalBounds() {\r\n        this._fixMinBounds(this._adjustedLocalBounds);\r\n        return this._adjustedLocalBounds;\r\n    }\r\n    /**\r\n     * Returns local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    localBounds() {\r\n        return this._localBounds;\r\n    }\r\n    /**\r\n     * Returns adjusted local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    bounds() {\r\n        const bounds = this._adjustedLocalBounds;\r\n        const x = this.x();\r\n        const y = this.y();\r\n        return { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\r\n    }\r\n    /**\r\n     * Returns global coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    globalBounds() {\r\n        const bounds = this.localBounds();\r\n        const p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\r\n        const p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\r\n        const p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    _onShow(_duration) {\r\n    }\r\n    _onHide(_duration) {\r\n    }\r\n    /**\r\n     * Plays initial reveal animation regardless if element is currently hidden\r\n     * or visible.\r\n     *\r\n     * @param   duration  Duration of the animation in milliseconds\r\n     * @param   delay     Delay showing of the element by X milliseconds\r\n     * @return            Promise\r\n     */\r\n    appear(duration, delay) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.hide(0);\r\n            if (delay) {\r\n                return new Promise((success, _error) => {\r\n                    this.setTimeout(() => {\r\n                        success(this.show(duration));\r\n                    }, delay);\r\n                });\r\n            }\r\n            else {\r\n                return this.show(duration);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Shows currently hidden element and returns a `Promise` which completes\r\n     * when all showing animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    show(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isShowing) {\r\n                this._isHidden = false;\r\n                this._isShowing = true;\r\n                this._isHiding = false;\r\n                if (this.states.lookup(\"default\").get(\"visible\")) {\r\n                    this.set(\"visible\", true);\r\n                }\r\n                this._onShow(duration);\r\n                const animations = this.states.applyAnimate(\"default\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isShowing = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Hides the element and returns a `Promise` which completes when all hiding\r\n     * animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    hide(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isHiding && !this._isHidden) {\r\n                this._isHiding = true;\r\n                this._isShowing = false;\r\n                let state = this.states.lookup(\"hidden\");\r\n                if (!state) {\r\n                    state = this.states.create(\"hidden\", {\r\n                        \"opacity\": 0,\r\n                        \"visible\": false\r\n                    });\r\n                }\r\n                this._isHidden = true;\r\n                this._onHide(duration);\r\n                const animations = this.states.applyAnimate(\"hidden\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isHiding = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hidden.\r\n     *\r\n     * @return Is hidden?\r\n     */\r\n    isHidden() {\r\n        return this._isHidden;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a default state.\r\n     *\r\n     * @return Is showing?\r\n     */\r\n    isShowing() {\r\n        return this._isShowing;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a hidden state.\r\n     *\r\n     * @return Is hiding?\r\n     */\r\n    isHiding() {\r\n        return this._isHiding;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hovered by a pointer.\r\n     *\r\n     * @return Is hovered?\r\n     */\r\n    isHover() {\r\n        return this._display.hovering();\r\n    }\r\n    /**\r\n     * Returns `true` if this element does currently have focus.\r\n     *\r\n     * @return Is focused?\r\n     */\r\n    isFocus() {\r\n        return this._root.focused(this);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently being dragged.\r\n     *\r\n     * @return Is dragged?\r\n     */\r\n    isDragging() {\r\n        return this._isDragging;\r\n    }\r\n    /**\r\n     * Returns `false` if if either public or private setting `visible` is set\r\n     * to `false`, or `forceHidden` is set to `true`.\r\n     *\r\n     * @return Visible?\r\n     */\r\n    isVisible() {\r\n        if (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Same as `isVisible()`, except it checks all ascendants, too.\r\n     *\r\n     * @since 5.2.7\r\n     * @return Visible?\r\n     */\r\n    isVisibleDeep() {\r\n        return this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\r\n    }\r\n    /**\r\n     * Returns an actual opacity of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.2.11\r\n     */\r\n    compositeOpacity() {\r\n        const opacity = this.get(\"opacity\", 1);\r\n        return this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\r\n    }\r\n    /**\r\n     * Returns an actual scale of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeScale() {\r\n        const scale = this.get(\"scale\", 1);\r\n        return this._parent ? (this._parent.compositeScale() * scale) : scale;\r\n    }\r\n    /**\r\n     * Returns an actual roation of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeRotation() {\r\n        const rotation = this.get(\"rotation\", 0);\r\n        return this._parent ? (this._parent.compositeRotation() + rotation) : rotation;\r\n    }\r\n    /**\r\n     * Returns width of this element in pixels.\r\n     *\r\n     * @return Width (px)\r\n     */\r\n    width() {\r\n        let width = this.get(\"width\");\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let w = 0;\r\n        if ($type.isNumber(privateWidth)) {\r\n            w = privateWidth;\r\n        }\r\n        else {\r\n            if (width == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\r\n                }\r\n            }\r\n            else {\r\n                if (width instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        w = parent.innerWidth() * width.value;\r\n                    }\r\n                    else {\r\n                        w = this._root.width() * width.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(width)) {\r\n                    w = width;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minWidth)) {\r\n            w = Math.max(minWidth, w);\r\n        }\r\n        if ($type.isNumber(maxWidth)) {\r\n            w = Math.min(maxWidth, w);\r\n        }\r\n        return w;\r\n    }\r\n    /**\r\n     * Returns maximum allowed width of this element in pixels.\r\n     *\r\n     * @return Maximum width (px)\r\n     */\r\n    maxWidth() {\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        if ($type.isNumber(maxWidth)) {\r\n            return maxWidth;\r\n        }\r\n        else {\r\n            let width = this.get(\"width\");\r\n            if ($type.isNumber(width)) {\r\n                return width;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerWidth();\r\n        }\r\n        return this._root.width();\r\n    }\r\n    /**\r\n     * Returns maximum allowed height of this element in pixels.\r\n     *\r\n     * @return Maximum height (px)\r\n     */\r\n    maxHeight() {\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        if ($type.isNumber(maxHeight)) {\r\n            return maxHeight;\r\n        }\r\n        else {\r\n            let height = this.get(\"height\");\r\n            if ($type.isNumber(height)) {\r\n                return height;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerHeight();\r\n        }\r\n        return this._root.height();\r\n    }\r\n    /**\r\n     * Returns height of this element in pixels.\r\n     *\r\n     * @return Height (px)\r\n     */\r\n    height() {\r\n        let height = this.get(\"height\");\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        let h = 0;\r\n        if ($type.isNumber(privateHeight)) {\r\n            h = privateHeight;\r\n        }\r\n        else {\r\n            if (height == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\r\n                }\r\n            }\r\n            else {\r\n                if (height instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        h = parent.innerHeight() * height.value;\r\n                    }\r\n                    else {\r\n                        h = this._root.height() * height.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(height)) {\r\n                    h = height;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            h = Math.max(minHeight, h);\r\n        }\r\n        if ($type.isNumber(maxHeight)) {\r\n            h = Math.min(maxHeight, h);\r\n        }\r\n        return h;\r\n    }\r\n    _findStaticTemplate(f) {\r\n        // templateField overrides template\r\n        if (this._templateField && f(this._templateField)) {\r\n            return this._templateField;\r\n        }\r\n        return super._findStaticTemplate(f);\r\n    }\r\n    _walkParents(f) {\r\n        if (this._parent) {\r\n            this._walkParent(f);\r\n        }\r\n    }\r\n    _walkParent(f) {\r\n        if (this._parent) {\r\n            this._parent._walkParent(f);\r\n        }\r\n        f(this);\r\n    }\r\n    /**\r\n     * Parent [[Container]] of this element.\r\n     *\r\n     * @return Parent container\r\n     */\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    _setParent(parent, updateChildren = false) {\r\n        const prevParent = this._parent;\r\n        if (parent !== prevParent) {\r\n            this.markDirtyBounds();\r\n            parent.markDirty();\r\n            this._parent = parent;\r\n            if (updateChildren) {\r\n                this._removeParent(prevParent);\r\n                if (parent) {\r\n                    this._addPercentageSizeChildren();\r\n                    this._addPercentagePositionChildren();\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this._applyThemes();\r\n        }\r\n    }\r\n    /**\r\n     * Returns an instance of [[NumberFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return NumberFormatter instace\r\n     */\r\n    getNumberFormatter() {\r\n        return this.get(\"numberFormatter\", this._root.numberFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DateFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DateFormatter instace\r\n     */\r\n    getDateFormatter() {\r\n        return this.get(\"dateFormatter\", this._root.dateFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DurationFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DurationFormatter instace\r\n     */\r\n    getDurationFormatter() {\r\n        return this.get(\"durationFormatter\", this._root.durationFormatter);\r\n    }\r\n    /**\r\n     * Converts X/Y coordinate within this element to a global coordinate.\r\n     *\r\n     * @param  point  Local coordinate\r\n     * @return        Global coordinate\r\n     */\r\n    toGlobal(point) {\r\n        return this._display.toGlobal(point);\r\n    }\r\n    /**\r\n     * Converts global X/Y coordinate to a coordinate within this element.\r\n     *\r\n     * @param  point  Global coordinate\r\n     * @return        Local coordinate\r\n     */\r\n    toLocal(point) {\r\n        return this._display.toLocal(point);\r\n    }\r\n    _getDownPoint() {\r\n        const id = this._getDownPointId();\r\n        if (id) {\r\n            return this._downPoints[id];\r\n        }\r\n    }\r\n    _getDownPointId() {\r\n        if (this._downPoints) {\r\n            return $object.keysOrdered(this._downPoints, (a, b) => {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })[0];\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the end of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toFront() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, parent.children.length - 1);\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the beginning of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toBack() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, 0);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Sprite, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Sprite\"\r\n});\r\nObject.defineProperty(Sprite, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Sprite.className])\r\n});\r\n", "import { Entity } from \"../../util/Entity\";\r\n/**\r\n * Base class for patterns.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class Pattern extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_backgroundDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_pattern\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because pattern will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    get pattern() {\r\n        return this._pattern;\r\n    }\r\n    _draw() { }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fillOpacity\")) {\r\n            this._clear = true;\r\n        }\r\n        this._checkDirtyFill();\r\n    }\r\n    _checkDirtyFill() {\r\n        if (this.isDirty(\"color\") || this.isDirty(\"fill\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const repetition = this.get(\"repetition\", \"\");\r\n            const width = this.get(\"width\", 100);\r\n            const height = this.get(\"height\", 100);\r\n            const fill = this.get(\"fill\");\r\n            const fillOpacity = this.get(\"fillOpacity\", 1);\r\n            const backgroundDisplay = this._backgroundDisplay;\r\n            const display = this._display;\r\n            display.clear();\r\n            backgroundDisplay.clear();\r\n            if (fill && (fillOpacity > 0)) {\r\n                backgroundDisplay.beginFill(fill, fillOpacity);\r\n                backgroundDisplay.drawRect(0, 0, width, height);\r\n                backgroundDisplay.endFill();\r\n            }\r\n            display.angle = this.get(\"rotation\", 0);\r\n            //display.pivot = { x: width / 2, y: height / 2 };\r\n            this._draw();\r\n            this._pattern = this._root._renderer.createPattern(display, backgroundDisplay, repetition, width, height);\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Pattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Pattern\"\r\n});\r\nObject.defineProperty(Pattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Pattern.className])\r\n});\r\n", "import { Pattern } from \"./Pattern\";\r\n/**\r\n * Picture pattern.\r\n *\r\n * @since 5.2.15\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class PicturePattern extends Pattern {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._clear = true;\r\n        if (this.isDirty(\"src\")) {\r\n            this._load();\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this.set(\"width\", canvas.width);\r\n            this.set(\"height\", canvas.height);\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const colorOpacity = this.get(\"colorOpacity\");\r\n        if (colorOpacity !== undefined) {\r\n            this._display.alpha = Math.max(0, colorOpacity);\r\n        }\r\n        const image = this._image;\r\n        if (image) {\r\n            const patternWidth = this.get(\"width\", 100);\r\n            const patternHeight = this.get(\"height\", 100);\r\n            // Fit\r\n            const fit = this.get(\"fit\", \"image\");\r\n            let width = 0;\r\n            let height = 0;\r\n            if (fit == \"pattern\") {\r\n                width = patternWidth;\r\n                height = patternHeight;\r\n                this.markDirty();\r\n            }\r\n            else {\r\n                width = image.width;\r\n                height = image.height;\r\n                if (fit == \"image\") {\r\n                    this.set(\"width\", width);\r\n                    this.set(\"height\", height);\r\n                }\r\n            }\r\n            // Position\r\n            const centered = this.get(\"centered\", true);\r\n            let x = 0;\r\n            let y = 0;\r\n            if (centered) {\r\n                x = patternWidth / 2 - width / 2;\r\n                y = patternHeight / 2 - height / 2;\r\n            }\r\n            this._display.image(image, width, height, x, y);\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this._display.image(canvas, canvas.width, canvas.height, 0, 0);\r\n        }\r\n    }\r\n    _load() {\r\n        const src = this.get(\"src\");\r\n        if (src) {\r\n            const image = new Image();\r\n            //image.crossOrigin = \"Anonymous\";\r\n            image.src = src;\r\n            image.decode().then(() => {\r\n                this._image = image;\r\n                this._draw();\r\n                if (this.events.isEnabled(\"loaded\")) {\r\n                    this.events.dispatch(\"loaded\", { type: \"loaded\", target: this });\r\n                }\r\n            }).catch((_error) => {\r\n                // TODO: maybe raise error?\r\n            });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PicturePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PicturePattern\"\r\n});\r\nObject.defineProperty(PicturePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([PicturePattern.className])\r\n});\r\n", "/**\r\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\r\n */\r\nexport var BlendMode;\r\n(function (BlendMode) {\r\n    BlendMode[\"ADD\"] = \"lighter\";\r\n    BlendMode[\"COLOR\"] = \"color\";\r\n    BlendMode[\"COLOR_BURN\"] = \"color-burn\";\r\n    BlendMode[\"COLOR_DODGE\"] = \"color-dodge\";\r\n    BlendMode[\"DARKEN\"] = \"darken\";\r\n    BlendMode[\"DIFFERENCE\"] = \"difference\";\r\n    BlendMode[\"DST_OVER\"] = \"destination-over\";\r\n    BlendMode[\"EXCLUSION\"] = \"exclusion\";\r\n    BlendMode[\"HARD_LIGHT\"] = \"hard-light\";\r\n    BlendMode[\"HUE\"] = \"hue\";\r\n    BlendMode[\"LIGHTEN\"] = \"lighten\";\r\n    BlendMode[\"LUMINOSITY\"] = \"luminosity\";\r\n    BlendMode[\"MULTIPLY\"] = \"multiply\";\r\n    BlendMode[\"NORMAL\"] = \"source-over\";\r\n    BlendMode[\"OVERLAY\"] = \"overlay\";\r\n    BlendMode[\"SATURATION\"] = \"saturation\";\r\n    BlendMode[\"SCREEN\"] = \"screen\";\r\n    BlendMode[\"SOFT_LIGHT\"] = \"soft-light\";\r\n    BlendMode[\"SRC_ATOP\"] = \"source-atop\";\r\n    BlendMode[\"XOR\"] = \"xor\";\r\n})(BlendMode || (BlendMode = {}));\r\n", "import { PicturePattern } from \"../render/patterns/PicturePattern\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { BlendMode } from \"./backend/Renderer\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $array from \"../util/Array\";\r\nexport const visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\", \"shadowBlur\", \"shadowColor\", \"shadowOpacity\", \"shadowOffsetX\", \"shadowOffsetY\", \"blur\", \"sepia\", \"invert\", \"brightness\", \"hue\", \"contrast\", \"saturate\"];\r\n/**\r\n * Base class used for drawing shapes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Graphics extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"lineCap\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\r\n            this._clear = true;\r\n        }\r\n        this._display.crisp = this.get(\"crisp\", false);\r\n        if (this.isDirty(\"fillGradient\")) {\r\n            const gradient = this.get(\"fillGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"strokeGradient\")) {\r\n            const gradient = this.get(\"strokeGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            this.markDirtyLayer();\r\n            this._display.clear();\r\n            let strokeDasharray = this.get(\"strokeDasharray\");\r\n            if ($type.isNumber(strokeDasharray)) {\r\n                if (strokeDasharray < 0.5) {\r\n                    strokeDasharray = [0];\r\n                }\r\n                else {\r\n                    strokeDasharray = [strokeDasharray];\r\n                }\r\n            }\r\n            this._display.setLineDash(strokeDasharray);\r\n            const strokeDashoffset = this.get(\"strokeDashoffset\");\r\n            if (strokeDashoffset) {\r\n                this._display.setLineDashOffset(strokeDashoffset);\r\n            }\r\n            const blendMode = this.get(\"blendMode\", BlendMode.NORMAL);\r\n            this._display.blendMode = blendMode;\r\n            const draw = this.get(\"draw\");\r\n            if (draw && typeof draw === \"function\") {\r\n                draw(this._display, this);\r\n            }\r\n            const svgPath = this.get(\"svgPath\");\r\n            if (svgPath != null) {\r\n                this._display.svgPath(svgPath);\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._clear) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillPattern = this.get(\"fillPattern\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            const stroke = this.get(\"stroke\");\r\n            const strokeGradient = this.get(\"strokeGradient\");\r\n            const strokePattern = this.get(\"strokePattern\");\r\n            const shadowColor = this.get(\"shadowColor\");\r\n            const shadowBlur = this.get(\"shadowBlur\");\r\n            const shadowOffsetX = this.get(\"shadowOffsetX\");\r\n            const shadowOffsetY = this.get(\"shadowOffsetY\");\r\n            const shadowOpacity = this.get(\"shadowOpacity\");\r\n            if (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\r\n                this._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\r\n            }\r\n            if (fill && !fillGradient) {\r\n                this._display.beginFill(fill, fillOpacity);\r\n                this._display.endFill();\r\n            }\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                const gradient = fillGradient.getFill(this);\r\n                if (gradient) {\r\n                    this._display.beginFill(gradient, fillOpacity);\r\n                    this._display.endFill();\r\n                }\r\n            }\r\n            if (fillPattern) {\r\n                const pattern = fillPattern.pattern;\r\n                if (pattern) {\r\n                    this._display.beginFill(pattern, fillOpacity);\r\n                    this._display.endFill();\r\n                    if (fillPattern instanceof PicturePattern) {\r\n                        fillPattern.events.once(\"loaded\", () => {\r\n                            this._clear = true;\r\n                            this.markDirty();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (stroke || strokeGradient || strokePattern) {\r\n                const strokeOpacity = this.get(\"strokeOpacity\");\r\n                let strokeWidth = this.get(\"strokeWidth\", 1);\r\n                if (this.get(\"nonScalingStroke\")) {\r\n                    strokeWidth = strokeWidth / this.get(\"scale\", 1);\r\n                }\r\n                if (this.get(\"crisp\")) {\r\n                    strokeWidth /= this._root._renderer.resolution;\r\n                }\r\n                const lineJoin = this.get(\"lineJoin\");\r\n                const lineCap = this.get(\"lineCap\");\r\n                if (stroke && !strokeGradient) {\r\n                    this._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin, lineCap);\r\n                    this._display.endStroke();\r\n                }\r\n                if (strokeGradient) {\r\n                    const stops = strokeGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && stroke) {\r\n                                stop.color = stroke;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = strokeOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    const gradient = strokeGradient.getFill(this);\r\n                    if (gradient) {\r\n                        this._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin, lineCap);\r\n                        this._display.endStroke();\r\n                    }\r\n                }\r\n                if (strokePattern) {\r\n                    /*\r\n                    let changed = false;\r\n                    \r\n                    if (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\r\n                        strokePattern.set(\"color\", stroke);\r\n                        strokePattern.set(\"colorInherited\", true);\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        // @todo: is this OK?\r\n                        strokePattern._changed();\r\n                    }\r\n                    */\r\n                    let pattern = strokePattern.pattern;\r\n                    if (pattern) {\r\n                        this._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin, lineCap);\r\n                        this._display.endStroke();\r\n                        if (strokePattern instanceof PicturePattern) {\r\n                            strokePattern.events.once(\"loaded\", () => {\r\n                                this._clear = true;\r\n                                this.markDirty();\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Graphics, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Graphics\"\r\n});\r\nObject.defineProperty(Graphics, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Graphics.className])\r\n});\r\n", "import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Rectangle extends Graphics {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n        this.setPrivateRaw(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear && !this.get(\"draw\")) {\r\n            this._draw();\r\n        }\r\n    }\r\n    _draw() {\r\n        this._display.drawRect(0, 0, this.width(), this.height());\r\n    }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n}\r\nObject.defineProperty(Rectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Rectangle\"\r\n});\r\nObject.defineProperty(Rectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Rectangle.className])\r\n});\r\n", "import { Entity } from \"../util/Entity\";\r\nexport function eachChildren(container, f) {\r\n    if (container.get(\"reverseChildren\", false)) {\r\n        container.children.eachReverse(f);\r\n    }\r\n    else {\r\n        container.children.each(f);\r\n    }\r\n}\r\n/**\r\n * Base class for [[Container]] layouts.\r\n */\r\nexport class Layout extends Entity {\r\n}\r\nObject.defineProperty(Layout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Layout\"\r\n});\r\nObject.defineProperty(Layout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Layout.className])\r\n});\r\n", "import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A horizontal children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class HorizontalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let availableWidth = container.innerWidth();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        totalPercent += childWidth.value;\r\n                        let w = availableWidth * childWidth.value;\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        if (minWidth > w) {\r\n                            availableWidth -= minWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        if (w > maxWidth) {\r\n                            availableWidth -= maxWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childWidth)) {\r\n                            childWidth = child.width();\r\n                        }\r\n                        availableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableWidth <= 0 || availableWidth == Infinity) {\r\n            availableWidth = .1;\r\n        }\r\n        //if (availableWidth > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        let privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        privateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\r\n                        child.setPrivate(\"width\", privateWidth);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.width instanceof Percent) {\r\n                            child.setPrivate(\"width\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginLeft = child.get(\"marginLeft\", 0);\r\n                    let marginRight = child.get(\"marginRight\", 0);\r\n                    let maxWidth = child.get(\"maxWidth\");\r\n                    let left = bounds.left;\r\n                    let right = bounds.right;\r\n                    if (maxWidth) {\r\n                        if (right - left > maxWidth) {\r\n                            right = left + maxWidth;\r\n                        }\r\n                    }\r\n                    let x = prevX + marginLeft - left;\r\n                    child.setPrivate(\"x\", x);\r\n                    prevX = x + right + marginRight;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"x\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(HorizontalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HorizontalLayout\"\r\n});\r\nObject.defineProperty(HorizontalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([HorizontalLayout.className])\r\n});\r\n", "import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A vertical children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class VerticalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableHeight = container.innerHeight();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        totalPercent += childHeight.value;\r\n                        let h = availableHeight * childHeight.value;\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        if (minHeight > h) {\r\n                            availableHeight -= minHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        if (h > maxHeight) {\r\n                            availableHeight -= maxHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childHeight)) {\r\n                            childHeight = child.height();\r\n                        }\r\n                        availableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableHeight <= 0 || availableHeight == Infinity) {\r\n            availableHeight = .1;\r\n        }\r\n        //if (availableHeight > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        let privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        privateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\r\n                        child.setPrivate(\"height\", privateHeight);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.height instanceof Percent) {\r\n                            child.setPrivate(\"height\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevY = paddingTop;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginTop = child.get(\"marginTop\", 0);\r\n                    let top = bounds.top;\r\n                    let bottom = bounds.bottom;\r\n                    let maxHeight = child.get(\"maxHeight\");\r\n                    if (maxHeight) {\r\n                        if (bottom - top > maxHeight) {\r\n                            bottom = top + maxHeight;\r\n                        }\r\n                    }\r\n                    let marginBottom = child.get(\"marginBottom\", 0);\r\n                    let y = prevY + marginTop - top;\r\n                    child.setPrivate(\"y\", y);\r\n                    prevY = y + bottom + marginBottom;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"y\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(VerticalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"VerticalLayout\"\r\n});\r\nObject.defineProperty(VerticalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([VerticalLayout.className])\r\n});\r\n", "import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * A grid children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class GridLayout extends Layout {\r\n    _afterNew() {\r\n        this._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let paddingRight = container.get(\"paddingRight\", 0);\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableWidth = container.maxWidth() - paddingLeft - paddingRight;\r\n        let minCellWidth = availableWidth;\r\n        let maxCellWidth = 1;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")) {\r\n                if (child.get(\"position\") != \"absolute\") {\r\n                    let childWidth = child.width();\r\n                    if (childWidth < minCellWidth) {\r\n                        minCellWidth = childWidth;\r\n                    }\r\n                    if (childWidth > maxCellWidth) {\r\n                        maxCellWidth = childWidth;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        minCellWidth = $math.fitToRange(minCellWidth, 1, availableWidth);\r\n        maxCellWidth = $math.fitToRange(maxCellWidth, 1, availableWidth);\r\n        let columnCount = 1;\r\n        if (this.get(\"fixedWidthGrid\")) {\r\n            columnCount = availableWidth / maxCellWidth;\r\n        }\r\n        else {\r\n            columnCount = availableWidth / minCellWidth;\r\n        }\r\n        columnCount = Math.max(1, Math.floor(columnCount));\r\n        columnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\r\n        let columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n        let prevY = paddingTop;\r\n        let column = 0;\r\n        let maxColumnHeight = 0;\r\n        columnCount = columnWidths.length;\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\" && child.isVisible()) {\r\n                const marginTop = child.get(\"marginTop\", 0);\r\n                const marginBottom = child.get(\"marginBottom\", 0);\r\n                let bounds = child.adjustedLocalBounds();\r\n                let marginLeft = child.get(\"marginLeft\", 0);\r\n                let marginRight = child.get(\"marginRight\", 0);\r\n                let x = prevX + marginLeft - bounds.left;\r\n                let y = prevY + marginTop - bounds.top;\r\n                child.setPrivate(\"x\", x);\r\n                child.setPrivate(\"y\", y);\r\n                prevX += columnWidths[column] + marginRight;\r\n                maxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\r\n                column++;\r\n                if (column >= columnCount) {\r\n                    column = 0;\r\n                    prevX = paddingLeft;\r\n                    prevY += maxColumnHeight;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getColumnWidths(container, columnCount, maxCellWidth, availableWidth) {\r\n        let totalWidth = 0;\r\n        let columnWidths = [];\r\n        let column = 0;\r\n        eachChildren(container, (child) => {\r\n            let bounds = child.adjustedLocalBounds();\r\n            if (child.get(\"position\") != \"absolute\" && child.isVisible()) {\r\n                if (this.get(\"fixedWidthGrid\")) {\r\n                    columnWidths[column] = maxCellWidth;\r\n                }\r\n                else {\r\n                    columnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\r\n                }\r\n                if (column < container.children.length - 1) {\r\n                    column++;\r\n                    if (column == columnCount) {\r\n                        column = 0;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(columnWidths, (w) => {\r\n            totalWidth += w;\r\n        });\r\n        if (totalWidth > availableWidth) {\r\n            if (columnCount > 2) {\r\n                columnCount -= 1;\r\n                return this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n            }\r\n            else {\r\n                return [availableWidth];\r\n            }\r\n        }\r\n        return columnWidths;\r\n    }\r\n}\r\nObject.defineProperty(GridLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"GridLayout\"\r\n});\r\nObject.defineProperty(GridLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([GridLayout.className])\r\n});\r\n", "import { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nexport class TextFormatter {\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    static escape(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, this.prefix + \"1\").\r\n            replace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").\r\n            replace(/\\]\\]/g, this.prefix + \"2\").\r\n            replace(/\\{\\{/g, this.prefix + \"3\").\r\n            replace(/\\}\\}/g, this.prefix + \"4\").\r\n            replace(/\\'\\'/g, this.prefix + \"5\");\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    static unescape(text) {\r\n        return text.\r\n            replace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").\r\n            replace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").\r\n            replace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").\r\n            replace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").\r\n            replace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\r\n    }\r\n    /**\r\n     * Cleans up the text text for leftover double square brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Cleaned up text\r\n     */\r\n    static cleanUp(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, \"[\").\r\n            replace(/\\]\\]/g, \"]\").\r\n            replace(/\\{\\{/g, \"{\").\r\n            replace(/\\}\\}/g, \"}\").\r\n            replace(/\\'\\'/g, \"'\");\r\n    }\r\n    /**\r\n     * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n     *\r\n     * If the second parameter `quotedBlocks` is set to `true` this method will\r\n     * also single out text blocks enclosed within single quotes that no\r\n     * formatting should be applied to, and they should be displayed as is.\r\n     *\r\n     * Default for the above is `false`, so that you can use single quote in text\r\n     * without escaping it.\r\n     *\r\n     * If enabled, single quotes can be escaped by doubling it - adding two\r\n     * single quotes, which will be replaced by a one single quote in the final\r\n     * output.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text          Text to chunk\r\n     * @param quotedBlocks  Use quoted blocks\r\n     * @param noFormatting  Formatting blocks will be treated as regular text\r\n     * @return Array of string chunks\r\n     */\r\n    static chunk(text, quotedBlocks = false, noFormatting = false) {\r\n        // Init result\r\n        let res = [];\r\n        // Replace double (escaped) square spaces and quotes with temporary codes\r\n        text = this.escape(text);\r\n        // Deal with style blocks\r\n        let chunks = quotedBlocks ? text.split(\"'\") : [text];\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            // Empty?\r\n            if (chunk === \"\") {\r\n                continue;\r\n            }\r\n            if ((i % 2) === 0) {\r\n                // Text outside quotes\r\n                // Parse for style blocks which are \"text\" chunks, the rest chunks are\r\n                // \"value\"\r\n                chunk = chunk.replace(/\\]\\[/g, \"]\" + $type.PLACEHOLDER + \"[\");\r\n                chunk = chunk.replace(/\\[\\]/g, \"[ ]\");\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Placeholder?\r\n                    if (chunk2 === $type.PLACEHOLDER) {\r\n                        continue;\r\n                    }\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or value\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"value\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": noFormatting ? \"value\" : \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // A text within doublequotes\r\n                // All chunks are \"text\"\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or text\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"text\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else if (this.isImage(chunk2)) {\r\n                        res.push({\r\n                            \"type\": \"image\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Checks if supplied format contains image information and should be\r\n     * formatted as such.\r\n     * I.e.: `[img: myImage.png]`\r\n     *\r\n     * @ignore\r\n     * @param  text  Format\r\n     * @return true if it is an image\r\n     */\r\n    static isImage(text) {\r\n        return text.match(/img[ ]?:/) ? true : false;\r\n    }\r\n    static getTextStyle(style) {\r\n        // let textStyle: string[] = [];\r\n        // let textFill: string | undefined;\r\n        let format = {};\r\n        if (style == \"\" || style == \"[ ]\") {\r\n            return {};\r\n        }\r\n        // Pre-process quoted text\r\n        const q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\r\n        if (q) {\r\n            for (let i = 0; i < q.length; i++) {\r\n                style = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\r\n            }\r\n        }\r\n        // Get style parts\r\n        let b = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\r\n        // Empty?\r\n        if (!b) {\r\n            return {};\r\n        }\r\n        // Check each part\r\n        for (let i = 0; i < b.length; i++) {\r\n            if (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\r\n                format.fontWeight = b[i];\r\n            }\r\n            else if (b[i].match(/^(underline|line-through)$/i)) {\r\n                format.textDecoration = b[i];\r\n            }\r\n            else if (b[i] == \"/\") {\r\n                // Just closing tag\r\n                // Do nothing\r\n            }\r\n            else if (!b[i].match(/:/)) {\r\n                // Color\r\n                format.fill = Color.fromString(b[i]);\r\n            }\r\n            else {\r\n                const p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\r\n                format[p[0]] = p[1];\r\n                //textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\r\n                //b[i] = b[i].replace(/\\+/g, \" \");\r\n            }\r\n        }\r\n        return format;\r\n    }\r\n}\r\nObject.defineProperty(TextFormatter, \"prefix\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"__amcharts__\"\r\n});\r\n", "import { List } from \"./List\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A version of [[List]] to hold children of the [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n */\r\nexport class Children extends List {\r\n    constructor(container) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._container = container;\r\n        this._events = this.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (x) => {\r\n                    this._onRemoved(x);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._onInserted(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._onRemoved(change.value);\r\n                this._onInserted(change.value, change.newIndex);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _onInserted(child, index) {\r\n        child._setParent(this._container, true);\r\n        const childrenDisplay = this._container._childrenDisplay;\r\n        if (index === undefined) {\r\n            childrenDisplay.addChild(child._display);\r\n        }\r\n        else {\r\n            childrenDisplay.addChildAt(child._display, index);\r\n        }\r\n    }\r\n    _onRemoved(child) {\r\n        this._container._childrenDisplay.removeChild(child._display);\r\n        this._container.markDirtyBounds();\r\n        this._container.markDirty();\r\n    }\r\n    /**\r\n     * Returns `true` if obejct is disposed.\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Permanently dispose this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._events.dispose();\r\n            $array.each(this.values, (child) => {\r\n                child.dispose();\r\n            });\r\n        }\r\n    }\r\n}\r\n", "/** @ignore */ /** */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nimport { Sprite } from \"../render/Sprite\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\n/**\r\n * @ignore\r\n */\r\nexport function populateString(target, string) {\r\n    if (string != null) {\r\n        string = \"\" + string;\r\n        string = TextFormatter.escape(string);\r\n        let tags = string.match(/\\{([^}]+)\\}/g);\r\n        let i;\r\n        if (tags) {\r\n            for (i = 0; i < tags.length; i++) {\r\n                let tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\r\n                let value = getTagValue(target, tag, \"\");\r\n                if (value == null) {\r\n                    value = \"\";\r\n                }\r\n                string = string.split(tags[i]).join(value);\r\n            }\r\n        }\r\n        string = TextFormatter.unescape(string);\r\n    }\r\n    else {\r\n        string = \"\";\r\n    }\r\n    // TODO: apply adapter?\r\n    return string;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getTagValue(target, tagName, format) {\r\n    let value;\r\n    const dataItem = target.dataItem;\r\n    // Parse parts\r\n    let parts = [];\r\n    let reg = /(format[a-zA-Z]*)\\((.*)\\)|([^.]+)/g;\r\n    let matches;\r\n    while (true) {\r\n        matches = reg.exec(tagName);\r\n        if (matches === null) {\r\n            break;\r\n        }\r\n        if (matches[3]) {\r\n            // Simple property\r\n            parts.push({\r\n                prop: matches[3]\r\n            });\r\n            // Check if maybe we should force a formatter on this value\r\n            const dateFields = target.getDateFormatter().get(\"dateFields\", []);\r\n            const numericFields = target.getNumberFormatter().get(\"numericFields\", []);\r\n            const durationFields = target.getDurationFormatter().get(\"durationFields\", []);\r\n            if (dateFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDate\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (numericFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatNumber\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (durationFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDuration\",\r\n                    params: []\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            // Parse parameters\r\n            let params = [];\r\n            if ($utils.trim(matches[2]) != \"\") {\r\n                let reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\r\n                let matches2;\r\n                while (true) {\r\n                    matches2 = reg2.exec(matches[2]);\r\n                    if (matches2 === null) {\r\n                        break;\r\n                    }\r\n                    params.push(matches2[1] || matches2[2] || matches2[3]);\r\n                }\r\n            }\r\n            parts.push({\r\n                method: matches[1],\r\n                params: params\r\n            });\r\n        }\r\n    }\r\n    // Check if we can retrieve the value from data item\r\n    if (dataItem) {\r\n        // Check values\r\n        value = getTagValueFromObject(target, parts, dataItem._settings);\r\n        // Check properties\r\n        if (value == null || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\r\n            value = getTagValueFromObject(target, parts, dataItem);\r\n        }\r\n        // Check data context\r\n        let dataContext = dataItem.dataContext;\r\n        if (value == null && dataContext) {\r\n            value = getTagValueFromObject(target, parts, dataContext);\r\n            // Maybe it's a literal dot-separated name of the key in dataContext?\r\n            if (value == null) {\r\n                value = getTagValueFromObject(target, [{\r\n                        prop: tagName\r\n                    }], dataContext);\r\n            }\r\n            // scond data context level sometimes exist (tree map)\r\n            if (value == null && dataContext.dataContext) {\r\n                value = getTagValueFromObject(target, parts, dataContext.dataContext);\r\n            }\r\n        }\r\n        // Check component's data item\r\n        if (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\r\n            value = getTagValue(dataItem.component, tagName, format);\r\n        }\r\n    }\r\n    // Check sprite's properties\r\n    if (value == null) {\r\n        value = getTagValueFromObject(target, parts, target);\r\n    }\r\n    // Finally, check the parent\r\n    if (value == null && target.parent) {\r\n        value = getTagValue(target.parent, tagName, format);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getCustomDataValue(target, prop) {\r\n    const customData = target.getPrivate(\"customData\");\r\n    if ($type.isObject(customData)) {\r\n        return customData[prop];\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getTagValueFromObject(target, parts, object, format) {\r\n    let current = object;\r\n    let formatApplied = false;\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n        if (part.prop) {\r\n            // Regular property\r\n            if (current instanceof Sprite) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current.getPrivate(part.prop);\r\n                if (tmp == null)\r\n                    tmp = getCustomDataValue(current, part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else if (current.get) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else {\r\n                current = current[part.prop];\r\n            }\r\n            if (current == null) {\r\n                // Not set, return undefined\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            switch (part.method) {\r\n                case \"formatNumber\":\r\n                    let numberValue = $type.toNumber(current);\r\n                    if (numberValue != null) {\r\n                        current = target.getNumberFormatter().format(numberValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDate\":\r\n                    let dateValue = $type.toDate(current);\r\n                    if (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\r\n                        // Was not able to get date out of value, quitting and letting\r\n                        // calling method try another value\r\n                        return;\r\n                    }\r\n                    if (dateValue != null) {\r\n                        current = target.getDateFormatter().format(dateValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDuration\":\r\n                    let durationValue = $type.toNumber(current);\r\n                    if (durationValue != null) {\r\n                        current = target.getDurationFormatter().format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"urlEncode\":\r\n                case \"encodeURIComponent\":\r\n                    current = encodeURIComponent(current);\r\n                    break;\r\n                default:\r\n                    if (current[part.method]) {\r\n                        current[part.method].apply(object, part.params);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    // Apply default format if it wasn't applied explicitly\r\n    if (!formatApplied) {\r\n        let formatParts = [{\r\n                method: \"\",\r\n                params: format\r\n            }];\r\n        if (format == null) {\r\n            // Format is not set\r\n            // Determine from the type of the value\r\n            if ($type.isNumber(current)) {\r\n                formatParts[0].method = \"formatNumber\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n            else if ($type.isDate(current)) {\r\n                formatParts[0].method = \"formatDate\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n        }\r\n        else {\r\n            // Format set\r\n            // Try to determine formatter based on the format\r\n            let formatterType = $utils.getFormat(format);\r\n            // format\r\n            if (formatterType === \"number\") {\r\n                formatParts[0].method = \"formatNumber\";\r\n            }\r\n            else if (formatterType === \"date\") {\r\n                formatParts[0].method = \"formatDate\";\r\n            }\r\n            else if (formatterType === \"duration\") {\r\n                formatParts[0].method = \"formatDuration\";\r\n            }\r\n        }\r\n        // Apply format\r\n        if (formatParts[0].method) {\r\n            current = getTagValueFromObject(target, formatParts, current);\r\n        }\r\n    }\r\n    return current;\r\n}\r\n", "import { Children } from \"../util/Children\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { HorizontalLayout } from \"./HorizontalLayout\";\r\nimport { VerticalLayout } from \"./VerticalLayout\";\r\nimport { GridLayout } from \"./GridLayout\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\r\nexport class Container extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        Object.defineProperty(this, \"_childrenDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        /**\r\n         * List of Container's child elements.\r\n         */\r\n        Object.defineProperty(this, \"children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Children(this)\r\n        });\r\n        Object.defineProperty(this, \"_percentageSizeChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_percentagePositionChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_prevWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_prevHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.addChild(this._childrenDisplay);\r\n    }\r\n    _dispose() {\r\n        $array.eachReverse(this.allChildren(), (child) => {\r\n            child.dispose();\r\n        });\r\n        if (this.getPrivate(\"htmlElement\")) {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"interactiveChildren\")) {\r\n            this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\r\n        }\r\n        if (this.isDirty(\"layout\")) {\r\n            this._prevWidth = 0;\r\n            this._prevHeight = 0;\r\n            this.markDirtyBounds();\r\n            if (this._prevSettings.layout) {\r\n                this.children.each((child) => {\r\n                    child.removePrivate(\"x\");\r\n                    child.removePrivate(\"y\");\r\n                });\r\n            }\r\n        }\r\n        if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\r\n            this.children.each((child) => {\r\n                child.markDirtyPosition();\r\n            });\r\n        }\r\n        if (this.isDirty(\"maskContent\")) {\r\n            const childrenDisplay = this._childrenDisplay;\r\n            let contentMask = this._contentMask;\r\n            if (this.get(\"maskContent\")) {\r\n                if (!contentMask) {\r\n                    contentMask = Rectangle.new(this._root, {\r\n                        x: -.5,\r\n                        y: -.5,\r\n                        width: this.width() + 1,\r\n                        height: this.height() + 1\r\n                    });\r\n                    this._contentMask = contentMask;\r\n                    childrenDisplay.addChildAt(contentMask._display, 0);\r\n                    childrenDisplay.mask = contentMask._display;\r\n                }\r\n            }\r\n            else {\r\n                if (contentMask) {\r\n                    childrenDisplay.removeChild(contentMask._display);\r\n                    childrenDisplay.mask = null;\r\n                    contentMask.dispose();\r\n                    this._contentMask = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        $array.each(this._percentageSizeChildren, (child) => {\r\n            child._updateSize();\r\n        });\r\n        $array.each(this._percentagePositionChildren, (child) => {\r\n            child.markDirtyPosition();\r\n            child._updateSize();\r\n        });\r\n        this.updateBackground();\r\n    }\r\n    updateBackground() {\r\n        const background = this.get(\"background\");\r\n        let bounds = this._localBounds;\r\n        if (bounds && !this.isHidden()) {\r\n            let x = bounds.left;\r\n            let y = bounds.top;\r\n            let w = bounds.right - x;\r\n            let h = bounds.bottom - y;\r\n            let maxWidth = this.get(\"maxWidth\");\r\n            let maxHeight = this.get(\"maxHeight\");\r\n            if (maxHeight) {\r\n                if (h > maxHeight) {\r\n                    h = maxHeight;\r\n                }\r\n            }\r\n            if (maxWidth) {\r\n                if (w > maxWidth) {\r\n                    w = maxWidth;\r\n                }\r\n            }\r\n            let width = this.width();\r\n            let height = this.height();\r\n            if (background) {\r\n                background.setAll({ width: w, height: h, x: x, y: y });\r\n                if (this._display.interactive) {\r\n                    background._display.interactive = true;\r\n                }\r\n            }\r\n            const contentMask = this._contentMask;\r\n            if (contentMask) {\r\n                contentMask.setAll({ width: width + 1, height: height + 1 });\r\n            }\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar.set(\"height\", height);\r\n                verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\r\n                verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\r\n                const bg = verticalScrollbar.get(\"background\");\r\n                if (bg) {\r\n                    bg.setAll({ width: verticalScrollbar.width(), height: height });\r\n                }\r\n                let visible = true;\r\n                if (this._contentHeight <= height) {\r\n                    visible = false;\r\n                }\r\n                verticalScrollbar.setPrivate(\"visible\", visible);\r\n            }\r\n        }\r\n    }\r\n    _applyThemes(force = false) {\r\n        if (super._applyThemes(force)) {\r\n            this.eachChildren((child) => {\r\n                child._applyThemes(force);\r\n            });\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _applyState(name) {\r\n        super._applyState(name);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.apply(name);\r\n            });\r\n        }\r\n    }\r\n    _applyStateAnimated(name, duration) {\r\n        super._applyStateAnimated(name, duration);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.applyAnimate(name, duration);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns container's inner width (width without padding) in pixels.\r\n     *\r\n     * @return Inner width (px)\r\n     */\r\n    innerWidth() {\r\n        return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\r\n    }\r\n    /**\r\n     * Returns container's inner height (height without padding) in pixels.\r\n     *\r\n     * @return Inner height (px)\r\n     */\r\n    innerHeight() {\r\n        return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\r\n    }\r\n    _getBounds() {\r\n        if (!this.get(\"html\")) {\r\n            let width = this.get(\"width\");\r\n            let height = this.get(\"height\");\r\n            let pWidth = this.getPrivate(\"width\");\r\n            let pHeight = this.getPrivate(\"height\");\r\n            let bounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: this.width(),\r\n                bottom: this.height()\r\n            };\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                horizontal = true;\r\n            }\r\n            if (layout instanceof VerticalLayout) {\r\n                vertical = true;\r\n            }\r\n            if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\r\n                // void\r\n            }\r\n            else {\r\n                let m = Number.MAX_VALUE;\r\n                let l = m;\r\n                let r = -m;\r\n                let t = m;\r\n                let b = -m;\r\n                const paddingLeft = this.get(\"paddingLeft\", 0);\r\n                const paddingTop = this.get(\"paddingTop\", 0);\r\n                const paddingRight = this.get(\"paddingRight\", 0);\r\n                const paddingBottom = this.get(\"paddingBottom\", 0);\r\n                this.children.each((child) => {\r\n                    if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\r\n                        let childBounds = child.adjustedLocalBounds();\r\n                        let childX = child.x();\r\n                        let childY = child.y();\r\n                        let cl = childX + childBounds.left;\r\n                        let cr = childX + childBounds.right;\r\n                        let ct = childY + childBounds.top;\r\n                        let cb = childY + childBounds.bottom;\r\n                        if (horizontal) {\r\n                            cl -= child.get(\"marginLeft\", 0);\r\n                            cr += child.get(\"marginRight\", 0);\r\n                        }\r\n                        if (vertical) {\r\n                            ct -= child.get(\"marginTop\", 0);\r\n                            cb += child.get(\"marginBottom\", 0);\r\n                        }\r\n                        if (cl < l) {\r\n                            l = cl;\r\n                        }\r\n                        if (cr > r) {\r\n                            r = cr;\r\n                        }\r\n                        if (ct < t) {\r\n                            t = ct;\r\n                        }\r\n                        if (cb > b) {\r\n                            b = cb;\r\n                        }\r\n                    }\r\n                });\r\n                if (l == m) {\r\n                    l = 0;\r\n                }\r\n                if (r == -m) {\r\n                    r = 0;\r\n                }\r\n                if (t == m) {\r\n                    t = 0;\r\n                }\r\n                if (b == -m) {\r\n                    b = 0;\r\n                }\r\n                bounds.left = l - paddingLeft;\r\n                bounds.top = t - paddingTop;\r\n                bounds.right = r + paddingRight;\r\n                bounds.bottom = b + paddingBottom;\r\n                const minWidth = this.get(\"minWidth\");\r\n                if ($type.isNumber(minWidth) && minWidth > 0) {\r\n                    if (bounds.right - bounds.left < minWidth) {\r\n                        if (bounds.right >= minWidth) {\r\n                            bounds.left = bounds.right - minWidth;\r\n                        }\r\n                        else {\r\n                            bounds.right = bounds.left + minWidth;\r\n                        }\r\n                    }\r\n                }\r\n                const minHeight = this.get(\"minHeight\");\r\n                if ($type.isNumber(minHeight) && minHeight > 0) {\r\n                    if (bounds.bottom - bounds.top < minHeight) {\r\n                        if (bounds.bottom >= minHeight) {\r\n                            bounds.top = bounds.bottom - minHeight;\r\n                        }\r\n                        else {\r\n                            bounds.bottom = bounds.top + minHeight;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._contentWidth = bounds.right - bounds.left;\r\n            this._contentHeight = bounds.bottom - bounds.top;\r\n            if ($type.isNumber(width)) {\r\n                bounds.left = 0;\r\n                bounds.right = width;\r\n            }\r\n            if ($type.isNumber(pWidth)) {\r\n                bounds.left = 0;\r\n                bounds.right = pWidth;\r\n            }\r\n            if ($type.isNumber(height)) {\r\n                bounds.top = 0;\r\n                bounds.bottom = height;\r\n            }\r\n            if ($type.isNumber(pHeight)) {\r\n                bounds.top = 0;\r\n                bounds.bottom = pHeight;\r\n            }\r\n            this._localBounds = bounds;\r\n        }\r\n        else {\r\n            let bounds = this._localBounds;\r\n            if (bounds) {\r\n                this._contentWidth = bounds.right - bounds.left;\r\n                this._contentHeight = bounds.bottom - bounds.top;\r\n            }\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        const layout = this.get(\"layout\");\r\n        if (layout) {\r\n            layout.updateContainer(this);\r\n        }\r\n        super._updateBounds();\r\n        this.updateBackground();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this._root._addDirtyParent(this);\r\n    }\r\n    _prepareChildren() {\r\n        const innerWidth = this.innerWidth();\r\n        const innerHeight = this.innerHeight();\r\n        if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout) {\r\n                if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                    horizontal = true;\r\n                }\r\n                if (layout instanceof VerticalLayout) {\r\n                    vertical = true;\r\n                }\r\n            }\r\n            $array.each(this._percentageSizeChildren, (child) => {\r\n                if (!horizontal) {\r\n                    let width = child.get(\"width\");\r\n                    if (width instanceof Percent) {\r\n                        child.setPrivate(\"width\", width.value * innerWidth);\r\n                    }\r\n                }\r\n                if (!vertical) {\r\n                    let height = child.get(\"height\");\r\n                    if (height instanceof Percent) {\r\n                        child.setPrivate(\"height\", height.value * innerHeight);\r\n                    }\r\n                }\r\n            });\r\n            $array.each(this._percentagePositionChildren, (child) => {\r\n                child.markDirtyPosition();\r\n                child.markDirtyBounds();\r\n            });\r\n            this._prevWidth = innerWidth;\r\n            this._prevHeight = innerHeight;\r\n            this._sizeDirty = true;\r\n            this.updateBackground();\r\n        }\r\n        this._handleStates();\r\n    }\r\n    _updateHTMLContent() {\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\") {\r\n            this._root._setHTMLContent(this, populateString(this, html));\r\n        }\r\n        else {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        this._root._positionHTMLElement(this);\r\n    }\r\n    /**\r\n     * If scrolling is enabled on the Container (by adding `verticalScrollbar`)\r\n     * the Container will scroll in such way so that target element becomes\r\n     * visible if its currently outside of view.\r\n     *\r\n     * @param  child  Target child\r\n     * @since 5.10.5\r\n     */\r\n    scrollToChild(child) {\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            let y = child.y();\r\n            let h = this.innerHeight();\r\n            let ch = child.height();\r\n            let contentH = this._contentHeight;\r\n            let max = 1 - (h - ch / 2) / contentH;\r\n            if (y + ch * .7 + this._childrenDisplay.y > h || y - ch * .3 + this._childrenDisplay.y < 0) {\r\n                let pos = Math.max(0, Math.min(max, (y - ch / 2) / contentH));\r\n                verticalScrollbar.animate({ key: \"start\", to: pos, duration: verticalScrollbar.get(\"animationDuration\", 0), easing: verticalScrollbar.get(\"animationEasing\") });\r\n            }\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        if (this.isDirty(\"html\")) {\r\n            this._updateHTMLContent();\r\n        }\r\n        if (this.isDirty(\"verticalScrollbar\")) {\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar._setParent(this);\r\n                verticalScrollbar.startGrip.setPrivate(\"visible\", false);\r\n                verticalScrollbar.endGrip.setPrivate(\"visible\", false);\r\n                this.set(\"maskContent\", true);\r\n                this.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\r\n                let background = this.get(\"background\");\r\n                if (!background) {\r\n                    background = this.set(\"background\", Rectangle.new(this._root, {\r\n                        themeTags: [\"background\"],\r\n                        fillOpacity: 0,\r\n                        fill: this._root.interfaceColors.get(\"alternativeBackground\")\r\n                    }));\r\n                }\r\n                this._vsbd0 = this.events.on(\"wheel\", (event) => {\r\n                    const wheelEvent = event.originalEvent;\r\n                    // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n                    // some page element is over the chart.\r\n                    if ($utils.isLocalEvent(wheelEvent, this)) {\r\n                        wheelEvent.preventDefault();\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                    let shiftY = wheelEvent.deltaY / 5000;\r\n                    const start = verticalScrollbar.get(\"start\", 0);\r\n                    const end = verticalScrollbar.get(\"end\", 1);\r\n                    if (start + shiftY <= 0) {\r\n                        shiftY = -start;\r\n                    }\r\n                    if (end + shiftY >= 1) {\r\n                        shiftY = 1 - end;\r\n                    }\r\n                    if (start + shiftY >= 0 && end + shiftY <= 1) {\r\n                        verticalScrollbar.set(\"start\", start + shiftY);\r\n                        verticalScrollbar.set(\"end\", end + shiftY);\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd0);\r\n                this._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\r\n                    let h = this._contentHeight;\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    const contentMask = this._contentMask;\r\n                    childrenDisplay.y = -verticalScrollbar.get(\"start\", 0) * h;\r\n                    childrenDisplay.markDirtyLayer();\r\n                    if (contentMask) {\r\n                        contentMask._display.y = -childrenDisplay.y;\r\n                        childrenDisplay.mask = contentMask._display;\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd1);\r\n                this._display.addChild(verticalScrollbar._display);\r\n            }\r\n            else {\r\n                const previous = this._prevSettings.verticalScrollbar;\r\n                if (previous) {\r\n                    this._display.removeChild(previous._display);\r\n                    if (this._vsbd0) {\r\n                        this._vsbd0.dispose();\r\n                    }\r\n                    if (this._vsbd1) {\r\n                        this._vsbd1.dispose();\r\n                    }\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    childrenDisplay.y = 0;\r\n                    this.setPrivate(\"height\", undefined);\r\n                    this.set(\"maskContent\", false);\r\n                    this.set(\"paddingRight\", undefined);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"background\")) {\r\n            // TODO maybe this should dispose ?\r\n            const previous = this._prevSettings[\"background\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n            }\r\n            const background = this.get(\"background\");\r\n            if (background instanceof Sprite) {\r\n                background.set(\"isMeasured\", false);\r\n                background._setParent(this);\r\n                this._display.addChildAt(background._display, 0);\r\n            }\r\n        }\r\n        if (this.isDirty(\"mask\")) {\r\n            const mask = this.get(\"mask\");\r\n            const previous = this._prevSettings[\"mask\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n                if (previous != mask) {\r\n                    previous.dispose();\r\n                }\r\n            }\r\n            if (mask) {\r\n                const parent = mask.parent;\r\n                if (parent) {\r\n                    parent.children.removeValue(mask);\r\n                }\r\n                mask._setParent(this);\r\n                this._display.addChildAt(mask._display, 0);\r\n                this._childrenDisplay.mask = mask._display;\r\n            }\r\n        }\r\n    }\r\n    _processTemplateField() {\r\n        super._processTemplateField();\r\n        this.children.each((child) => {\r\n            child._processTemplateField();\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    walkChildren(f) {\r\n        this.children.each((child) => {\r\n            if (child instanceof Container) {\r\n                child.walkChildren(f);\r\n            }\r\n            f(child);\r\n        });\r\n    }\r\n    eachChildren(f) {\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            f(background);\r\n        }\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            f(verticalScrollbar);\r\n        }\r\n        const mask = this.get(\"mask\");\r\n        if (mask) {\r\n            f(mask);\r\n        }\r\n        this.children.values.forEach((child) => {\r\n            f(child);\r\n        });\r\n    }\r\n    allChildren() {\r\n        const output = [];\r\n        this.eachChildren((x) => {\r\n            output.push(x);\r\n        });\r\n        return output;\r\n    }\r\n    _setDataItem(dataItem) {\r\n        const updated = (dataItem !== this._dataItem);\r\n        super._setDataItem(dataItem);\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\" && updated) {\r\n            this._root._setHTMLContent(this, populateString(this, html));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Container, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Container\"\r\n});\r\nObject.defineProperty(Container, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Container.className])\r\n});\r\n", "import { Sprite } from \"./Sprite\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Disposer } from \"../util/Disposer\";\r\n/**\r\n * @ignore Text is an internal class. Use Label instead.\r\n */\r\nexport class Text extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeTextStyle()\r\n        });\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeText(\"\", this.textStyle)\r\n        });\r\n        Object.defineProperty(this, \"_textStyles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"maxChars\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _updateBounds() {\r\n        if (!this.get(\"text\")) {\r\n            let newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            };\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            super._updateBounds();\r\n            let fillGradient = this.get(\"fillGradient\");\r\n            if (fillGradient) {\r\n                this._display.style.fill = fillGradient.getFill(this);\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        this._display.clear();\r\n        let textStyle = this.textStyle;\r\n        if (this.isDirty(\"opacity\")) {\r\n            let opacity = this.get(\"opacity\", 1);\r\n            this._display.alpha = opacity;\r\n        }\r\n        if (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\r\n            this._display.text = this._getText();\r\n            this.markDirtyBounds();\r\n            if (this.get(\"role\") == \"tooltip\") {\r\n                this._root.updateTooltip(this);\r\n            }\r\n        }\r\n        if (this.isPrivateDirty(\"tooltipElement\")) {\r\n            const tooltipElement = this.getPrivate(\"tooltipElement\");\r\n            if (tooltipElement) {\r\n                this._disposers.push(new Disposer(() => {\r\n                    this._root._removeTooltipElement(this);\r\n                }));\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\")) {\r\n            textStyle.wordWrapWidth = this.width();\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"oversizedBehavior\")) {\r\n            textStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"breakWords\")) {\r\n            textStyle.breakWords = this.get(\"breakWords\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ellipsis\")) {\r\n            textStyle.ellipsis = this.get(\"ellipsis\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ignoreFormatting\")) {\r\n            textStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"minScale\")) {\r\n            textStyle.minScale = this.get(\"minScale\", 0);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                textStyle.fill = fillGradient.getFill(this);\r\n            }\r\n            else if (fill) {\r\n                textStyle.fill = fill;\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillOpacity\")) {\r\n            let fillOpacity = this.get(\"fillOpacity\", 1);\r\n            if (fillOpacity) {\r\n                textStyle.fillOpacity = fillOpacity;\r\n            }\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\r\n            textStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\r\n            textStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        $array.each(this._textStyles, (styleName) => {\r\n            if (this._dirty[styleName]) {\r\n                textStyle[styleName] = this.get(styleName);\r\n                this.markDirtyBounds();\r\n            }\r\n        });\r\n        textStyle[\"fontSize\"] = this.get(\"fontSize\");\r\n        textStyle[\"fontFamily\"] = this.get(\"fontFamily\");\r\n        this._display.style = textStyle;\r\n        if (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n    }\r\n    _getText() {\r\n        let text = this.get(\"text\", \"\");\r\n        if (this.get(\"maxChars\")) {\r\n            text = $utils.truncateTextWithEllipsis(text, this.get(\"maxChars\", 100000000), this.get(\"breakWords\"), this.get(\"ellipsis\"));\r\n        }\r\n        return this.get(\"populateText\") ? populateString(this, text) : text;\r\n    }\r\n    _getAccessibleText() {\r\n        const ariaLabel = this.get(\"ariaLabel\");\r\n        if (ariaLabel !== undefined) {\r\n            return this.get(\"populateText\") ? populateString(this, ariaLabel) : ariaLabel;\r\n        }\r\n        return this._getText();\r\n    }\r\n    /**\r\n     * Forces the text to be re-evaluated and re-populated.\r\n     */\r\n    markDirtyText() {\r\n        this._display.text = this._getText();\r\n        if (this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n        this.markDirtyBounds();\r\n        this.markDirty();\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        if (this.get(\"populateText\")) {\r\n            this.markDirtyText();\r\n        }\r\n    }\r\n    getNumberFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getNumberFormatter();\r\n        }\r\n        else {\r\n            return super.getNumberFormatter();\r\n        }\r\n    }\r\n    getDateFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDateFormatter();\r\n        }\r\n        else {\r\n            return super.getDateFormatter();\r\n        }\r\n    }\r\n    getDurationFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDurationFormatter();\r\n        }\r\n        else {\r\n            return super.getDurationFormatter();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Text, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Text\"\r\n});\r\nObject.defineProperty(Text, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Text.className])\r\n});\r\n", "import { Text } from \"../render/Text\";\r\nimport { p50, p100 } from \"../util/Percent\";\r\nimport { Container } from \"./Container\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Creates a label with support for in-line styling and data bindings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\r\n */\r\nexport class Label extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textKeys\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"text\",\r\n                \"fill\",\r\n                \"fillGradient\",\r\n                \"fillOpacity\",\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"populateText\",\r\n                \"role\",\r\n                \"ignoreFormatting\",\r\n                \"maxChars\",\r\n                \"ariaLabel\"\r\n            ]\r\n        });\r\n    }\r\n    /**\r\n     * @ignore Text is not to be used directly\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._makeText();\r\n        $array.each(this._textKeys, (property) => {\r\n            const propValue = this.get(property);\r\n            if (propValue != undefined) {\r\n                this._text.set(property, propValue);\r\n            }\r\n        });\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            this._text.set(\"text\", \"\");\r\n        }\r\n        this.onPrivate(\"maxWidth\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n        this.onPrivate(\"maxHeight\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(Text.new(this._root, {}));\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        const text = this._text;\r\n        $array.each(this._textKeys, (property) => {\r\n            this._text.set(property, this.get(property));\r\n        });\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isDirty(\"rotation\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        // Do not show regular text if HTML is used\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            text.set(\"text\", \"\");\r\n        }\r\n        else {\r\n            text.set(\"text\", this.get(\"text\"));\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\r\n            const textAlign = this.get(\"textAlign\");\r\n            let x;\r\n            if (this.get(\"width\") != null) {\r\n                if (textAlign == \"right\") {\r\n                    x = p100;\r\n                }\r\n                else if (textAlign == \"center\") {\r\n                    x = p50;\r\n                }\r\n                else {\r\n                    x = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (textAlign == \"left\" || textAlign == \"start\") {\r\n                    x = this.get(\"paddingLeft\", 0);\r\n                }\r\n                else if (textAlign == \"right\" || textAlign == \"end\") {\r\n                    x = -this.get(\"paddingRight\", 0);\r\n                }\r\n            }\r\n            text.set(\"x\", x);\r\n        }\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            background.setPrivate(\"visible\", text._display.textVisible);\r\n        }\r\n    }\r\n    _maybeUpdateHTMLColor() {\r\n        const htmlElement = this.getPrivate(\"htmlElement\");\r\n        if (htmlElement && this.get(\"fill\")) {\r\n            htmlElement.style.color = this.get(\"fill\").toCSSHex();\r\n            //@todo support gradient\r\n        }\r\n    }\r\n    _setMaxDimentions() {\r\n        const rotation = this.get(\"rotation\");\r\n        const vertical = rotation == 90 || rotation == 270 || rotation == -90;\r\n        const text = this._text;\r\n        const maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\r\n        if ($type.isNumber(maxWidth)) {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\r\n        }\r\n        const maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\r\n        if ($type.isNumber(maxHeight)) {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\r\n        }\r\n        this.root.events.once(\"frameended\", () => {\r\n            text.markDirtyBounds();\r\n        });\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this._markDirtyKey(\"text\");\r\n        this._markDirtyKey(\"html\");\r\n        const text = this._text;\r\n        if (text.get(\"populateText\")) {\r\n            text.markDirtyText();\r\n        }\r\n        const html = this.get(\"html\");\r\n        if (html && html !== \"\") {\r\n            this._updateHTMLContent();\r\n        }\r\n    }\r\n    /**\r\n     * Returns text with populated placeholders and formatting if `populateText` is\r\n     * set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getText() {\r\n        return this._text._getText();\r\n    }\r\n    /**\r\n     * Returns \"aria-label\" text with populated placeholders and formatting\r\n     * if `populateText` is set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getAccessibleText() {\r\n        return this._text._getAccessibleText();\r\n    }\r\n}\r\nObject.defineProperty(Label, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Label\"\r\n});\r\nObject.defineProperty(Label, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Label.className])\r\n});\r\n", "import { List } from \"./List\";\r\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\r\nexport class ListData extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * An optional processor for data.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n         */\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    incrementRef() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    decrementRef() { }\r\n    _onPush(newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onPush(newValue);\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onInsertIndex(index, newValue);\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n}\r\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\r\nexport class JsonData {\r\n    constructor(value) {\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = value;\r\n    }\r\n    incrementRef() { }\r\n    decrementRef() { }\r\n}\r\n", "import { __awaiter } from \"tslib\";\r\nimport { Settings } from \"../util/Entity\";\r\nimport { Container } from \"./Container\";\r\nimport { ListData } from \"../util/Data\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $object from \"../util/Object\";\r\n/**\r\n * A base element that holds data bit (data item) for any [[Component]].\r\n */\r\nexport class DataItem extends Settings {\r\n    constructor(component, dataContext, settings) {\r\n        super(settings);\r\n        /**\r\n         * A data item's owener [[Component]].\r\n         */\r\n        Object.defineProperty(this, \"component\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A reference to actual item in source data this item is based on.\r\n         */\r\n        Object.defineProperty(this, \"dataContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * @todo requires description\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"open\" values.\r\n         */\r\n        Object.defineProperty(this, \"open\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"close\" values.\r\n         */\r\n        Object.defineProperty(this, \"close\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.dataContext = dataContext;\r\n        this.component = component;\r\n        this._settings.visible = true;\r\n        this._checkDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this.component.markDirtyValues(this);\r\n    }\r\n    _startAnimation() {\r\n        this.component._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this.component._root.animationTime;\r\n    }\r\n    _dispose() {\r\n        if (this.component) {\r\n            this.component.disposeDataItem(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    /**\r\n     * Shows a data item that's currently hidden.\r\n     */\r\n    show(duration) {\r\n        this.setRaw(\"visible\", true);\r\n        if (this.component) {\r\n            this.component.showDataItem(this, duration);\r\n        }\r\n    }\r\n    /**\r\n     * Hides a data item that's currently visible.\r\n     */\r\n    hide(duration) {\r\n        this.setRaw(\"visible\", false);\r\n        if (this.component) {\r\n            this.component.hideDataItem(this, duration);\r\n        }\r\n    }\r\n    isHidden() {\r\n        return !this.get(\"visible\");\r\n    }\r\n}\r\n/**\r\n * A base class for elements that make use of data.\r\n */\r\nexport class Component extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_data\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListData()\r\n        });\r\n        Object.defineProperty(this, \"_dataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mainDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._dataItems\r\n        });\r\n        Object.defineProperty(this, \"valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"id\"]\r\n        });\r\n        Object.defineProperty(this, \"_valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueFieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataChanged\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates if the component has already been initialized.\r\n         */\r\n        Object.defineProperty(this, \"inited\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    /**\r\n     * Component's data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n     */\r\n    set data(data) {\r\n        data.incrementRef();\r\n        this._data.decrementRef();\r\n        this._data = data;\r\n    }\r\n    /**\r\n     * @return  Data\r\n     */\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._data.decrementRef();\r\n    }\r\n    _onDataClear() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._data.incrementRef();\r\n        this._updateFields();\r\n        this._disposers.push(this.data.events.onAll((change) => {\r\n            const dataItems = this._mainDataItems;\r\n            this.markDirtyValues();\r\n            this._markDirtyGroup();\r\n            this._dataChanged = true;\r\n            if (change.type === \"clear\") {\r\n                $array.each(dataItems, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n                dataItems.length = 0;\r\n                this._onDataClear();\r\n            }\r\n            else if (change.type === \"push\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.push(dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                const properties = this._makeDataItem(change.newValue);\r\n                if (dataItem.bullets && dataItem.bullets.length == 0) {\r\n                    dataItem.bullets = undefined;\r\n                }\r\n                $object.keys(properties).forEach((key) => {\r\n                    dataItem.animate({\r\n                        key: key,\r\n                        to: properties[key],\r\n                        duration: this.get(\"interpolationDuration\", 0),\r\n                        easing: this.get(\"interpolationEasing\"),\r\n                    });\r\n                });\r\n                dataItem.dataContext = change.newValue;\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.splice(change.index, 0, dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                dataItem.dispose();\r\n                dataItems.splice(change.index, 1);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                const dataItem = dataItems[change.oldIndex];\r\n                dataItems.splice(change.oldIndex, 1);\r\n                dataItems.splice(change.newIndex, 0, dataItem);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n            this._afterDataChange();\r\n        }));\r\n    }\r\n    _updateFields() {\r\n        if (this.valueFields) {\r\n            this._valueFields = [];\r\n            this._valueFieldsF = {};\r\n            $array.each(this.valueFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueFields.push(key);\r\n                    this._valueFieldsF[key] = { fieldKey: key + \"Field\", workingKey: key + \"Working\" };\r\n                }\r\n            });\r\n        }\r\n        if (this.fields) {\r\n            this._fields = [];\r\n            this._fieldsF = {};\r\n            $array.each(this.fields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._fields.push(key);\r\n                    this._fieldsF[key] = key + \"Field\";\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * A list of component's data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get dataItems() {\r\n        return this._dataItems;\r\n    }\r\n    processDataItem(_dataItem) { }\r\n    _makeDataItem(data) {\r\n        //const output: this[\"_dataItemSettings\"] = {};\r\n        const output = {}; // temporary to solve error\r\n        if (this._valueFields) {\r\n            $array.each(this._valueFields, (key) => {\r\n                const field = this.get((this._valueFieldsF[key].fieldKey));\r\n                output[key] = data[field];\r\n                output[this._valueFieldsF[key].workingKey] = output[key];\r\n            });\r\n        }\r\n        if (this._fields) {\r\n            $array.each(this._fields, (key) => {\r\n                const field = this.get((this._fieldsF[key]));\r\n                output[key] = data[field];\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n    /**\r\n     * Creates a new data item and processes it.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    makeDataItem(data, dataContext) {\r\n        let dataItem = new DataItem(this, dataContext, data);\r\n        this.processDataItem(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * Adds new explicit data item to series.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    pushDataItem(data, dataContext) {\r\n        const dataItem = this.makeDataItem(data, dataContext);\r\n        this._mainDataItems.push(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(_dataItem) {\r\n    }\r\n    /**\r\n     * Shows component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    showDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", true);\r\n        });\r\n    }\r\n    /**\r\n     * Hides component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    hideDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", false);\r\n        });\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._valuesDirty = false;\r\n    }\r\n    _afterDataChange() {\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._dataChanged) {\r\n            const type = \"datavalidated\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n            this._dataChanged = false;\r\n        }\r\n        this.inited = true;\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(_dataItem) {\r\n        this.markDirty();\r\n        this._valuesDirty = true;\r\n    }\r\n    _markDirtyGroup() {\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n}\r\nObject.defineProperty(Component, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Component\"\r\n});\r\nObject.defineProperty(Component, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Component.className])\r\n});\r\n", "/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Returns a `Promise` which can be used to execute code after number of\r\n * milliseconds.\r\n *\r\n * @param   ms  Sleep duration in ms\r\n * @return      Promise\r\n */\r\nexport function sleep(ms) {\r\n    return new Promise((resolve, _reject) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let timeUnitDurations = {\r\n    millisecond: 1,\r\n    second: 1000,\r\n    minute: 60000,\r\n    hour: 3600000,\r\n    day: 86400000,\r\n    week: 604800000,\r\n    month: 365.242 / 12 * 86400000,\r\n    year: 31536000000\r\n};\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\r\nexport function getNextUnit(unit) {\r\n    switch (unit) {\r\n        case \"year\":\r\n            return;\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"day\":\r\n            return \"month\"; // not a mistake\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"millisecond\":\r\n            return \"second\";\r\n    }\r\n}\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\r\nexport function getDuration(unit, count) {\r\n    if (count == null) {\r\n        count = 1;\r\n    }\r\n    return timeUnitDurations[unit] * count;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getIntervalDuration(interval) {\r\n    if (interval) {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    return 0;\r\n}\r\nexport function getDateIntervalDuration(interval, date, firstDateOfWeek, utc, timezone) {\r\n    const unit = interval.timeUnit;\r\n    const count = interval.count;\r\n    if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    else {\r\n        const firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        let lastTime = firstTime + count * getDuration(unit) * 1.05;\r\n        lastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        return lastTime - firstTime;\r\n    }\r\n}\r\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\r\nexport function now() {\r\n    return new Date();\r\n}\r\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\r\nexport function getTime() {\r\n    return now().getTime();\r\n}\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @param date  Source date\r\n * @return Copy\r\n */\r\nexport function copy(date) {\r\n    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @param timeOne  timestamp\r\n * @param timeTwo  timestamp\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\r\nexport function checkChange(timeOne, timeTwo, unit, utc, timezone) {\r\n    // quick\r\n    if ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\r\n        return true;\r\n    }\r\n    let dateOne = new Date(timeOne);\r\n    let dateTwo = new Date(timeTwo);\r\n    if (timezone) {\r\n        dateOne = timezone.convertLocal(dateOne);\r\n        dateTwo = timezone.convertLocal(dateTwo);\r\n    }\r\n    let timeZoneOffset1 = 0;\r\n    let timeZoneOffset2 = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset1 = dateOne.getTimezoneOffset();\r\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\r\n        timeZoneOffset2 = dateTwo.getTimezoneOffset();\r\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\r\n    }\r\n    let changed = false;\r\n    switch (unit) {\r\n        case \"year\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"month\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"day\":\r\n            if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"hour\":\r\n            if (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"minute\":\r\n            if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"second\":\r\n            if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"millisecond\":\r\n            if (dateOne.getTime() != dateTwo.getTime()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n    }\r\n    if (changed) {\r\n        return changed;\r\n    }\r\n    let nextUnit = getNextUnit(unit);\r\n    if (nextUnit) {\r\n        return checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\r\nexport function add(date, unit, count, utc, timezone) {\r\n    let timeZoneOffset = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset = date.getTimezoneOffset();\r\n        if (timezone) {\r\n            timeZoneOffset -= timezone.offsetUTC(date);\r\n        }\r\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n    }\r\n    switch (unit) {\r\n        case \"day\":\r\n            let day = date.getUTCDate();\r\n            date.setUTCDate(day + count);\r\n            break;\r\n        case \"second\":\r\n            let seconds = date.getUTCSeconds();\r\n            date.setUTCSeconds(seconds + count);\r\n            break;\r\n        case \"millisecond\":\r\n            let milliseconds = date.getUTCMilliseconds();\r\n            date.setUTCMilliseconds(milliseconds + count);\r\n            break;\r\n        case \"hour\":\r\n            let hours = date.getUTCHours();\r\n            date.setUTCHours(hours + count);\r\n            break;\r\n        case \"minute\":\r\n            let minutes = date.getUTCMinutes();\r\n            date.setUTCMinutes(minutes + count);\r\n            break;\r\n        case \"year\":\r\n            let year = date.getUTCFullYear();\r\n            date.setUTCFullYear(year + count);\r\n            break;\r\n        case \"month\":\r\n            const endDays = date.getUTCDate();\r\n            const startDays = new Date(date.getUTCFullYear(), date.getUTCMonth(), 0).getUTCDate();\r\n            let month = date.getUTCMonth();\r\n            if (endDays > startDays) {\r\n                date.setUTCMonth(month + count, startDays);\r\n            }\r\n            else {\r\n                date.setUTCMonth(month + count);\r\n            }\r\n            break;\r\n        case \"week\":\r\n            let wday = date.getUTCDate();\r\n            date.setUTCDate(wday + count * 7);\r\n            break;\r\n    }\r\n    if (!utc && unit != \"millisecond\") {\r\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n            let newTimeZoneOffset = date.getTimezoneOffset();\r\n            if (timezone) {\r\n                newTimeZoneOffset += timezone.offsetUTC(date);\r\n            }\r\n            if (newTimeZoneOffset != timeZoneOffset) {\r\n                let diff = newTimeZoneOffset - timeZoneOffset;\r\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                // solves issues if new time falls back to old time zone\r\n                if (date.getTimezoneOffset() != newTimeZoneOffset) {\r\n                    date.setUTCMinutes(date.getUTCMinutes() - diff);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function roun(time, unit, count, root, firstTime) {\r\n    let firstDate;\r\n    if (firstTime != null) {\r\n        firstDate = new Date(firstTime);\r\n    }\r\n    return round(new Date(time), unit, count, root.locale.firstDayOfWeek, root.utc, firstDate, root.timezone).getTime();\r\n}\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @param utc              Use UTC timezone\r\n * @param firstDate        First date to round to\r\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\r\n * @param timezone         Use specific named timezone when rounding\r\n * @return New date\r\n */\r\nexport function round(date, unit, count, firstDateOfWeek, utc, firstDate, timezone) {\r\n    if (!timezone || utc) {\r\n        let timeZoneOffset = 0;\r\n        if (!utc && unit != \"millisecond\") {\r\n            timeZoneOffset = date.getTimezoneOffset();\r\n            date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n        }\r\n        switch (unit) {\r\n            case \"day\":\r\n                let day = date.getUTCDate();\r\n                if (count > 1) {\r\n                    //\tday = Math.floor(day / count) * count;\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"day\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                        let duration = getDuration(\"day\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                else {\r\n                    date.setUTCDate(day);\r\n                }\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"second\":\r\n                let seconds = date.getUTCSeconds();\r\n                if (count > 1) {\r\n                    seconds = Math.floor(seconds / count) * count;\r\n                }\r\n                date.setUTCSeconds(seconds, 0);\r\n                break;\r\n            case \"millisecond\":\r\n                if (count == 1) {\r\n                    return date; // much better for perf!\r\n                }\r\n                let milliseconds = date.getUTCMilliseconds();\r\n                milliseconds = Math.floor(milliseconds / count) * count;\r\n                date.setUTCMilliseconds(milliseconds);\r\n                break;\r\n            case \"hour\":\r\n                let hours = date.getUTCHours();\r\n                if (count > 1) {\r\n                    hours = Math.floor(hours / count) * count;\r\n                }\r\n                date.setUTCHours(hours, 0, 0, 0);\r\n                break;\r\n            case \"minute\":\r\n                let minutes = date.getUTCMinutes();\r\n                if (count > 1) {\r\n                    minutes = Math.floor(minutes / count) * count;\r\n                }\r\n                date.setUTCMinutes(minutes, 0, 0);\r\n                break;\r\n            case \"month\":\r\n                let month = date.getUTCMonth();\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                date.setUTCMonth(month, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"year\":\r\n                let year = date.getUTCFullYear();\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                date.setUTCFullYear(year, 0, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"week\":\r\n                if (count > 1) {\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"week\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"week\") / count);\r\n                        let duration = getDuration(\"week\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                let wday = date.getUTCDate();\r\n                let weekDay = date.getUTCDay();\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekDay >= firstDateOfWeek) {\r\n                    wday = wday - weekDay + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    wday = wday - (7 + weekDay) + firstDateOfWeek;\r\n                }\r\n                date.setUTCDate(wday);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n        }\r\n        if (!utc && unit != \"millisecond\") {\r\n            date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n            if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n                let newTimeZoneOffset = date.getTimezoneOffset();\r\n                if (newTimeZoneOffset != timeZoneOffset) {\r\n                    let diff = newTimeZoneOffset - timeZoneOffset;\r\n                    date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                }\r\n            }\r\n        }\r\n        return date;\r\n    }\r\n    else {\r\n        if (isNaN(date.getTime())) {\r\n            return date;\r\n        }\r\n        let initialTime = date.getTime();\r\n        let tzoffset = timezone.offsetUTC(date);\r\n        let timeZoneOffset = date.getTimezoneOffset();\r\n        let parsedDate = timezone.parseDate(date);\r\n        let year = parsedDate.year;\r\n        let month = parsedDate.month;\r\n        let day = parsedDate.day;\r\n        let hour = parsedDate.hour;\r\n        let minute = parsedDate.minute;\r\n        let second = parsedDate.second;\r\n        let millisecond = parsedDate.millisecond;\r\n        let weekday = parsedDate.weekday;\r\n        let offsetDif = tzoffset - timeZoneOffset;\r\n        switch (unit) {\r\n            case \"day\":\r\n                if (count > 1 && firstDate) {\r\n                    firstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\r\n                    let difference = date.getTime() - firstDate.getTime();\r\n                    let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                    let duration = getDuration(\"day\", unitCount * count);\r\n                    date.setTime(firstDate.getTime() + duration);\r\n                    parsedDate = timezone.parseDate(date);\r\n                    year = parsedDate.year;\r\n                    month = parsedDate.month;\r\n                    day = parsedDate.day;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"second\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    second = Math.floor(second / count) * count;\r\n                }\r\n                millisecond = 0;\r\n                break;\r\n            case \"millisecond\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    millisecond = Math.floor(millisecond / count) * count;\r\n                }\r\n                break;\r\n            case \"hour\":\r\n                if (count > 1) {\r\n                    hour = Math.floor(hour / count) * count;\r\n                }\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"minute\":\r\n                if (count > 1) {\r\n                    minute = Math.floor(minute / count) * count;\r\n                }\r\n                minute += offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"month\":\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"year\":\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                month = 0;\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"week\":\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekday >= firstDateOfWeek) {\r\n                    day = day - weekday + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    day = day - (7 + weekday) + firstDateOfWeek;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n        }\r\n        date = new Date(year, month, day, hour, minute, second, millisecond);\r\n        // fix to solve #101989\r\n        const newTime = date.getTime();\r\n        let hDuration = 3600000;\r\n        if (unit == \"hour\") {\r\n            hDuration = 3600000 * count;\r\n        }\r\n        if (newTime + hDuration <= initialTime) {\r\n            if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n                date = new Date(newTime + hDuration);\r\n            }\r\n        }\r\n        // end of fix\r\n        let newTimeZoneOffset = date.getTimezoneOffset();\r\n        let newTzoffset = timezone.offsetUTC(date);\r\n        let newDiff = newTzoffset - newTimeZoneOffset;\r\n        if (newDiff != offsetDif) {\r\n            date.setTime(date.getTime() + (newDiff - offsetDif) * 60000);\r\n        }\r\n        return date;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function chooseInterval(index, duration, gridCount, intervals) {\r\n    let gridInterval = intervals[index];\r\n    let intervalDuration = getIntervalDuration(gridInterval);\r\n    let lastIndex = intervals.length - 1;\r\n    if (index >= lastIndex) {\r\n        return Object.assign({}, intervals[lastIndex]);\r\n    }\r\n    let count = Math.ceil(duration / intervalDuration);\r\n    if (duration < intervalDuration && index > 0) {\r\n        return Object.assign({}, intervals[index - 1]);\r\n    }\r\n    if (count <= gridCount) {\r\n        return Object.assign({}, intervals[index]);\r\n    }\r\n    else {\r\n        if (index + 1 < intervals.length) {\r\n            return chooseInterval(index + 1, duration, gridCount, intervals);\r\n        }\r\n        else {\r\n            return Object.assign({}, intervals[index]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getUnitValue(date, unit) {\r\n    switch (unit) {\r\n        case \"day\":\r\n            return date.getDate();\r\n        case \"second\":\r\n            return date.getSeconds();\r\n        case \"millisecond\":\r\n            return date.getMilliseconds();\r\n        case \"hour\":\r\n            return date.getHours();\r\n        case \"minute\":\r\n            return date.getMinutes();\r\n        case \"month\":\r\n            return date.getMonth();\r\n        case \"year\":\r\n            return date.getFullYear();\r\n        case \"week\":\r\n            return $utils.getWeek(date);\r\n    }\r\n}\r\n", "import { __awaiter } from \"tslib\";\r\nimport { Component } from \"../../core/render/Component\";\r\nimport { List } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { percentInterpolate } from \"../../core/util/Animation\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\n//import { Animations } from \"../../core/util/Animation\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $time from \"../../core/util/Time\";\r\n/**\r\n * A base class for all series.\r\n */\r\nexport class Series extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_aggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionAggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_psi\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pei\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A chart series belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * List of bullets to use for the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        /**\r\n         * A [[Container]] series' bullets are stored in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, position: \"absolute\" })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.valueFields.push(\"value\", \"customValue\");\r\n        super._afterNew();\r\n        this.setPrivate(\"customData\", {});\r\n        this._disposers.push(this.bullets.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _dispose() {\r\n        this.bulletsContainer.dispose(); // can be in a different parent\r\n        super._dispose();\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"startIndex\", 0), len);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"endIndex\", len), len);\r\n    }\r\n    _handleBullets(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    bullet.dispose();\r\n                });\r\n                dataItem.bullets = undefined;\r\n            }\r\n        });\r\n        this.markDirtyValues();\r\n    }\r\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */\r\n    getDataItemById(id) {\r\n        return $array.find(this.dataItems, (dataItem) => {\r\n            return dataItem.get(\"id\") == id;\r\n        });\r\n    }\r\n    _makeBullets(dataItem) {\r\n        if (this._shouldMakeBullet(dataItem)) {\r\n            dataItem.bullets = [];\r\n            this.bullets.each((bulletFunction) => {\r\n                this._makeBullet(dataItem, bulletFunction);\r\n            });\r\n        }\r\n    }\r\n    _shouldMakeBullet(_dataItem) {\r\n        return true;\r\n    }\r\n    _makeBullet(dataItem, bulletFunction, index) {\r\n        const bullet = bulletFunction(this._root, this, dataItem);\r\n        if (bullet) {\r\n            bullet._index = index;\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n        return bullet;\r\n    }\r\n    _makeBulletReal(dataItem, bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            sprite._setDataItem(dataItem);\r\n            sprite.setRaw(\"position\", \"absolute\");\r\n            this.bulletsContainer.children.push(sprite);\r\n        }\r\n        bullet.series = this;\r\n        dataItem.bullets.push(bullet);\r\n    }\r\n    /**\r\n     * Adds bullet directly to a data item.\r\n     *\r\n     * Please note: method accepts [[Bullet]] instance as a paramter, not a\r\n     * reference to a function.\r\n     *\r\n     * You should add Bullet instance, not a method like you do it on series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#Adding_directly_to_data_item} for more info\r\n     * @since 5.6.0\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @param  bullet    Bullet instance\r\n     */\r\n    addBullet(dataItem, bullet) {\r\n        if (!dataItem.bullets) {\r\n            dataItem.bullets = [];\r\n        }\r\n        if (bullet) {\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._aggregatesCalculated = false;\r\n        this._selectionAggregatesCalculated = false;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        let startIndex = this.startIndex();\r\n        let endIndex = this.endIndex();\r\n        if (this.isDirty(\"name\")) {\r\n            this.updateLegendValue();\r\n        }\r\n        if (this.isDirty(\"heatRules\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isPrivateDirty(\"baseValueSeries\")) {\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            if (baseValueSeries) {\r\n                this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", () => {\r\n                    this.markDirtyValues();\r\n                }));\r\n            }\r\n        }\r\n        const calculateAggregates = this.get(\"calculateAggregates\");\r\n        if (calculateAggregates) {\r\n            if (this._valuesDirty && !this._dataProcessed) {\r\n                if (!this._aggregatesCalculated) {\r\n                    this._calculateAggregates(0, this.dataItems.length);\r\n                    this._aggregatesCalculated = true;\r\n                    if (startIndex != 0) {\r\n                        this._psi = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isPrivateDirty(\"adjustedStartIndex\")) && !this._selectionAggregatesCalculated) {\r\n                if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this._calculateAggregates(startIndex, endIndex);\r\n                }\r\n                this._selectionAggregatesCalculated = true;\r\n            }\r\n        }\r\n        if (this.isDirty(\"tooltip\")) {\r\n            let tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                tooltip.hide(0);\r\n                tooltip.set(\"tooltipTarget\", this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\r\n            let markerRectangle;\r\n            const legendDataItem = this.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    if (this.isVisible()) {\r\n                        if (this.isDirty(\"stroke\")) {\r\n                            let stroke = this.get(\"stroke\");\r\n                            markerRectangle.set(\"stroke\", stroke);\r\n                        }\r\n                        if (this.isDirty(\"fill\")) {\r\n                            let fill = this.get(\"fill\");\r\n                            markerRectangle.set(\"fill\", fill);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.updateLegendMarker(undefined);\r\n        }\r\n        if (this.bullets.length > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < this.dataItems.length) {\r\n                endIndex++;\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (!dataItem.bullets) {\r\n                    this._makeBullets(dataItem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleRemoved() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _adjustStartIndex(index) {\r\n        return index;\r\n    }\r\n    _calculateAggregates(startIndex, endIndex) {\r\n        let fields = this._valueFields;\r\n        if (!fields) {\r\n            throw new Error(\"No value fields are set for the series.\");\r\n        }\r\n        const sum = {};\r\n        const absSum = {};\r\n        const count = {};\r\n        const low = {};\r\n        const high = {};\r\n        const open = {};\r\n        const close = {};\r\n        const average = {};\r\n        const previous = {};\r\n        $array.each(fields, (key) => {\r\n            sum[key] = 0;\r\n            absSum[key] = 0;\r\n            count[key] = 0;\r\n        });\r\n        $array.each(fields, (key) => {\r\n            let change = key + \"Change\";\r\n            let changePercent = key + \"ChangePercent\";\r\n            let changePrevious = key + \"ChangePrevious\";\r\n            let changePreviousPercent = key + \"ChangePreviousPercent\";\r\n            let changeSelection = key + \"ChangeSelection\";\r\n            let changeSelectionPercent = key + \"ChangeSelectionPercent\";\r\n            let openKey = \"valueY\";\r\n            if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\r\n                openKey = \"valueX\";\r\n            }\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            const adjustedStartIndex = this.getPrivate(\"adjustedStartIndex\", startIndex);\r\n            for (let i = adjustedStartIndex; i < endIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        count[key]++;\r\n                        sum[key] += value;\r\n                        absSum[key] += Math.abs(value);\r\n                        average[key] = sum[key] / count[key];\r\n                        if (low[key] > value || low[key] == null) {\r\n                            low[key] = value;\r\n                        }\r\n                        if (high[key] < value || high[key] == null) {\r\n                            high[key] = value;\r\n                        }\r\n                        close[key] = value;\r\n                        if (open[key] == null) {\r\n                            open[key] = value;\r\n                            previous[key] = value;\r\n                            if (baseValueSeries) {\r\n                                open[openKey] = baseValueSeries._getBase(openKey);\r\n                            }\r\n                        }\r\n                        if (startIndex === 0) {\r\n                            dataItem.setRaw((change), value - open[openKey]);\r\n                            dataItem.setRaw((changePercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        }\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n            if (endIndex < this.dataItems.length - 1) {\r\n                const dataItem = this.dataItems[endIndex];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                    dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                    dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                    dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                }\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            delete previous[key];\r\n            for (let i = startIndex; i < adjustedStartIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (previous[key] == null) {\r\n                        previous[key] = value;\r\n                    }\r\n                    if (value != null) {\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(fields, (key) => {\r\n            this.setPrivate((key + \"AverageSelection\"), average[key]);\r\n            this.setPrivate((key + \"CountSelection\"), count[key]);\r\n            this.setPrivate((key + \"SumSelection\"), sum[key]);\r\n            this.setPrivate((key + \"AbsoluteSumSelection\"), absSum[key]);\r\n            this.setPrivate((key + \"LowSelection\"), low[key]);\r\n            this.setPrivate((key + \"HighSelection\"), high[key]);\r\n            this.setPrivate((key + \"OpenSelection\"), open[key]);\r\n            this.setPrivate((key + \"CloseSelection\"), close[key]);\r\n        });\r\n        if (startIndex === 0 && endIndex === this.dataItems.length) {\r\n            $array.each(fields, (key) => {\r\n                this.setPrivate((key + \"Average\"), average[key]);\r\n                this.setPrivate((key + \"Count\"), count[key]);\r\n                this.setPrivate((key + \"Sum\"), sum[key]);\r\n                this.setPrivate((key + \"AbsoluteSum\"), absSum[key]);\r\n                this.setPrivate((key + \"Low\"), low[key]);\r\n                this.setPrivate((key + \"High\"), high[key]);\r\n                this.setPrivate((key + \"Open\"), open[key]);\r\n                this.setPrivate((key + \"Close\"), close[key]);\r\n            });\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._psi = this.startIndex();\r\n        this._pei = this.endIndex();\r\n        if (this.isDirty(\"visible\")) {\r\n            this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\r\n        }\r\n        // Apply heat rules\r\n        const rules = this.get(\"heatRules\");\r\n        if (this._valuesDirty && rules && rules.length > 0) {\r\n            $array.each(rules, (rule) => {\r\n                const minValue = rule.minValue || this.getPrivate((rule.dataField + \"Low\")) || 0;\r\n                const maxValue = rule.maxValue || this.getPrivate((rule.dataField + \"High\")) || 0;\r\n                $array.each(rule.target._entities, (target) => {\r\n                    const value = target.dataItem.get(rule.dataField);\r\n                    if (!$type.isNumber(value)) {\r\n                        if (rule.neutral) {\r\n                            target.set(rule.key, rule.neutral);\r\n                        }\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState && rule.neutral) {\r\n                                defaultState.set(rule.key, rule.neutral);\r\n                            }\r\n                        }\r\n                        if (!rule.customFunction) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (rule.customFunction) {\r\n                        rule.customFunction.call(this, target, minValue, maxValue, value);\r\n                    }\r\n                    else {\r\n                        let percent;\r\n                        if (rule.logarithmic) {\r\n                            percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n                        }\r\n                        else {\r\n                            percent = (value - minValue) / (maxValue - minValue);\r\n                        }\r\n                        if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n                            percent = 0.5;\r\n                        }\r\n                        // fixes problems if all values are the same\r\n                        let propertyValue;\r\n                        if ($type.isNumber(rule.min)) {\r\n                            propertyValue = rule.min + (rule.max - rule.min) * percent;\r\n                        }\r\n                        else if (rule.min instanceof Color) {\r\n                            propertyValue = Color.interpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        else if (rule.min instanceof Percent) {\r\n                            propertyValue = percentInterpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        target.set(rule.key, propertyValue);\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState) {\r\n                                defaultState.set(rule.key, propertyValue);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        if (this.get(\"visible\")) {\r\n            let count = this.dataItems.length;\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < count) {\r\n                endIndex++;\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            for (let i = 0; i < startIndex; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                this._positionBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = endIndex; i < count; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n        }\r\n    }\r\n    _positionBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                this._positionBullet(bullet);\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (bullet.get(\"dynamic\")) {\r\n                    if (sprite) {\r\n                        sprite._markDirtyKey(\"fill\");\r\n                        sprite.markDirtySize();\r\n                    }\r\n                    if (sprite instanceof Container) {\r\n                        sprite.walkChildren((child) => {\r\n                            child._markDirtyKey(\"fill\");\r\n                            child.markDirtySize();\r\n                            if (child instanceof Label) {\r\n                                child.text.markDirtyText();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (sprite instanceof Label && sprite.get(\"populateText\")) {\r\n                    sprite.text.markDirtyText();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _hideBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                let sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _positionBullet(_bullet) {\r\n    }\r\n    _placeBulletsContainer(chart) {\r\n        chart.bulletsContainer.children.moveValue(this.bulletsContainer);\r\n    }\r\n    _removeBulletsContainer() {\r\n        const bulletsContainer = this.bulletsContainer;\r\n        if (bulletsContainer.parent) {\r\n            bulletsContainer.parent.children.removeValue(bulletsContainer);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        //super.disposeDataItem(dataItem); // does nothing\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                bullet.dispose();\r\n            });\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.show(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.hide(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _sequencedShowHide(show, duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.get(\"sequencedInterpolation\")) {\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (duration > 0) {\r\n                    const startIndex = this.startIndex();\r\n                    const endIndex = this.endIndex();\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem, i) => __awaiter(this, void 0, void 0, function* () {\r\n                        let realDuration = duration || 0;\r\n                        if (i < startIndex - 10 || i > endIndex + 10) {\r\n                            realDuration = 0;\r\n                        }\r\n                        //let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\r\n                        let delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\r\n                        yield $time.sleep(delay * (i - startIndex));\r\n                        if (show) {\r\n                            yield this.showDataItem(dataItem, realDuration);\r\n                        }\r\n                        else {\r\n                            yield this.hideDataItem(dataItem, realDuration);\r\n                        }\r\n                    })));\r\n                }\r\n                else {\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem) => {\r\n                        if (show) {\r\n                            return this.showDataItem(dataItem, 0);\r\n                        }\r\n                        else {\r\n                            return this.hideDataItem(dataItem, 0);\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        if (dataItem) {\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const valueLabel = legendDataItem.get(\"valueLabel\");\r\n                if (valueLabel) {\r\n                    const text = valueLabel.text;\r\n                    let txt = \"\";\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\r\n                    valueLabel.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n                const label = legendDataItem.get(\"label\");\r\n                if (label) {\r\n                    const text = label.text;\r\n                    let txt = \"\";\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\r\n                    label.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(_dataItem) {\r\n    }\r\n    _onHide() {\r\n        super._onHide();\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    unhoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _getBase(key) {\r\n        const dataItem = this.dataItems[this.startIndex()];\r\n        if (dataItem) {\r\n            return dataItem.get(key);\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nObject.defineProperty(Series, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Series\"\r\n});\r\nObject.defineProperty(Series, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Series.className])\r\n});\r\n", "/** @ignore */ /** */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport function segmentedLine(display, segments) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    line(display, groups[g]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function line(display, points) {\r\n    for (let p = 0, len = points.length; p < len; p++) {\r\n        const point = points[p];\r\n        display.lineTo(point.x, point.y);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function moveTo(display, point) {\r\n    display.moveTo(point.x, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function clear(display) {\r\n    display.clear();\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedSegmentedline(display, segments, tensionX, tensionY) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    const points = groups[g];\r\n                    if (points.length > 0) {\r\n                        display.lineTo(points[0].x, points[0].y);\r\n                    }\r\n                    smoothedLine(display, points, tensionX, tensionY);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedLine(display, points, tensionX, tensionY) {\r\n    for (let i = points.length - 1; i > 0; i--) {\r\n        let p0 = points[i];\r\n        let p1 = points[i - 1];\r\n        if (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\r\n            points.splice(i - 1, 1);\r\n        }\r\n    }\r\n    if (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\r\n        line(display, points);\r\n        return;\r\n    }\r\n    tensionX = 1 - tensionX + 0.00001;\r\n    tensionY = 1 - tensionY + 0.00001;\r\n    let first = points[0];\r\n    let last = points[points.length - 1];\r\n    let closed = false;\r\n    if ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\r\n        closed = true;\r\n    }\r\n    // Can't moveTo here, as it wont be possible to have fill then.\r\n    let path = \"\";\r\n    for (let i = 0, len = points.length - 1; i < len; i++) {\r\n        let p0 = points[i - 1];\r\n        let p1 = points[i];\r\n        let p2 = points[i + 1];\r\n        let p3 = points[i + 2];\r\n        if (i === 0) {\r\n            if (closed) {\r\n                p0 = points[len - 2];\r\n            }\r\n            else {\r\n                p0 = points[0];\r\n            }\r\n        }\r\n        else if (i == len - 1) {\r\n            if (closed) {\r\n                p3 = points[1];\r\n            }\r\n            else {\r\n                p3 = p2;\r\n            }\r\n        }\r\n        let controlPointA = $math.getCubicControlPointA(p0, p1, p2, tensionX, tensionY);\r\n        let controlPointB = $math.getCubicControlPointB(p1, p2, p3, tensionX, tensionY);\r\n        display.bezierCurveTo(controlPointA.x, controlPointA.y, controlPointB.x, controlPointB.y, p2.x, p2.y);\r\n    }\r\n    return path;\r\n}\r\n", "import { Graphics } from \"./Graphics\";\r\nimport * as $draw from \"../util/Draw\";\r\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Line extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"points\") || this.isDirty(\"segments\") || this._sizeDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const points = this.get(\"points\");\r\n            const segments = this.get(\"segments\");\r\n            if (points && points.length > 0) {\r\n                let point = points[0];\r\n                this._display.moveTo(point.x, point.y);\r\n                $draw.segmentedLine(this._display, [[points]]);\r\n            }\r\n            else if (segments) {\r\n                $draw.segmentedLine(this._display, segments);\r\n            }\r\n            else if (!this.get(\"draw\")) {\r\n                let w = this.width();\r\n                let h = this.height();\r\n                this._display.moveTo(0, 0);\r\n                this._display.lineTo(w, h);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Line, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Line\"\r\n});\r\nObject.defineProperty(Line, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Line.className])\r\n});\r\n", "import { Text } from \"./Text\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport class RadialText extends Text {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeRadialText(\"\", this.textStyle)\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._display.clear();\r\n        if (this.isDirty(\"textType\")) {\r\n            this._display.textType = this.get(\"textType\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"radius\")) {\r\n            this._display.radius = this.get(\"radius\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"startAngle\")) {\r\n            this._display.startAngle = (this.get(\"startAngle\", 0) + 90) * $math.RADIANS;\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"inside\")) {\r\n            this._display.inside = this.get(\"inside\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"orientation\")) {\r\n            this._display.orientation = this.get(\"orientation\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"kerning\")) {\r\n            this._display.kerning = this.get(\"kerning\");\r\n            this.markDirtyBounds();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RadialText, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialText\"\r\n});\r\nObject.defineProperty(RadialText, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Text.classNames.concat([RadialText.className])\r\n});\r\n", "// import * as $object from \"../util/Object\";\r\nimport { p50, Percent } from \"../util/Percent\";\r\nimport { Label } from \"./Label\";\r\nimport { RadialText } from \"./RadialText\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nexport class RadialLabel extends Label {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_flipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._textKeys.push(\"textType\", \"kerning\");\r\n        super._afterNew();\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(RadialText.new(this._root, {}));\r\n    }\r\n    /**\r\n     * Returns base radius in pixels.\r\n     *\r\n     * @return Base radius\r\n     */\r\n    baseRadius() {\r\n        const radiusPrivate = this.getPrivate(\"radius\", 0);\r\n        const innerRadiusPrivate = this.getPrivate(\"innerRadius\", 0);\r\n        const baseRadius = this.get(\"baseRadius\", 0);\r\n        return innerRadiusPrivate + $utils.relativeToValue(baseRadius, radiusPrivate - innerRadiusPrivate);\r\n    }\r\n    /**\r\n     * Returns radius adjustment in pixels.\r\n     *\r\n     * @return Radius\r\n     */\r\n    radius() {\r\n        const inside = this.get(\"inside\", false);\r\n        return this.baseRadius() + this.get(\"radius\", 0) * (inside ? -1 : 1);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"baseRadius\") || this.isPrivateDirty(\"radius\") || this.isPrivateDirty(\"innerRadius\") || this.isDirty(\"labelAngle\") || this.isDirty(\"radius\") || this.isDirty(\"inside\") || this.isDirty(\"orientation\") || this.isDirty(\"textType\")) {\r\n            const textType = this.get(\"textType\", \"adjusted\");\r\n            const inside = this.get(\"inside\", false);\r\n            const orientation = this.get(\"orientation\");\r\n            let labelAngle = $math.normalizeAngle(this.get(\"labelAngle\", 0));\r\n            this._text.set(\"startAngle\", this.get(\"labelAngle\", 0));\r\n            this._text.set(\"inside\", inside);\r\n            const sin = $math.sin(labelAngle);\r\n            const cos = $math.cos(labelAngle);\r\n            let baseRadius = this.baseRadius();\r\n            let radius = this.radius();\r\n            this._display.angle = 0;\r\n            if (textType == \"circular\") {\r\n                this.setAll({\r\n                    paddingTop: 0,\r\n                    paddingBottom: 0,\r\n                    paddingLeft: 0,\r\n                    paddingRight: 0\r\n                });\r\n                this.setRaw(\"x\", undefined);\r\n                this.setRaw(\"y\", undefined);\r\n                // Circular labels are handled and positioned differently\r\n                this._text.set(\"orientation\", orientation);\r\n                this._text.set(\"radius\", radius);\r\n            }\r\n            else {\r\n                if (baseRadius == 0) {\r\n                    labelAngle = 0;\r\n                    radius = 0;\r\n                }\r\n                // Positioning of radial/regular labels are teh same\r\n                let x = radius * cos;\r\n                let y = radius * sin;\r\n                if (textType == \"radial\") {\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                    if ((labelAngle < 90) || (labelAngle > 270) || orientation != \"auto\") {\r\n                        this._display.angle = labelAngle; // + 90;\r\n                        this._flipped = false;\r\n                    }\r\n                    else {\r\n                        this._display.angle = labelAngle + 180;\r\n                        this._flipped = true;\r\n                    }\r\n                    this._dirty.rotation = false;\r\n                }\r\n                else if (textType == \"adjusted\") {\r\n                    this.setRaw(\"centerX\", p50);\r\n                    this.setRaw(\"centerY\", p50);\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                }\r\n                else if (textType == \"regular\") {\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this.markDirtyBounds();\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const textType = this.get(\"textType\", \"regular\");\r\n        const inside = this.get(\"inside\", false);\r\n        let dx = 0;\r\n        let dy = 0;\r\n        let labelAngle = this.get(\"labelAngle\", 0);\r\n        let bounds = this.localBounds();\r\n        let w = bounds.right - bounds.left;\r\n        let h = bounds.bottom - bounds.top;\r\n        if (textType == \"radial\") {\r\n            if (this._flipped) {\r\n                let centerX = this.get(\"centerX\");\r\n                if (centerX instanceof Percent) {\r\n                    w = w * (1 - centerX.value * 2);\r\n                }\r\n                dx = w * $math.cos(labelAngle);\r\n                dy = w * $math.sin(labelAngle);\r\n            }\r\n        }\r\n        else if (!inside && textType == \"adjusted\") {\r\n            dx = w / 2 * $math.cos(labelAngle);\r\n            dy = h / 2 * $math.sin(labelAngle);\r\n        }\r\n        this.setRaw(\"dx\", dx);\r\n        this.setRaw(\"dy\", dy);\r\n        super._updatePosition();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n}\r\nObject.defineProperty(RadialLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialLabel\"\r\n});\r\nObject.defineProperty(RadialLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([RadialLabel.className])\r\n});\r\n", "export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n", "export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n", "const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n", "import {Path} from \"d3-path\";\n\nexport function withPath(shape) {\n  let digits = 3;\n\n  shape.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n\n  return () => new Path(digits);\n}\n", "import constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\nimport {withPath} from \"./path.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null,\n      path = withPath(arc);\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n", "export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n", "function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n", "import curveLinear from \"./linear.js\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n", "import {min, sqrt} from \"../math.js\";\n\nconst sqrt3 = sqrt(3);\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size + min(size / 28, 0.75)) * 0.59436;\n    const t = r / 2;\n    const u = t * sqrt3;\n    context.moveTo(0, r);\n    context.lineTo(0, -r);\n    context.moveTo(-u, -t);\n    context.lineTo(u, t);\n    context.moveTo(-u, t);\n    context.lineTo(u, -t);\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nconst tan30 = sqrt(1 / 3);\nconst tan30_2 = tan30 * 2;\n\nexport default {\n  draw(context, size) {\n    const y = sqrt(size / tan30_2);\n    const x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n", "import {sin, cos, sqrt, pi, tau} from \"../math.js\";\n\nconst ka = 0.89081309152928522810;\nconst kr = sin(pi / 10) / sin(7 * pi / 10);\nconst kx = sin(tau / 10) * kr;\nconst ky = -cos(tau / 10) * kr;\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size * ka);\n    const x = kx * r;\n    const y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (let i = 1; i < 5; ++i) {\n      const a = tau * i / 5;\n      const c = cos(a);\n      const s = sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nconst sqrt3 = sqrt(3);\n\nexport default {\n  draw(context, size) {\n    const y = -sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nconst sqrt3 = sqrt(3);\n\nexport default {\n  draw(context, size) {\n    const s = sqrt(size) * 0.6824;\n    const t = s  / 2;\n    const u = (s * sqrt3) / 2; // cos(Math.PI / 6)\n    context.moveTo(0, -s);\n    context.lineTo(u, t);\n    context.lineTo(-u, t);\n    context.closePath();\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nconst c = -0.5;\nconst s = sqrt(3) / 2;\nconst k = 1 / sqrt(12);\nconst a = (k / 2 + 1) * 3;\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size / a);\n    const x0 = r / 2, y0 = r * k;\n    const x1 = x0, y1 = r * k + r;\n    const x2 = -x1, y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n", "export default function() {}\n", "export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // falls through\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n", "import noop from \"../noop.js\";\nimport {point} from \"./basis.js\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n", "import {point} from \"./basis.js\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n", "import {Basis} from \"./basis.js\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n", "export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import noop from \"../noop.js\";\nimport {point} from \"./cardinal.js\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import {point} from \"./cardinal.js\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import {epsilon} from \"../math.js\";\nimport {Cardinal} from \"./cardinal.js\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import {CardinalClosed} from \"./cardinalClosed.js\";\nimport noop from \"../noop.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import {CardinalOpen} from \"./cardinalOpen.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // falls through\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import noop from \"../noop.js\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n", "function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n", "function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n", "function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n", "import { Graphics } from \"./Graphics\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { arc } from \"d3-shape\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a slice shape.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Slice extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"ix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"iy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_generator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: arc()\r\n        });\r\n    }\r\n    _getTooltipPoint() {\r\n        let tooltipX = this.get(\"tooltipX\");\r\n        let tooltipY = this.get(\"tooltipY\");\r\n        let x = 0;\r\n        let y = 0;\r\n        if ($type.isNumber(tooltipX)) {\r\n            x = tooltipX;\r\n        }\r\n        if ($type.isNumber(tooltipY)) {\r\n            y = tooltipY;\r\n        }\r\n        let radius = this.get(\"radius\", 0);\r\n        let innerRadius = this.get(\"innerRadius\", 0);\r\n        let dRadius = this.get(\"dRadius\", 0);\r\n        let dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n        radius += dRadius;\r\n        innerRadius += dInnerRadius;\r\n        if (innerRadius < 0) {\r\n            innerRadius = radius + innerRadius;\r\n        }\r\n        if (tooltipX instanceof Percent) {\r\n            x = this.ix * (innerRadius + (radius - innerRadius) * tooltipX.value);\r\n        }\r\n        if (tooltipY instanceof Percent) {\r\n            y = this.iy * (innerRadius + (radius - innerRadius) * tooltipY.value);\r\n        }\r\n        if (this.get(\"arc\") >= 360 && innerRadius == 0) {\r\n            x = 0;\r\n            y = 0;\r\n        }\r\n        return { x, y };\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\") || this.isDirty(\"arc\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"dRadius\") || this.isDirty(\"dInnerRadius\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"shiftRadius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            let startAngle = this.get(\"startAngle\", 0);\r\n            let arc = this.get(\"arc\", 0);\r\n            const generator = this._generator;\r\n            if (arc < 0) {\r\n                startAngle = startAngle + arc;\r\n                arc = arc * -1;\r\n            }\r\n            if (arc > 0.1) { // this fixes bug with full circle when arc is very small\r\n                generator.cornerRadius(this.get(\"cornerRadius\", 0));\r\n            }\r\n            generator.context(this._display);\r\n            let radius = this.get(\"radius\", 0);\r\n            let innerRadius = this.get(\"innerRadius\", 0);\r\n            let dRadius = this.get(\"dRadius\", 0);\r\n            let dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n            radius += dRadius;\r\n            innerRadius += dInnerRadius;\r\n            if (innerRadius < 0) {\r\n                innerRadius = radius + innerRadius;\r\n            }\r\n            generator({ innerRadius: innerRadius, outerRadius: radius, startAngle: (startAngle + 90) * $math.RADIANS, endAngle: (startAngle + arc + 90) * $math.RADIANS });\r\n            let middleAngle = startAngle + arc / 2;\r\n            this.ix = $math.cos(middleAngle);\r\n            this.iy = $math.sin(middleAngle);\r\n            const shiftRadius = this.get(\"shiftRadius\", 0);\r\n            this.setRaw(\"dx\", this.ix * shiftRadius);\r\n            this.setRaw(\"dy\", this.iy * shiftRadius);\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Slice, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Slice\"\r\n});\r\nObject.defineProperty(Slice, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Slice.className])\r\n});\r\n", "import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\n/**\r\n * A base class for all charts.\r\n */\r\nexport class Chart extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] chart places its elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"chartContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] chart places its bullets in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 })\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(Chart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Chart\"\r\n});\r\nObject.defineProperty(Chart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Chart.className])\r\n});\r\n", "import { Chart } from \"./Chart\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * A base class for all series-based charts.\r\n */\r\nexport class SerialChart extends Chart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] where chart will store all series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"seriesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A list of chart's series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._disposers.push(this.series);\r\n        const children = this.seriesContainer.children;\r\n        this._disposers.push(this.series.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (series) => {\r\n                    this._removeSeries(series);\r\n                });\r\n                const colors = this.get(\"colors\");\r\n                if (colors) {\r\n                    colors.reset();\r\n                }\r\n                const patterns = this.get(\"patterns\");\r\n                if (patterns) {\r\n                    patterns.reset();\r\n                }\r\n            }\r\n            else if (change.type === \"push\") {\r\n                children.moveValue(change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                children.setIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                children.insertIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeSeries(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                children.moveValue(change.value, change.newIndex);\r\n                this._processSeries(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _processSeries(series) {\r\n        series.chart = this;\r\n        series._placeBulletsContainer(this);\r\n    }\r\n    _removeSeries(series) {\r\n        series._handleRemoved();\r\n        if (!series.isDisposed()) {\r\n            this.seriesContainer.children.removeValue(series);\r\n            series._removeBulletsContainer();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SerialChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SerialChart\"\r\n});\r\nObject.defineProperty(SerialChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Chart.classNames.concat([SerialChart.className])\r\n});\r\n", "import { Line } from \"./Line\";\r\n/**\r\n * Draws a tick element (mostly used on axes).\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Tick extends Line {\r\n}\r\nObject.defineProperty(Tick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tick\"\r\n});\r\nObject.defineProperty(Tick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Line.classNames.concat([Tick.className])\r\n});\r\n", "import { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\n/**\r\n * An object which holds list of colors and can generate new ones.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\r\n */\r\nexport class ColorSet extends Entity {\r\n    //protected _currentPass: number = 0;\r\n    _afterNew() {\r\n        // Applying themes because color set will not have parent\r\n        super._afterNewApplyThemes();\r\n        this._dirty[\"colors\"] = false;\r\n    }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"colors\")) {\r\n            this.reset();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    generateColors() {\r\n        this.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1);\r\n        const pass = this.getPrivate(\"currentPass\");\r\n        const colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\r\n        if (!this.getPrivate(\"numColors\")) {\r\n            this.setPrivate(\"numColors\", colors.length);\r\n        }\r\n        //const len = colors.length;\r\n        const len = this.getPrivate(\"numColors\");\r\n        //const start = len - this.getPrivate(\"numColors\")!;\r\n        const start = 0;\r\n        const passOptions = this.get(\"passOptions\");\r\n        const reuse = this.get(\"reuse\");\r\n        for (let i = start; i < len; i++) {\r\n            if (reuse) {\r\n                colors.push(colors[i]);\r\n            }\r\n            else {\r\n                const hsl = colors[i].toHSL();\r\n                let h = hsl.h + (passOptions.hue || 0) * pass;\r\n                while (h > 1)\r\n                    h -= 1;\r\n                let s = hsl.s + (passOptions.saturation || 0) * pass;\r\n                //if (s > 1) s -= Math.floor(s);\r\n                if (s > 1)\r\n                    s = 1;\r\n                if (s < 0)\r\n                    s = 0;\r\n                let l = hsl.l + (passOptions.lightness || 0) * pass;\r\n                //if (l > 1) l -= Math.floor(l);\r\n                while (l > 1)\r\n                    l -= 1;\r\n                colors.push(Color.fromHSL(h, s, l));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a [[Color]] at specific index.\r\n     *\r\n     * If there's no color at this index, a new color is generated.\r\n     *\r\n     * @param   index  Index\r\n     * @return         Color\r\n     */\r\n    getIndex(index) {\r\n        const colors = this.get(\"colors\", []);\r\n        const saturation = this.get(\"saturation\");\r\n        if (index >= colors.length) {\r\n            this.generateColors();\r\n            return this.getIndex(index);\r\n        }\r\n        return saturation != null ? Color.saturate(colors[index], saturation) : colors[index];\r\n    }\r\n    /**\r\n     * Returns next [[Color]] in the list.\r\n     *\r\n     * If the list is out of colors, new ones are generated dynamically.\r\n     */\r\n    next() {\r\n        let currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\r\n        return this.getIndex(currentStep);\r\n    }\r\n    /**\r\n     * Resets counter to the start of the list, so the next call for `next()` will\r\n     * return the first color.\r\n     */\r\n    reset() {\r\n        this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentPass\", 0);\r\n    }\r\n}\r\nObject.defineProperty(ColorSet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ColorSet\"\r\n});\r\nObject.defineProperty(ColorSet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([ColorSet.className])\r\n});\r\n", "import { Theme } from \"../core/Theme\";\r\nimport { p100, p50 } from \"../core/util/Percent\";\r\nimport { Color } from \"../core/util/Color\";\r\nimport { GridLayout } from \"../core/render/GridLayout\";\r\nimport * as $ease from \"../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport function setColor(rule, key, ic, name) {\r\n    // TODO this shouldn't use get, figure out a better way\r\n    rule.set(key, ic.get(name));\r\n    ic.on(name, (value) => {\r\n        rule.set(key, value);\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class DefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const language = this._root.language;\r\n        const ic = this._root.interfaceColors;\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * core\r\n         * ========================================================================\r\n         */\r\n        r(\"InterfaceColors\").setAll({\r\n            stroke: Color.fromHex(0xe5e5e5),\r\n            fill: Color.fromHex(0xf3f3f3),\r\n            primaryButton: Color.fromHex(0x6794dc),\r\n            primaryButtonHover: Color.fromHex(0x6771dc),\r\n            primaryButtonDown: Color.fromHex(0x68dc76),\r\n            primaryButtonActive: Color.fromHex(0x68dc76),\r\n            primaryButtonDisabled: Color.fromHex(0xdadada),\r\n            primaryButtonTextDisabled: Color.fromHex(0xffffff),\r\n            primaryButtonText: Color.fromHex(0xffffff),\r\n            primaryButtonStroke: Color.fromHex(0xffffff),\r\n            secondaryButton: Color.fromHex(0xd9d9d9),\r\n            secondaryButtonHover: Color.fromHex(0xa3a3a3),\r\n            secondaryButtonDown: Color.fromHex(0x8d8d8d),\r\n            secondaryButtonActive: Color.fromHex(0xe6e6e6),\r\n            secondaryButtonText: Color.fromHex(0x000000),\r\n            secondaryButtonStroke: Color.fromHex(0xffffff),\r\n            grid: Color.fromHex(0x000000),\r\n            background: Color.fromHex(0xffffff),\r\n            alternativeBackground: Color.fromHex(0x000000),\r\n            text: Color.fromHex(0x000000),\r\n            alternativeText: Color.fromHex(0xffffff),\r\n            disabled: Color.fromHex(0xadadad),\r\n            positive: Color.fromHex(0x50b300),\r\n            negative: Color.fromHex(0xb30000)\r\n        });\r\n        {\r\n            const rule = r(\"ColorSet\");\r\n            rule.setAll({\r\n                passOptions: {\r\n                    hue: 0.05,\r\n                    saturation: 0,\r\n                    lightness: 0\r\n                },\r\n                colors: [\r\n                    Color.fromHex(0x67b7dc)\r\n                ],\r\n                step: 1,\r\n                //baseColor: Color.fromRGB(103, 183, 220),\r\n                //count: 20,\r\n                reuse: false,\r\n                startIndex: 0\r\n            });\r\n            rule.setPrivate(\"currentStep\", 0);\r\n            rule.setPrivate(\"currentPass\", 0);\r\n        }\r\n        r(\"Entity\").setAll({\r\n            stateAnimationDuration: 0,\r\n            stateAnimationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Component\").setAll({\r\n            interpolationDuration: 0,\r\n            interpolationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Sprite\").setAll({\r\n            visible: true,\r\n            scale: 1,\r\n            opacity: 1,\r\n            rotation: 0,\r\n            position: \"relative\",\r\n            tooltipX: p50,\r\n            tooltipY: p50,\r\n            tooltipPosition: \"fixed\",\r\n            isMeasured: true\r\n        });\r\n        r(\"Sprite\").states.create(\"default\", { \"visible\": true, opacity: 1 });\r\n        r(\"Container\").setAll({\r\n            interactiveChildren: true,\r\n            setStateOnChildren: false\r\n        });\r\n        r(\"Graphics\").setAll({\r\n            strokeWidth: 1\r\n        });\r\n        r(\"Chart\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            interactiveChildren: false\r\n        });\r\n        r(\"ZoomableContainer\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            wheelable: true,\r\n            pinchZoom: true,\r\n            maxZoomLevel: 32,\r\n            minZoomLevel: 1,\r\n            zoomStep: 2,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            animationDuration: 600,\r\n            maxPanOut: 0.4\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: alignment\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\r\n            centerX: p50,\r\n            x: p50\r\n        });\r\n        r(\"Sprite\", [\"vertical\", \"center\"]).setAll({\r\n            centerY: p50,\r\n            y: p50\r\n        });\r\n        r(\"Container\", [\"horizontal\", \"layout\"]).setAll({\r\n            layout: horizontalLayout\r\n        });\r\n        r(\"Container\", [\"vertical\", \"layout\"]).setAll({\r\n            layout: verticalLayout\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: patterns\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Pattern\").setAll({\r\n            repetition: \"repeat\",\r\n            width: 50,\r\n            height: 50,\r\n            rotation: 0,\r\n            fillOpacity: 1\r\n        });\r\n        r(\"LinePattern\").setAll({\r\n            gap: 6,\r\n            colorOpacity: 1,\r\n            width: 49,\r\n            height: 49\r\n        });\r\n        r(\"RectanglePattern\").setAll({\r\n            gap: 6,\r\n            checkered: false,\r\n            centered: true,\r\n            maxWidth: 5,\r\n            maxHeight: 5,\r\n            width: 48,\r\n            height: 48,\r\n            strokeWidth: 0\r\n        });\r\n        r(\"CirclePattern\").setAll({\r\n            gap: 5,\r\n            checkered: false,\r\n            centered: false,\r\n            radius: 3,\r\n            strokeWidth: 0,\r\n            width: 45,\r\n            height: 45\r\n        });\r\n        r(\"GrainPattern\").setAll({\r\n            width: 200,\r\n            height: 200,\r\n            colors: [Color.fromHex(0x000000)],\r\n            size: 1,\r\n            horizontalGap: 0,\r\n            verticalGap: 0,\r\n            density: 1,\r\n            minOpacity: 0,\r\n            maxOpacity: 0.2\r\n        });\r\n        {\r\n            const rule = r(\"PatternSet\");\r\n            rule.setAll({\r\n                step: 1\r\n            });\r\n            setColor(rule, \"color\", ic, \"stroke\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: gradients\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"LinearGradient\").setAll({\r\n            rotation: 90\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Legend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Legend\").setAll({\r\n            fillField: \"fill\",\r\n            strokeField: \"stroke\",\r\n            nameField: \"name\",\r\n            layout: GridLayout.new(this._root, {}),\r\n            layer: 30,\r\n            clickTarget: \"itemContainer\"\r\n        });\r\n        // Class: Container\r\n        r(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingBottom: 5,\r\n            paddingTop: 5,\r\n            layout: horizontalLayout,\r\n            setStateOnChildren: true,\r\n            interactiveChildren: false,\r\n            ariaChecked: true,\r\n            focusable: true,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            role: \"checkbox\"\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        r(\"Container\", [\"legend\", \"marker\"]).setAll({\r\n            setStateOnChildren: true,\r\n            centerY: p50,\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            paddingBottom: 0,\r\n            paddingTop: 0,\r\n            width: 18,\r\n            height: 18\r\n        });\r\n        r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\r\n            width: p100,\r\n            height: p100,\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTR: 3\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            width: 50,\r\n            centerX: p100,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: HeatLegend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"HeatLegend\").setAll({\r\n            stepCount: 1\r\n        });\r\n        r(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\r\n            height: p100,\r\n            width: 15\r\n        });\r\n        r(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\r\n            width: p100,\r\n            height: 15\r\n        });\r\n        r(\"HeatLegend\", [\"vertical\"]).setAll({\r\n            height: p100\r\n        });\r\n        r(\"HeatLegend\", [\"horizontal\"]).setAll({\r\n            width: p100\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"start\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"end\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Labels\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        {\r\n            const rule = r(\"Label\");\r\n            rule.setAll({\r\n                paddingTop: 8,\r\n                paddingBottom: 8,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                fontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\r\n                fontSize: \"1em\",\r\n                populateText: false\r\n            });\r\n            setColor(rule, \"fill\", ic, \"text\");\r\n        }\r\n        r(\"RadialLabel\").setAll({\r\n            textType: \"regular\",\r\n            centerY: p50,\r\n            centerX: p50,\r\n            inside: false,\r\n            radius: 0,\r\n            baseRadius: p100,\r\n            orientation: \"auto\",\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"EditableLabel\").setAll({\r\n            editOn: \"click\",\r\n            //setStateOnChildren: true,\r\n            themeTags: [\"editablelabel\"],\r\n            multiLine: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).setAll({\r\n            fillOpacity: 0,\r\n            fill: Color.fromHex(0x000000),\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusTR: 3,\r\n            strokeOpacity: 0,\r\n            stroke: Color.fromHex(0x000000)\r\n        });\r\n        {\r\n            r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).states.create(\"active\", {\r\n                strokeOpacity: 0.2,\r\n            });\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Elements and shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"RoundedRectangle\").setAll({\r\n            cornerRadiusTL: 8,\r\n            cornerRadiusBL: 8,\r\n            cornerRadiusTR: 8,\r\n            cornerRadiusBR: 8\r\n        });\r\n        r(\"PointedRectangle\").setAll({\r\n            pointerBaseWidth: 15,\r\n            pointerLength: 10,\r\n            cornerRadius: 8\r\n        });\r\n        r(\"Slice\").setAll({\r\n            shiftRadius: 0,\r\n            dRadius: 0,\r\n            dInnerRadius: 0\r\n        });\r\n        {\r\n            const rule = r(\"Tick\");\r\n            rule.setAll({\r\n                strokeOpacity: .15,\r\n                isMeasured: false,\r\n                length: 4.5,\r\n                position: \"absolute\",\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Bullet\").setAll({\r\n            locationX: 0.5,\r\n            locationY: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Tooltip\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Tooltip\").setAll({\r\n            position: \"absolute\",\r\n            getFillFromSprite: true,\r\n            getStrokeFromSprite: false,\r\n            autoTextColor: true,\r\n            paddingTop: 9,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            marginBottom: 5,\r\n            pointerOrientation: \"vertical\",\r\n            centerX: p50,\r\n            centerY: p50,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            exportable: false\r\n            //layer: 100\r\n        });\r\n        r(\"Polygon\").setAll({\r\n            animationEasing: $ease.out($ease.cubic),\r\n        });\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.9,\r\n                cornerRadius: 4,\r\n                pointerLength: 4,\r\n                pointerBaseWidth: 8,\r\n                fillOpacity: 0.9,\r\n                stroke: Color.fromHex(0xffffff)\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"tooltip\"]);\r\n            rule.setAll({\r\n                role: \"tooltip\",\r\n                populateText: true,\r\n                paddingRight: 0,\r\n                paddingTop: 0,\r\n                paddingLeft: 0,\r\n                paddingBottom: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Button\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\").setAll({\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            interactive: true,\r\n            layout: horizontalLayout,\r\n            interactiveChildren: false,\r\n            setStateOnChildren: true,\r\n            focusable: true\r\n        });\r\n        r(\"Button\").states.create(\"hover\", {});\r\n        r(\"Button\").states.create(\"down\", { stateAnimationDuration: 0 });\r\n        r(\"Button\").states.create(\"active\", {});\r\n        r(\"Button\").states.create(\"disabled\", {\r\n            forceInactive: true\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonActive\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]);\r\n            rule.setAll({\r\n                forceInactive: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: ZoomOutButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"zoom\"]).setAll({\r\n            paddingTop: 18,\r\n            paddingBottom: 18,\r\n            paddingLeft: 12,\r\n            paddingRight: 12,\r\n            centerX: 46,\r\n            centerY: -10,\r\n            y: 0,\r\n            x: p100,\r\n            role: \"button\",\r\n            ariaLabel: language.translate(\"Zoom Out\"),\r\n            layer: 30\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0.7,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(12, 0);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: ResizeButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"resize\"]).setAll({\r\n            paddingTop: 9,\r\n            paddingBottom: 9,\r\n            paddingLeft: 13,\r\n            paddingRight: 13,\r\n            draggable: true,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            position: \"absolute\",\r\n            role: \"slider\",\r\n            ariaValueMin: \"0\",\r\n            ariaValueMax: \"100\",\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                interactive: false,\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"resize\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        r(\"Button\", [\"resize\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: PlayButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"play\"]).setAll({\r\n            paddingTop: 13,\r\n            paddingBottom: 13,\r\n            paddingLeft: 14,\r\n            paddingRight: 14,\r\n            ariaLabel: language.translate(\"Play\"),\r\n            toggleKey: \"active\"\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"play\", \"icon\"]);\r\n            rule.setAll({\r\n                stateAnimationDuration: 0,\r\n                dx: 1,\r\n                draw: (display) => {\r\n                    display.moveTo(0, -5);\r\n                    display.lineTo(8, 0);\r\n                    display.lineTo(0, 5);\r\n                    display.lineTo(0, -5);\r\n                }\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\r\n            stateAnimationDuration: 0\r\n        });\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\r\n            stateAnimationDuration: 0,\r\n            draw: (display) => {\r\n                display.moveTo(-4, -5);\r\n                display.lineTo(-1, -5);\r\n                display.lineTo(-1, 5);\r\n                display.lineTo(-4, 5);\r\n                display.lineTo(-4, -5);\r\n                display.moveTo(4, -5);\r\n                display.lineTo(1, -5);\r\n                display.lineTo(1, 5);\r\n                display.lineTo(4, 5);\r\n                display.lineTo(4, -5);\r\n            }\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: SwitchButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"switch\"]).setAll({\r\n            paddingTop: 4,\r\n            paddingBottom: 4,\r\n            paddingLeft: 4,\r\n            paddingRight: 4,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            toggleKey: \"active\",\r\n            width: 40,\r\n            height: 24,\r\n            layout: null\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Circle\", [\"switch\", \"icon\"]);\r\n            rule.setAll({\r\n                radius: 8,\r\n                centerY: 0,\r\n                centerX: 0,\r\n                dx: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\r\n            dx: 16\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Scrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Scrollbar\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            layer: 30,\r\n            animationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Scrollbar\", [\"vertical\"]).setAll({\r\n            marginRight: 13,\r\n            marginLeft: 13,\r\n            minWidth: 12,\r\n            height: p100\r\n        });\r\n        r(\"Scrollbar\", [\"horizontal\"]).setAll({\r\n            marginTop: 13,\r\n            marginBottom: 13,\r\n            minHeight: 12,\r\n            width: p100\r\n        });\r\n        this.rule(\"Button\", [\"scrollbar\"]).setAll({\r\n            exportable: false\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadiusTL: 8,\r\n                cornerRadiusBL: 8,\r\n                cornerRadiusTR: 8,\r\n                cornerRadiusBR: 8,\r\n                fillOpacity: 0.8,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"fill\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\r\n            rule.setAll({\r\n                role: \"slider\",\r\n                ariaLive: \"polite\",\r\n                position: \"absolute\",\r\n                draggable: true\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\r\n            x: p50,\r\n            width: p100,\r\n            centerX: p50,\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\r\n            y: p50,\r\n            centerY: p50,\r\n            height: p100,\r\n            ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n        });\r\n        // @todo: is this needed? used to be \"ContentScrollbar\"\r\n        // r(\"Scrollbar\", [\"content?\"]).setAll({\r\n        // \tmarginRight: 0,\r\n        // \tmarginLeft: 5,\r\n        // \tlayer: 5\r\n        // });\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         *\r\n         * This needs to be in DefaultTheme because it's the only theme that is\r\n         * automatically applied to Root, and tooltips different ancestors\r\n         * than actual charts using them.\r\n         */\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadius: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Label\", [\"axis\", \"tooltip\"]).setAll({\r\n            role: undefined\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\r\n            textAlign: \"right\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\r\n            textAlign: \"left\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"Tooltip\", [\"categoryaxis\"]).setAll({\r\n            labelText: \"{category}\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * Shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: Graphics\r\n        r(\"Star\").setAll({\r\n            spikes: 5,\r\n            innerRadius: 5,\r\n            radius: 10\r\n        });\r\n        // STOCK\r\n        r(\"Tooltip\", [\"stock\"]).setAll({\r\n            paddingTop: 6,\r\n            paddingBottom: 5,\r\n            paddingLeft: 7,\r\n            paddingRight: 7\r\n        });\r\n        r(\"Tooltip\", ['indicator']).setAll({\r\n            forceHidden: true\r\n        });\r\n        r(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\r\n            pointerLength: 0,\r\n            pointerBaseWidth: 0,\r\n            cornerRadius: 3\r\n        });\r\n        r(\"Label\", [\"tooltip\", \"stock\"]).setAll({\r\n            fontSize: \"0.8em\"\r\n        });\r\n        // resizer\r\n        r(\"SpriteResizer\").setAll({\r\n            rotationStep: 10,\r\n            isMeasured: false\r\n        });\r\n        {\r\n            const rule = r(\"Container\", [\"resizer\", \"grip\"]);\r\n            rule.states.create(\"hover\", {});\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.7,\r\n                strokeWidth: 1,\r\n                fillOpacity: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                width: 20,\r\n                height: 20\r\n            });\r\n            rule.states.create(\"hover\", {\r\n                fillOpacity: 0.3\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\r\n            rule.setAll({\r\n                strokeDasharray: [2, 2],\r\n                strokeOpacity: 0.5,\r\n                strokeWidth: 1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"button\", \"plus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n                display.moveTo(0, -4);\r\n                display.lineTo(0, 4);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"minus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"home\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            svgPath: \"M 8 -1 L 6 -1 L 6 7 L 2 7 L 2 1 L -2 1 L -2 7 L -6 7 L -6 -1 L -8 -1 L 0 -9 L 8 -1 Z M 8 -1\"\r\n        });\r\n        r(\"Button\", [\"zoomtools\"]).setAll({\r\n            marginTop: 1,\r\n            marginBottom: 2\r\n        });\r\n        r(\"ZoomTools\").setAll({\r\n            x: p100,\r\n            centerX: p100,\r\n            y: p100,\r\n            centerY: p100,\r\n            paddingRight: 10,\r\n            paddingBottom: 10\r\n        });\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": ["percent", "min", "max", "path", "a", "each", "percent", "color", "s", "hue2rgb", "p", "q", "max", "min", "percent", "percent", "color", "a", "each", "AnimationState", "color", "s", "percent", "a", "toIndex", "x", "p0", "min", "max", "point", "point2", "x", "y", "each", "state", "each", "animation", "x", "template", "value", "remove", "tags", "themes", "tooltipMoveDp", "blur", "saturate", "events", "x", "y", "point", "p0", "a", "x", "y", "BlendMode", "x", "y", "x", "y", "x", "isNaN", "x", "y", "max", "x", "round", "round", "startIndex", "endIndex", "sum", "percent", "s", "len", "point", "point", "sin", "cos", "x", "y", "x", "cos", "sin", "tau", "x", "pi", "tau", "epsilon", "k", "x", "y", "path", "tau", "cos", "sin", "p0", "a", "x", "y", "a", "sin", "tau", "cos", "sqrt3", "sqrt3", "s", "x", "y", "x", "y", "x", "y", "x", "y", "beta", "point", "x", "y", "custom", "tension", "x", "y", "point", "custom", "tension", "x", "y", "point", "custom", "tension", "point", "x", "y", "x2", "y2", "a", "custom", "alpha", "x", "y", "point", "custom", "alpha", "x", "y", "point", "custom", "alpha", "x", "y", "x", "point", "y", "x", "y", "a", "x", "y", "x", "y", "s"]
}
