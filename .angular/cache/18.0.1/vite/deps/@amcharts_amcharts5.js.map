{
  "version": 3,
  "sources": ["../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js", "../../../../../node_modules/@amcharts/amcharts5/locales/en.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Language.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js", "../../../../../node_modules/svg-arc-to-cubic-bezier/modules/index.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/Root.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Modal.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Bullet.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Button.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Circle.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Polygon.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Ellipse.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Star.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/ZoomableContainer.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/gradients/Gradient.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/gradients/LinearGradient.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/HeatLegend.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/EditableLabel.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Legend.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Picture.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Triangle.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Scrollbar.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/Slider.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/ZoomTools.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/GrainPattern.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/gradients/RadialGradient.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/CirclePattern.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/LinePattern.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/RectanglePattern.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PathPattern.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/PatternSet.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/DataParser.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/DataProcessor.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/render/SpriteResizer.js", "../../../../../node_modules/@amcharts/amcharts5/.internal/core/util/Net.js"],
  "sourcesContent": ["/** @ignore */ /** */\r\nimport * as $array from \"./Array\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * @ignore\r\n */\r\nclass Native {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_observer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        this._observer = new ResizeObserver((entries) => {\r\n            $array.each(entries, (entry) => {\r\n                $array.each(this._targets, (x) => {\r\n                    if (x.target === entry.target) {\r\n                        x.callback();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        this._observer.observe(target, { box: \"border-box\" });\r\n        this._targets.push({ target, callback });\r\n    }\r\n    removeTarget(target) {\r\n        this._observer.unobserve(target);\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Raf {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_timer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        if (this._timer === null) {\r\n            let lastTime = null;\r\n            const loop = () => {\r\n                const currentTime = Date.now();\r\n                if (lastTime === null || currentTime > (lastTime + Raf.delay)) {\r\n                    lastTime = currentTime;\r\n                    $array.each(this._targets, (x) => {\r\n                        let newSize = x.target.getBoundingClientRect();\r\n                        if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\r\n                            x.size = newSize;\r\n                            x.callback();\r\n                        }\r\n                    });\r\n                }\r\n                if (this._targets.length === 0) {\r\n                    this._timer = null;\r\n                }\r\n                else {\r\n                    this._timer = requestAnimationFrame(loop);\r\n                }\r\n            };\r\n            this._timer = requestAnimationFrame(loop);\r\n        }\r\n        // We start off with fake bounds so that sensor always kicks in\r\n        let size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\r\n        this._targets.push({ target, callback, size });\r\n    }\r\n    removeTarget(target) {\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n        if (this._targets.length === 0) {\r\n            if (this._timer !== null) {\r\n                cancelAnimationFrame(this._timer);\r\n                this._timer = null;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Raf, \"delay\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: 200\r\n});\r\n/**\r\n * @ignore\r\n */\r\nlet observer = null;\r\n/**\r\n * @ignore\r\n */\r\nfunction makeSensor() {\r\n    if (observer === null) {\r\n        if (typeof ResizeObserver !== \"undefined\") {\r\n            observer = new Native();\r\n        }\r\n        else {\r\n            observer = new Raf();\r\n        }\r\n    }\r\n    return observer;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class ResizeSensor {\r\n    constructor(element, callback) {\r\n        Object.defineProperty(this, \"_sensor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_listener\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        this._sensor = makeSensor();\r\n        this._element = element;\r\n        // This is needed because we need to know when the window is zoomed\r\n        this._listener = $utils.onZoom(callback);\r\n        this._sensor.addTarget(element, callback);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._sensor.removeTarget(this._element);\r\n            this._listener.dispose();\r\n        }\r\n    }\r\n    get sensor() {\r\n        return this._sensor;\r\n    }\r\n}\r\n", "import { Entity } from \"./Entity\";\r\n/**\r\n * Presets for common UI elements.\r\n */\r\nexport class InterfaceColors extends Entity {\r\n}\r\nObject.defineProperty(InterfaceColors, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"InterfaceColors\"\r\n});\r\nObject.defineProperty(InterfaceColors, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([InterfaceColors.className])\r\n});\r\n", "import { Graphics } from \"./Graphics\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class PointedRectangle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            if (w > 0 && h > 0) {\r\n                let cr = this.get(\"cornerRadius\", 8);\r\n                cr = $math.fitToRange(cr, 0, Math.min(w / 2, h / 2));\r\n                let x = this.get(\"pointerX\", 0);\r\n                let y = this.get(\"pointerY\", 0);\r\n                let bwh = this.get(\"pointerBaseWidth\", 15) / 2;\r\n                // corner coordinates\r\n                // top left\r\n                let xtl = 0;\r\n                let ytl = 0;\r\n                // top right\r\n                let xtr = w;\r\n                let ytr = 0;\r\n                // bottom right\r\n                let xbr = w;\r\n                let ybr = h;\r\n                // bottom left\r\n                let xbl = 0;\r\n                let ybl = h;\r\n                // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n                // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n                let d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n                let d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n                const display = this._display;\r\n                // top\r\n                display.moveTo(cr, 0);\r\n                if (d1 > 0 && d2 > 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, -Infinity, 0);\r\n                    display.lineTo(stemX - bwh, 0);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX + bwh, 0);\r\n                }\r\n                display.lineTo(w - cr, 0);\r\n                display.arcTo(w, 0, w, cr, cr);\r\n                // right\r\n                if (d1 > 0 && d2 < 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - bwh - cr));\r\n                    x = $math.fitToRange(x, w, Infinity);\r\n                    display.lineTo(w, cr);\r\n                    display.lineTo(w, Math.max(stemY - bwh, cr));\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(w, stemY + bwh);\r\n                }\r\n                display.lineTo(w, h - cr);\r\n                display.arcTo(w, h, w - cr, h, cr);\r\n                // bottom\r\n                if (d1 < 0 && d2 < 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, h, Infinity);\r\n                    display.lineTo(w - cr, h);\r\n                    display.lineTo(stemX + bwh, h);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX - bwh, h);\r\n                }\r\n                display.lineTo(cr, h);\r\n                display.arcTo(0, h, 0, h - cr, cr);\r\n                // left\r\n                if (d1 < 0 && d2 > 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - cr - bwh));\r\n                    x = $math.fitToRange(x, -Infinity, 0);\r\n                    display.lineTo(0, h - cr);\r\n                    display.lineTo(0, stemY + bwh);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(0, Math.max(stemY - bwh, cr));\r\n                }\r\n                display.lineTo(0, cr);\r\n                display.arcTo(0, 0, cr, 0, cr);\r\n                display.closePath();\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PointedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PointedRectangle\"\r\n});\r\nObject.defineProperty(PointedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([PointedRectangle.className])\r\n});\r\n", "import { MultiDisposer } from \"../util/Disposer\";\r\nimport { Label } from \"../render/Label\";\r\nimport { PointedRectangle } from \"../render/PointedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Color } from \"../util/Color\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * Creates a tooltip.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\r\n * @important\r\n */\r\nexport class Tooltip extends Container {\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(root, settings, isReal, templates);\r\n        Object.defineProperty(this, \"_fx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_fy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_label\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fillDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_labelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_w\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_h\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_keepHoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlContentHovered\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\r\n        super._afterNew();\r\n        const background = this._setDefaultFn(\"background\", () => {\r\n            return PointedRectangle.new(this._root, {});\r\n        });\r\n        background.set(\"themeTags\", [\"tooltip\", \"background\"]);\r\n        this._label = this.children.push(Label.new(this._root, {}));\r\n        this._disposers.push(this._label.events.on(\"boundschanged\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._disposers.push(this.on(\"bounds\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._updateTextColor();\r\n        this._root.tooltipContainer.children.push(this);\r\n        this.hide(0);\r\n        this._disposers.push(this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n            if (htmlElement) {\r\n                this._disposers.push($utils.addEventListener(htmlElement, \"pointerover\", (_ev) => {\r\n                    this._htmlContentHovered = true;\r\n                }));\r\n                this._disposers.push($utils.addEventListener(htmlElement, \"pointerout\", (_ev) => {\r\n                    this._htmlContentHovered = false;\r\n                }));\r\n            }\r\n        }));\r\n        this.on(\"visible\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this.label.events.on(\"dataitemchanged\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this._root._tooltips.push(this);\r\n    }\r\n    _handleReaderAnnouncement() {\r\n        if (this.get(\"readerAnnounce\") && this.isVisibleDeep()) {\r\n            this._root.readerAlert(this.label.getAccessibleText());\r\n        }\r\n    }\r\n    /**\r\n     * A [[Label]] element for the tooltip.\r\n     *\r\n     * @readonly\r\n     * @return Label\r\n     */\r\n    get label() {\r\n        return this._label;\r\n    }\r\n    /**\r\n     * Permanently disposes the tooltip.\r\n     */\r\n    _dispose() {\r\n        super._dispose();\r\n        $array.remove(this._root._tooltips, this);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"pointerOrientation\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\r\n            this.get(\"background\")._markDirtyKey(\"width\");\r\n        }\r\n        const labelText = this.get(\"labelText\");\r\n        if (labelText != null) {\r\n            this.label.set(\"text\", this.get(\"labelText\"));\r\n        }\r\n        const labelHTML = this.get(\"labelHTML\");\r\n        if (labelHTML != null) {\r\n            this.label.set(\"html\", this.get(\"labelHTML\"));\r\n        }\r\n        const labelAriaLabel = this.get(\"labelAriaLabel\");\r\n        if (labelAriaLabel != null) {\r\n            this.label.set(\"ariaLabel\", this.get(\"labelAriaLabel\"));\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pointTo\") || this.isDirty(\"pointerOrientation\")) {\r\n            // can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\r\n            this._updateBackground();\r\n        }\r\n        if (this.isDirty(\"tooltipTarget\")) {\r\n            this.updateBackgroundColor();\r\n        }\r\n        if (this.isDirty(\"keepTargetHover\")) {\r\n            const keephover = this.get(\"keepTargetHover\");\r\n            if (keephover) {\r\n                const bg = this.get(\"background\");\r\n                this._keepHoverDp = new MultiDisposer([\r\n                    bg.events.on(\"pointerover\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            target.hover();\r\n                        }\r\n                    }),\r\n                    bg.events.on(\"pointerout\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            if (!this._htmlContentHovered) {\r\n                                target.unhover();\r\n                            }\r\n                        }\r\n                    })\r\n                ]);\r\n                this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n                    if (this._keepHoverDp && htmlElement) {\r\n                        this._keepHoverDp.disposers.push($utils.addEventListener(htmlElement, \"pointerleave\", (ev) => {\r\n                            const outEvent = this.root._renderer.getEvent(ev);\r\n                            bg.events.dispatch(\"pointerout\", {\r\n                                type: \"pointerout\",\r\n                                originalEvent: outEvent.event,\r\n                                point: outEvent.point,\r\n                                simulated: false,\r\n                                target: bg\r\n                            });\r\n                        }));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._keepHoverDp) {\r\n                    this._keepHoverDp.dispose();\r\n                    this._keepHoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _onShow() {\r\n        super._onShow();\r\n        this.updateBackgroundColor();\r\n    }\r\n    updateBackgroundColor() {\r\n        let tooltipTarget = this.get(\"tooltipTarget\");\r\n        const background = this.get(\"background\");\r\n        let fill;\r\n        let stroke;\r\n        if (tooltipTarget && background) {\r\n            fill = tooltipTarget.get(\"fill\");\r\n            stroke = tooltipTarget.get(\"stroke\");\r\n            if (fill == null) {\r\n                fill = stroke;\r\n            }\r\n            if (this.get(\"getFillFromSprite\")) {\r\n                if (this._fillDp) {\r\n                    this._fillDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"fill\", fill);\r\n                }\r\n                this._fillDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"fill\", fill);\r\n                        this._updateTextColor(fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._fillDp);\r\n            }\r\n            if (this.get(\"getStrokeFromSprite\")) {\r\n                if (this._strokeDp) {\r\n                    this._strokeDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"stroke\", fill);\r\n                }\r\n                this._strokeDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"stroke\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._strokeDp);\r\n            }\r\n            if (this.get(\"getLabelFillFromSprite\")) {\r\n                if (this._labelDp) {\r\n                    this._labelDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    this.label.set(\"fill\", fill);\r\n                }\r\n                this._labelDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        this.label.set(\"fill\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._labelDp);\r\n            }\r\n        }\r\n        this._updateTextColor(fill);\r\n    }\r\n    _updateTextColor(fill) {\r\n        if (this.get(\"autoTextColor\")) {\r\n            if (fill == null) {\r\n                fill = this.get(\"background\").get(\"fill\");\r\n            }\r\n            if (fill == null) {\r\n                fill = this._root.interfaceColors.get(\"background\");\r\n            }\r\n            if (fill instanceof Color) {\r\n                this.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\r\n            }\r\n        }\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this.label._setDataItem(dataItem);\r\n    }\r\n    _updateBackground() {\r\n        super.updateBackground();\r\n        const parent = this._root.container;\r\n        if (parent) {\r\n            let cw = 0.5;\r\n            let ch = 0.5;\r\n            let centerX = this.get(\"centerX\");\r\n            if (centerX instanceof Percent) {\r\n                cw = centerX.value;\r\n            }\r\n            let centerY = this.get(\"centerY\");\r\n            if (centerY instanceof Percent) {\r\n                ch = centerY.value;\r\n            }\r\n            let parentW = parent.width();\r\n            let parentH = parent.height();\r\n            let tooltipContainer = this.parent;\r\n            let xx = 0;\r\n            let yy = 0;\r\n            if (tooltipContainer) {\r\n                xx = tooltipContainer.x();\r\n                yy = tooltipContainer.y();\r\n                const layerMargin = tooltipContainer.get(\"layerMargin\");\r\n                if (layerMargin) {\r\n                    xx += layerMargin.left || 0;\r\n                    yy += layerMargin.top || 0;\r\n                    parentW += (layerMargin.left || 0) + (layerMargin.right || 0);\r\n                    parentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\r\n                }\r\n            }\r\n            const bounds = this.get(\"bounds\", { left: -xx, top: -yy, right: parentW - xx, bottom: parentH - yy });\r\n            this._updateBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            // use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\r\n            if (w === 0) {\r\n                w = this._w;\r\n            }\r\n            if (h === 0) {\r\n                h = this._h;\r\n            }\r\n            let pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\r\n            let x = pointTo.x;\r\n            let y = pointTo.y;\r\n            let pointerOrientation = this.get(\"pointerOrientation\");\r\n            let background = this.get(\"background\");\r\n            let pointerLength = 0;\r\n            let bgStrokeSizeY = 0;\r\n            let bgStrokeSizeX = 0;\r\n            if (background instanceof PointedRectangle) {\r\n                pointerLength = background.get(\"pointerLength\", 0);\r\n                bgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\r\n                bgStrokeSizeX = bgStrokeSizeY;\r\n                background.set(\"width\", w);\r\n                background.set(\"height\", h);\r\n            }\r\n            let pointerX = 0;\r\n            let pointerY = 0;\r\n            let boundsW = bounds.right - bounds.left;\r\n            let boundsH = bounds.bottom - bounds.top;\r\n            // horizontal\r\n            if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\r\n                bgStrokeSizeY = 0;\r\n                if (pointerOrientation == \"horizontal\") {\r\n                    if (x > bounds.left + boundsW / 2) {\r\n                        x -= (w * (1 - cw) + pointerLength);\r\n                        bgStrokeSizeX *= -1;\r\n                    }\r\n                    else {\r\n                        x += (w * cw + pointerLength);\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"left\") {\r\n                    x += (w * (1 - cw) + pointerLength);\r\n                }\r\n                else {\r\n                    x -= (w * cw + pointerLength);\r\n                    bgStrokeSizeX *= -1;\r\n                }\r\n            }\r\n            // vertical pointer\r\n            else {\r\n                bgStrokeSizeX = 0;\r\n                if (pointerOrientation == \"vertical\") {\r\n                    if (y > bounds.top + h / 2 + pointerLength) {\r\n                        y -= (h * (1 - ch) + pointerLength);\r\n                    }\r\n                    else {\r\n                        y += (h * ch + pointerLength);\r\n                        bgStrokeSizeY *= -1;\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"down\") {\r\n                    y -= (h * (1 - ch) + pointerLength);\r\n                }\r\n                else {\r\n                    y += (h * ch + pointerLength);\r\n                    bgStrokeSizeY *= -1;\r\n                }\r\n            }\r\n            x = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\r\n            y = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\r\n            pointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\r\n            pointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\r\n            this._fx = x;\r\n            this._fy = y;\r\n            const animationDuration = this.get(\"animationDuration\", 0);\r\n            if (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\r\n                const animationEasing = this.get(\"animationEasing\");\r\n                this.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\r\n                this.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\r\n            }\r\n            else {\r\n                this.set(\"x\", x);\r\n                this.set(\"y\", y);\r\n            }\r\n            if (background instanceof PointedRectangle) {\r\n                background.set(\"pointerX\", pointerX);\r\n                background.set(\"pointerY\", pointerY);\r\n            }\r\n            if (w > 0) {\r\n                this._w = w;\r\n            }\r\n            if (h > 0) {\r\n                this._h = h;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Tooltip, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tooltip\"\r\n});\r\nObject.defineProperty(Tooltip, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Tooltip.className])\r\n});\r\n", "import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Number formatter\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n * @important\r\n */\r\nexport class NumberFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"numberFormat\", \"#,###.#####\");\r\n        this._setDefault(\"smallNumberThreshold\", 1.00);\r\n        const bns = \"_big_number_suffix_\";\r\n        const sns = \"_small_number_suffix_\";\r\n        const bs = \"_byte_suffix_\";\r\n        this._setDefault(\"bigNumberPrefixes\", [\r\n            { \"number\": 1e+3, \"suffix\": this._t(bns + \"3\") },\r\n            { \"number\": 1e+6, \"suffix\": this._t(bns + \"6\") },\r\n            { \"number\": 1e+9, \"suffix\": this._t(bns + \"9\") },\r\n            { \"number\": 1e+12, \"suffix\": this._t(bns + \"12\") },\r\n            { \"number\": 1e+15, \"suffix\": this._t(bns + \"15\") },\r\n            { \"number\": 1e+18, \"suffix\": this._t(bns + \"18\") },\r\n            { \"number\": 1e+21, \"suffix\": this._t(bns + \"21\") },\r\n            { \"number\": 1e+24, \"suffix\": this._t(bns + \"24\") }\r\n        ]);\r\n        this._setDefault(\"smallNumberPrefixes\", [\r\n            { \"number\": 1e-24, \"suffix\": this._t(sns + \"24\") },\r\n            { \"number\": 1e-21, \"suffix\": this._t(sns + \"21\") },\r\n            { \"number\": 1e-18, \"suffix\": this._t(sns + \"18\") },\r\n            { \"number\": 1e-15, \"suffix\": this._t(sns + \"15\") },\r\n            { \"number\": 1e-12, \"suffix\": this._t(sns + \"12\") },\r\n            { \"number\": 1e-9, \"suffix\": this._t(sns + \"9\") },\r\n            { \"number\": 1e-6, \"suffix\": this._t(sns + \"6\") },\r\n            { \"number\": 1e-3, \"suffix\": this._t(sns + \"3\") }\r\n        ]);\r\n        this._setDefault(\"bytePrefixes\", [\r\n            { \"number\": 1, suffix: this._t(bs + \"B\") },\r\n            { \"number\": 1024, suffix: this._t(bs + \"KB\") },\r\n            { \"number\": 1048576, suffix: this._t(bs + \"MB\") },\r\n            { \"number\": 1073741824, suffix: this._t(bs + \"GB\") },\r\n            { \"number\": 1099511627776, suffix: this._t(bs + \"TB\") },\r\n            { \"number\": 1125899906842624, suffix: this._t(bs + \"PB\") }\r\n        ]);\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number according to specific format.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, precision) {\r\n        // no format passed in or \"Number\"\r\n        if (format == null || ($type.isString(format) && format.toLowerCase() === \"number\")) {\r\n            format = this.get(\"numberFormat\", \"\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // Is it a built-in format or Intl.NumberFormatOptions\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                if (this.get(\"intlLocales\")) {\r\n                    return new Intl.NumberFormat(this.get(\"intlLocales\"), format).format(source);\r\n                }\r\n                else {\r\n                    return new Intl.NumberFormat(undefined, format).format(source);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        else {\r\n            // Clean format\r\n            format = $utils.cleanFormat(format);\r\n            // Get format info (it will also deal with parser caching)\r\n            let info = this.parseFormat(format, this._root.language);\r\n            // format and replace the number\r\n            let details;\r\n            if (source > this.get(\"negativeBase\")) {\r\n                details = info.positive;\r\n            }\r\n            else if (source < this.get(\"negativeBase\")) {\r\n                details = info.negative;\r\n            }\r\n            else {\r\n                details = info.zero;\r\n            }\r\n            // Adjust precision\r\n            if (precision != null && !details.mod) {\r\n                details = $object.copy(details);\r\n                details.decimals.active = source == 0 ? 0 : precision;\r\n            }\r\n            // Format\r\n            formatted = details.template.split($type.PLACEHOLDER).join(this.applyFormat(source, details));\r\n        }\r\n        if (this.get(\"forceLTR\") === true) {\r\n            formatted = \"‎\" + formatted;\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format Format string, i.e. \"#,###.00\"\r\n     * @param language Language\r\n     * @ignore\r\n     */\r\n    parseFormat(format, language) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        const thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\r\n        const decimalSeparator = language.translateEmpty(\"_decimalSeparator\");\r\n        // init format parse info holder\r\n        let info = {\r\n            \"positive\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"negative\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"zero\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Just \"Number\"?\r\n            if (partFormat.toLowerCase() === \"number\") {\r\n                partFormat = this.get(\"numberFormat\", \"#,###.#####\");\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Parse format\r\n                    // Look for codes\r\n                    let matches = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\r\n                    if (matches) {\r\n                        if (matches === null || matches[0] === \"\") {\r\n                            // no codes here - assume string\r\n                            // nothing to do here\r\n                            item.template += chunk.text;\r\n                        }\r\n                        else {\r\n                            // look for the format modifiers at the end\r\n                            let mods = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\r\n                            if (mods) {\r\n                                item.mod = mods[0].toLowerCase();\r\n                                item.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\r\n                            }\r\n                            // break the format up\r\n                            let a = matches[0].split(\".\");\r\n                            // Deal with thousands\r\n                            if (a[0] === \"\") {\r\n                                // No directives for thousands\r\n                                // Leave default settings (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.thousands.active = (a[0].match(/0/g) || []).length;\r\n                                item.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\r\n                                // Separator interval\r\n                                let b = a[0].split(\",\");\r\n                                if (b.length === 1) {\r\n                                    // No thousands separators\r\n                                    // Do nothing\r\n                                }\r\n                                else {\r\n                                    // Use length fo the last chunk as thousands length\r\n                                    item.thousands.interval = (b.pop() || \"\").length;\r\n                                    if (item.thousands.interval === 0) {\r\n                                        item.thousands.interval = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                            // Deal with decimals\r\n                            if (typeof (a[1]) === \"undefined\") {\r\n                                // No directives for decimals\r\n                                // Leave at defaults (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.decimals.active = (a[1].match(/0/g) || []).length;\r\n                                item.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\r\n                            }\r\n                            // Add special code to template\r\n                            item.template += chunk.text.split(matches[0]).join($type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Quoted string - take it as it is\r\n                    item.template += chunk.text;\r\n                }\r\n            }\r\n            // Apply style formatting\r\n            //item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by parseFormat()\r\n     * @return Formatted number\r\n     * @ignore\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = value < 0;\r\n        value = Math.abs(value);\r\n        // Recalculate according to modifier\r\n        let prefix = \"\", suffix = \"\";\r\n        let mods = details.mod ? details.mod.split(\"\") : [];\r\n        if (mods.indexOf(\"b\") !== -1) {\r\n            let a = this.applyPrefix(value, this.get(\"bytePrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"a\") !== -1) {\r\n            let a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\") ? this.get(\"smallNumberPrefixes\") : this.get(\"bigNumberPrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"p\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            //value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            prefix = this._root.language.translate(\"_percentPrefix\");\r\n            suffix = this._root.language.translate(\"_percentSuffix\");\r\n            if (prefix == \"\" && suffix == \"\") {\r\n                suffix = \"%\";\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"%\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"%\";\r\n        }\r\n        else if (mods.indexOf(\"‰\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 3, 21);\r\n            value *= 1000;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"‰\";\r\n        }\r\n        // Round to passive\r\n        if (mods.indexOf(\"e\") !== -1) {\r\n            // convert the value to exponential\r\n            let exp;\r\n            if (details.decimals.passive >= 0) {\r\n                exp = value.toExponential(details.decimals.passive).split(\"e\");\r\n            }\r\n            else {\r\n                exp = value.toExponential().split(\"e\");\r\n            }\r\n            value = Number(exp[0]);\r\n            suffix = \"e\" + exp[1];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (details.decimals.passive === 0) {\r\n            value = Math.round(value);\r\n        }\r\n        else if (details.decimals.passive > 0) {\r\n            const decimals = $utils.decimalPlaces(value);\r\n            if (decimals > 0) {\r\n                const d = Math.pow(10, details.decimals.passive);\r\n                value = Math.round(parseFloat((value * d).toFixed(decimals))) / d;\r\n            }\r\n        }\r\n        // Init return value\r\n        let res = \"\";\r\n        // Calc integer and decimal parts\r\n        let a = $type.numberToString(value).split(\".\");\r\n        // Format integers\r\n        let ints = a[0];\r\n        // Pad integers to active length\r\n        if (ints.length < details.thousands.active) {\r\n            ints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\r\n        }\r\n        // Insert thousands separators\r\n        if (details.thousands.interval > 0) {\r\n            let ip = [];\r\n            let intsr = ints.split(\"\").reverse().join(\"\");\r\n            for (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\r\n                let c = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\r\n                if (c !== \"\") {\r\n                    ip.unshift(c);\r\n                }\r\n            }\r\n            ints = ip.join(details.thousands.separator);\r\n        }\r\n        // Add integers\r\n        res += ints;\r\n        // Add decimals\r\n        if (a.length === 1) {\r\n            a.push(\"\");\r\n        }\r\n        let decs = a[1];\r\n        // Fill zeros?\r\n        if (decs.length < details.decimals.active) {\r\n            decs += Array(details.decimals.active - decs.length + 1).join(\"0\");\r\n        }\r\n        if (decs !== \"\") {\r\n            res += details.decimals.separator + decs;\r\n        }\r\n        // Can't have empty return value\r\n        if (res === \"\") {\r\n            res = \"0\";\r\n        }\r\n        // Add minus sign back\r\n        if (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\r\n            res = \"-\" + res;\r\n        }\r\n        // Add suffixes/prefixes\r\n        if (prefix) {\r\n            res = prefix + res;\r\n        }\r\n        if (suffix) {\r\n            res += suffix;\r\n        }\r\n        return res;\r\n    }\r\n    applyPrefix(value, prefixes, force = false) {\r\n        let newvalue = value;\r\n        let prefix = \"\";\r\n        let suffix = \"\";\r\n        let applied = false;\r\n        let k = 1;\r\n        for (let i = 0, len = prefixes.length; i < len; i++) {\r\n            if (prefixes[i].number <= value) {\r\n                if (prefixes[i].number === 0) {\r\n                    newvalue = 0;\r\n                }\r\n                else {\r\n                    newvalue = value / prefixes[i].number;\r\n                    k = prefixes[i].number;\r\n                }\r\n                prefix = prefixes[i].prefix;\r\n                suffix = prefixes[i].suffix;\r\n                applied = true;\r\n            }\r\n        }\r\n        if (!applied && force && prefixes.length && value != 0) {\r\n            // Prefix was not applied. Use the first prefix.\r\n            newvalue = value / prefixes[0].number;\r\n            prefix = prefixes[0].prefix;\r\n            suffix = prefixes[0].suffix;\r\n            applied = true;\r\n        }\r\n        if (applied) {\r\n            newvalue = parseFloat(newvalue.toPrecision(Math.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)));\r\n        }\r\n        return [newvalue, prefix, suffix];\r\n    }\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    escape(text) {\r\n        return text.replace(\"||\", $type.PLACEHOLDER2);\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    unescape(text) {\r\n        return text.replace($type.PLACEHOLDER2, \"|\");\r\n    }\r\n}\r\n", "function parseDate(timezone, date) {\r\n    let year = 0;\r\n    let month = 0;\r\n    let day = 1;\r\n    let hour = 0;\r\n    let minute = 0;\r\n    let second = 0;\r\n    let millisecond = 0;\r\n    let weekday = 0;\r\n    timezone.formatToParts(date).forEach((x) => {\r\n        switch (x.type) {\r\n            case \"year\":\r\n                year = +x.value;\r\n                break;\r\n            case \"month\":\r\n                month = (+x.value) - 1;\r\n                break;\r\n            case \"day\":\r\n                day = +x.value;\r\n                break;\r\n            case \"hour\":\r\n                hour = +x.value;\r\n                break;\r\n            case \"minute\":\r\n                minute = +x.value;\r\n                break;\r\n            case \"second\":\r\n                second = +x.value;\r\n                break;\r\n            case \"fractionalSecond\":\r\n                millisecond = +x.value;\r\n                break;\r\n            case \"weekday\":\r\n                switch (x.value) {\r\n                    case \"Sun\":\r\n                        weekday = 0;\r\n                        break;\r\n                    case \"Mon\":\r\n                        weekday = 1;\r\n                        break;\r\n                    case \"Tue\":\r\n                        weekday = 2;\r\n                        break;\r\n                    case \"Wed\":\r\n                        weekday = 3;\r\n                        break;\r\n                    case \"Thu\":\r\n                        weekday = 4;\r\n                        break;\r\n                    case \"Fri\":\r\n                        weekday = 5;\r\n                        break;\r\n                    case \"Sat\":\r\n                        weekday = 6;\r\n                        break;\r\n                }\r\n        }\r\n    });\r\n    if (hour === 24) {\r\n        hour = 0;\r\n    }\r\n    return { year, month, day, hour, minute, second, millisecond, weekday };\r\n}\r\nfunction toUTCDate(timezone, date) {\r\n    const { year, month, day, hour, minute, second, millisecond } = parseDate(timezone, date);\r\n    return Date.UTC(year, month, day, hour, minute, second, millisecond);\r\n}\r\nexport class Timezone {\r\n    constructor(timezone, isReal) {\r\n        Object.defineProperty(this, \"_utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dtf\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this.name = timezone;\r\n        this._utc = new Intl.DateTimeFormat(\"en-US\", {\r\n            hour12: false,\r\n            timeZone: \"UTC\",\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n        this._dtf = new Intl.DateTimeFormat(\"en-US\", {\r\n            hour12: false,\r\n            timeZone: timezone,\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   timezone  IANA timezone\r\n     * @return            Instantiated object\r\n     */\r\n    static new(timezone) {\r\n        return (new this(timezone, true));\r\n    }\r\n    convertLocal(date) {\r\n        const offset = this.offsetUTC(date);\r\n        const userOffset = date.getTimezoneOffset();\r\n        const output = new Date(date);\r\n        output.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\r\n        const newUserOffset = output.getTimezoneOffset();\r\n        if (userOffset != newUserOffset) {\r\n            output.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset);\r\n        }\r\n        return output;\r\n    }\r\n    offsetUTC(date) {\r\n        const utc = toUTCDate(this._utc, date);\r\n        const dtf = toUTCDate(this._dtf, date);\r\n        return (utc - dtf) / 60000;\r\n    }\r\n    parseDate(date) {\r\n        return parseDate(this._dtf, date);\r\n    }\r\n}\r\n", "import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport { Timezone } from \"./Timezone\";\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Date formatter class.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n * @important\r\n */\r\nexport class DateFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"capitalize\", true);\r\n        this._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats a source `Date` object into string format\r\n     * @param   source          inpout date\r\n     * @param   format          Output format\r\n     * @param   ignoreTimezone  Ignore timezone?\r\n     * @return                  Formatted date\r\n     */\r\n    format(source, format, ignoreTimezone = false) {\r\n        // Locale?\r\n        // TODO\r\n        // No format passed in or it's empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            format = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast?\r\n        // TODO: decide if we need to cast\r\n        let date = source;\r\n        // Is it a built-in format or Intl.DateTimeFormat\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                const locales = this.get(\"intlLocales\");\r\n                if (locales) {\r\n                    return new Intl.DateTimeFormat(locales, format).format(date);\r\n                }\r\n                else {\r\n                    return new Intl.DateTimeFormat(undefined, format).format(date);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format);\r\n        // Should we apply custom time zone?\r\n        const timezone = this._root.timezone;\r\n        let originalDate = date;\r\n        if (timezone && !this._root.utc && !ignoreTimezone) {\r\n            date = timezone.convertLocal(date);\r\n        }\r\n        // Check if it's a valid date\r\n        if (!$type.isNumber(date.getTime())) {\r\n            // TODO translation\r\n            //return this._t(\"Invalid date\");\r\n            return \"Invalid date\";\r\n        }\r\n        // Apply format\r\n        formatted = this.applyFormat(date, info, ignoreTimezone, originalDate);\r\n        // Capitalize\r\n        if (this.get(\"capitalize\")) {\r\n            formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());\r\n        }\r\n        // We're done\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Applies format to Date.\r\n     *\r\n     * @param date      Date object\r\n     * @param info      Parsed format information\r\n     * @return Formatted date string\r\n     */\r\n    applyFormat(date, info, ignoreTimezone = false, originalDate) {\r\n        // Init return value\r\n        let res = info.template;\r\n        // Get values\r\n        let fullYear, month, weekday, day, hours, minutes, seconds, milliseconds, timestamp = date.getTime();\r\n        if (this._root.utc && !ignoreTimezone) {\r\n            fullYear = date.getUTCFullYear();\r\n            month = date.getUTCMonth();\r\n            weekday = date.getUTCDay();\r\n            day = date.getUTCDate();\r\n            hours = date.getUTCHours();\r\n            minutes = date.getUTCMinutes();\r\n            seconds = date.getUTCSeconds();\r\n            milliseconds = date.getUTCMilliseconds();\r\n        }\r\n        else {\r\n            fullYear = date.getFullYear();\r\n            month = date.getMonth();\r\n            weekday = date.getDay();\r\n            day = date.getDate();\r\n            hours = date.getHours();\r\n            minutes = date.getMinutes();\r\n            seconds = date.getSeconds();\r\n            milliseconds = date.getMilliseconds();\r\n        }\r\n        // Go through each part and format/replace it in template\r\n        for (let i = 0, len = info.parts.length; i < len; i++) {\r\n            let value = \"\";\r\n            switch (info.parts[i]) {\r\n                case \"G\":\r\n                    value = this._t(fullYear < 0\r\n                        ? \"_era_bc\"\r\n                        : \"_era_ad\");\r\n                    break;\r\n                case \"yyyy\":\r\n                    value = Math.abs(fullYear).toString();\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"yyy\":\r\n                case \"yy\":\r\n                case \"y\":\r\n                    value = Math.abs(fullYear).toString().substr(-info.parts[i].length);\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                    let year = $utils.getWeekYear(date, this._root.utc);\r\n                    if (info.parts[i] == \"YYYY\") {\r\n                        value = Math.abs(year).toString();\r\n                    }\r\n                    else {\r\n                        value = Math.abs(year).toString().substr(-info.parts[i].length);\r\n                    }\r\n                    if (year < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"u\":\r\n                    // @todo\r\n                    break;\r\n                case \"q\":\r\n                    value = \"\" + Math.ceil((date.getMonth() + 1) / 3);\r\n                    break;\r\n                case \"MMMMM\":\r\n                    value = this._t(this._getMonth(month)).substr(0, 1);\r\n                    break;\r\n                case \"MMMM\":\r\n                    value = this._t(this._getMonth(month));\r\n                    break;\r\n                case \"MMM\":\r\n                    value = this._t(this._getShortMonth(month));\r\n                    break;\r\n                case \"MM\":\r\n                    value = $utils.padString(month + 1, 2, \"0\");\r\n                    break;\r\n                case \"M\":\r\n                    value = (month + 1).toString();\r\n                    break;\r\n                case \"ww\":\r\n                    value = $utils.padString($utils.getWeek(date, this._root.utc), 2, \"0\");\r\n                    break;\r\n                case \"w\":\r\n                    value = $utils.getWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"W\":\r\n                    value = $utils.getMonthWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"dd\":\r\n                    value = $utils.padString(day, 2, \"0\");\r\n                    break;\r\n                case \"d\":\r\n                    value = day.toString();\r\n                    break;\r\n                case \"DD\":\r\n                case \"DDD\":\r\n                    value = $utils.padString($utils.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"D\":\r\n                    value = $utils.getYearDay(date, this._root.utc).toString();\r\n                    break;\r\n                case \"F\":\r\n                    // @todo\r\n                    break;\r\n                case \"g\":\r\n                    // @todo\r\n                    break;\r\n                case \"t\":\r\n                    value = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\r\n                    break;\r\n                case \"E\":\r\n                    value = (weekday || 7).toString();\r\n                    break;\r\n                case \"EE\":\r\n                    value = $utils.padString((weekday || 7).toString(), 2, \"0\");\r\n                    break;\r\n                case \"EEE\":\r\n                case \"eee\":\r\n                    value = this._t(this._getShortWeekday(weekday));\r\n                    break;\r\n                case \"EEEE\":\r\n                case \"eeee\":\r\n                    value = this._t(this._getWeekday(weekday));\r\n                    break;\r\n                case \"EEEEE\":\r\n                case \"eeeee\":\r\n                    value = this._t(this._getShortWeekday(weekday)).substr(0, 1);\r\n                    break;\r\n                case \"e\":\r\n                case \"ee\":\r\n                    value = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\r\n                    if (info.parts[i] == \"ee\") {\r\n                        value = $utils.padString(value, 2, \"0\");\r\n                    }\r\n                    break;\r\n                case \"a\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"PM\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"AM\");\r\n                    }\r\n                    break;\r\n                case \"aa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P.M.\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A.M.\");\r\n                    }\r\n                    break;\r\n                case \"aaa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A\");\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    value = $utils.get12Hours(hours).toString();\r\n                    break;\r\n                case \"hh\":\r\n                    value = $utils.padString($utils.get12Hours(hours), 2, \"0\");\r\n                    break;\r\n                case \"H\":\r\n                    value = hours.toString();\r\n                    break;\r\n                case \"HH\":\r\n                    value = $utils.padString(hours, 2, \"0\");\r\n                    break;\r\n                case \"K\":\r\n                    value = $utils.get12Hours(hours, 0).toString();\r\n                    break;\r\n                case \"KK\":\r\n                    value = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\r\n                    break;\r\n                case \"k\":\r\n                    value = (hours + 1).toString();\r\n                    break;\r\n                case \"kk\":\r\n                    value = $utils.padString(hours + 1, 2, \"0\");\r\n                    break;\r\n                case \"m\":\r\n                    value = minutes.toString();\r\n                    break;\r\n                case \"mm\":\r\n                    value = $utils.padString(minutes, 2, \"0\");\r\n                    break;\r\n                case \"s\":\r\n                    value = seconds.toString();\r\n                    break;\r\n                case \"ss\":\r\n                    value = $utils.padString(seconds, 2, \"0\");\r\n                    break;\r\n                case \"S\":\r\n                case \"SS\":\r\n                case \"SSS\":\r\n                    value = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\r\n                    break;\r\n                case \"x\":\r\n                    value = timestamp.toString();\r\n                    break;\r\n                case \"n\":\r\n                case \"nn\":\r\n                case \"nnn\":\r\n                    value = $utils.padString(milliseconds, info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"z\":\r\n                    value = $utils.getTimeZone(originalDate || date, false, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zz\":\r\n                    value = $utils.getTimeZone(originalDate || date, true, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"zzz\":\r\n                    value = $utils.getTimeZone(originalDate || date, false, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zzzz\":\r\n                    value = $utils.getTimeZone(originalDate || date, true, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"Z\":\r\n                case \"ZZ\":\r\n                    let timezone = this._root.utc ? \"UTC\" : this._root.timezone;\r\n                    if (timezone instanceof Timezone) {\r\n                        timezone = timezone.name;\r\n                    }\r\n                    const offset = timezone ? $utils.getTimezoneOffset(timezone, originalDate || date) : date.getTimezoneOffset();\r\n                    let tz = Math.abs(offset) / 60;\r\n                    let tzh = Math.floor(tz);\r\n                    let tzm = tz * 60 - tzh * 60;\r\n                    if (this._root.utc) {\r\n                        tzh = 0;\r\n                        tzm = 0;\r\n                    }\r\n                    if (info.parts[i] == \"Z\") {\r\n                        value = \"GMT\";\r\n                        value += offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\r\n                    }\r\n                    else {\r\n                        value = offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\r\n                    }\r\n                    break;\r\n                case \"i\":\r\n                    value = date.toISOString();\r\n                    break;\r\n                case \"I\":\r\n                    value = date.toUTCString();\r\n                    break;\r\n            }\r\n            res = res.replace($type.PLACEHOLDER, value);\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Parses format into structured infromation.\r\n     *\r\n     * @param format Format template\r\n     */\r\n    parseFormat(format) {\r\n        // Check cache\r\n        // TODO: implement caching of the parsed format\r\n        // Init format parse info holder\r\n        let info = {\r\n            \"template\": \"\",\r\n            \"parts\": []\r\n        };\r\n        // Let TextFormatter split into chunks\r\n        let chunks = TextFormatter.chunk(format, true);\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            if (chunk.type === \"value\") {\r\n                // Just \"Date\"?\r\n                if (chunk.text.match(/^date$/i)) {\r\n                    let dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n                    if (!$type.isString(dateFormat)) {\r\n                        dateFormat = \"yyyy-MM-dd\";\r\n                    }\r\n                    chunk.text = dateFormat;\r\n                }\r\n                // Find all possible parts\r\n                let matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\r\n                // Found?\r\n                if (matches) {\r\n                    // Populate template\r\n                    for (let x = 0; x < matches.length; x++) {\r\n                        info.parts.push(matches[x]);\r\n                        chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                    }\r\n                }\r\n            }\r\n            // Apply to template\r\n            info.template += chunk.text;\r\n        }\r\n        // Save cache\r\n        // TODO\r\n        return info;\r\n    }\r\n    _months() {\r\n        return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    }\r\n    _getMonth(index) {\r\n        return this._months()[index];\r\n    }\r\n    _shortMonths() {\r\n        return [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    }\r\n    _getShortMonth(index) {\r\n        return this._shortMonths()[index];\r\n    }\r\n    _weekdays() {\r\n        return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    }\r\n    _getWeekday(index) {\r\n        return this._weekdays()[index];\r\n    }\r\n    _shortWeekdays() {\r\n        return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    }\r\n    _getShortWeekday(index) {\r\n        return this._shortWeekdays()[index];\r\n    }\r\n    parse(source, format, utc) {\r\n        // If UTC is not supplied, use Root setting\r\n        if (typeof utc === \"undefined\") {\r\n            utc = this._root.utc;\r\n        }\r\n        // Is it already a Date\r\n        if (source instanceof Date) {\r\n            return source;\r\n        }\r\n        // Is it a numeric timestamp\r\n        if ($type.isNumber(source)) {\r\n            return new Date(source);\r\n        }\r\n        // Are we parsing a timestamp?\r\n        if (format == \"x\") {\r\n            return new Date(parseInt(source));\r\n        }\r\n        // No? Let's check if it's string, and try converting to it if nec\r\n        if (!$type.isString(source)) {\r\n            source = source.toString();\r\n        }\r\n        // Init return value\r\n        let res;\r\n        // Init RegEx for parsing\r\n        let reg = \"\";\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // Clip format to length of the source string\r\n        format = format.substr(0, source.length);\r\n        // Parse format\r\n        let info = this.parseFormat(format);\r\n        // Init parsed items holder\r\n        let parsedIndexes = {\r\n            \"year\": -1,\r\n            \"year3\": -1,\r\n            \"year2\": -1,\r\n            \"year1\": -1,\r\n            \"month\": -1,\r\n            \"monthShort\": -1,\r\n            \"monthLong\": -1,\r\n            \"weekdayShort\": -1,\r\n            \"weekdayLong\": -1,\r\n            \"day\": -1,\r\n            \"yearDay\": -1,\r\n            \"week\": -1,\r\n            \"hourBase0\": -1,\r\n            \"hour12Base0\": -1,\r\n            \"hourBase1\": -1,\r\n            \"hour12Base1\": -1,\r\n            \"minute\": -1,\r\n            \"second\": -1,\r\n            \"millisecond\": -1,\r\n            \"millisecondDigits\": -1,\r\n            \"am\": -1,\r\n            \"zone\": -1,\r\n            \"timestamp\": -1,\r\n            \"iso\": -1\r\n        };\r\n        // Init values\r\n        let resValues = {\r\n            \"year\": 1970,\r\n            \"month\": 0,\r\n            \"day\": 1,\r\n            \"hour\": 0,\r\n            \"minute\": 0,\r\n            \"second\": 0,\r\n            \"millisecond\": 0,\r\n            \"timestamp\": null,\r\n            \"offset\": 0,\r\n            \"utc\": utc\r\n        };\r\n        // Index adjuster\r\n        let indexAdjust = 0;\r\n        let index = 0;\r\n        // Iterate through all of the parts\r\n        for (let i = 0; i < info.parts.length; i++) {\r\n            // Set current match index\r\n            index = i + indexAdjust + 1;\r\n            switch (info.parts[i]) {\r\n                case \"yyyy\":\r\n                case \"YYYY\":\r\n                    reg += \"([0-9]{4})\";\r\n                    parsedIndexes.year = index;\r\n                    break;\r\n                case \"yyy\":\r\n                case \"YYY\":\r\n                    reg += \"([0-9]{3})\";\r\n                    parsedIndexes.year3 = index;\r\n                    break;\r\n                case \"yy\":\r\n                case \"YY\":\r\n                    reg += \"([0-9]{2})\";\r\n                    parsedIndexes.year2 = index;\r\n                    break;\r\n                case \"y\":\r\n                case \"Y\":\r\n                    reg += \"([0-9]{1})\";\r\n                    parsedIndexes.year1 = index;\r\n                    break;\r\n                case \"MMMM\":\r\n                    reg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthLong = index;\r\n                    break;\r\n                case \"MMM\":\r\n                    reg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthShort = index;\r\n                    break;\r\n                case \"MM\":\r\n                case \"M\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.month = index;\r\n                    break;\r\n                case \"ww\":\r\n                case \"w\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.week = index;\r\n                    break;\r\n                case \"dd\":\r\n                case \"d\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.day = index;\r\n                    break;\r\n                case \"DDD\":\r\n                case \"DD\":\r\n                case \"D\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.yearDay = index;\r\n                    break;\r\n                case \"dddd\":\r\n                    reg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayLong = index;\r\n                    break;\r\n                case \"ddd\":\r\n                    reg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayShort = index;\r\n                    break;\r\n                case \"aaa\":\r\n                case \"aa\":\r\n                case \"a\":\r\n                    // TODO: fix (escape regex)\r\n                    reg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\r\n                    parsedIndexes.am = index;\r\n                    break;\r\n                case \"hh\":\r\n                case \"h\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base1 = index;\r\n                    break;\r\n                case \"HH\":\r\n                case \"H\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase0 = index;\r\n                    break;\r\n                case \"KK\":\r\n                case \"K\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base0 = index;\r\n                    break;\r\n                case \"kk\":\r\n                case \"k\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase1 = index;\r\n                    break;\r\n                case \"mm\":\r\n                case \"m\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.minute = index;\r\n                    break;\r\n                case \"ss\":\r\n                case \"s\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.second = index;\r\n                    break;\r\n                case \"SSS\":\r\n                case \"SS\":\r\n                case \"S\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    parsedIndexes.millisecondDigits = info.parts[i].length;\r\n                    break;\r\n                case \"nnn\":\r\n                case \"nn\":\r\n                case \"n\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    break;\r\n                case \"x\":\r\n                    reg += \"([0-9]{1,})\";\r\n                    parsedIndexes.timestamp = index;\r\n                    break;\r\n                case \"Z\":\r\n                    reg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"ZZ\":\r\n                    reg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"i\":\r\n                    reg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\r\n                    parsedIndexes.iso = index;\r\n                    indexAdjust += 7;\r\n                    break;\r\n                case \"G\":\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                case \"MMMMM\":\r\n                case \"W\":\r\n                case \"EEEEE\":\r\n                case \"EEEE\":\r\n                case \"EEE\":\r\n                case \"EE\":\r\n                case \"E\":\r\n                case \"eeeee\":\r\n                case \"eeee\":\r\n                case \"eee\":\r\n                case \"ee\":\r\n                case \"e\":\r\n                case \"zzzz\":\r\n                case \"zzz\":\r\n                case \"zz\":\r\n                case \"z\":\r\n                case \"t\":\r\n                    // Ignore\r\n                    indexAdjust--;\r\n                    break;\r\n            }\r\n            reg += \"[^0-9]*\";\r\n        }\r\n        // Try matching\r\n        let regex = new RegExp(reg);\r\n        let matches = source.match(regex);\r\n        if (matches) {\r\n            // Populate the date object\r\n            // Full year\r\n            if (parsedIndexes.year > -1) {\r\n                resValues.year = parseInt(matches[parsedIndexes.year]);\r\n            }\r\n            // 3-digit year\r\n            if (parsedIndexes.year3 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year3]);\r\n                val += 1000;\r\n                resValues.year = val;\r\n            }\r\n            // 2-digit year\r\n            if (parsedIndexes.year2 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year2]);\r\n                if (val > 50) {\r\n                    val += 1000;\r\n                }\r\n                else {\r\n                    val += 2000;\r\n                }\r\n                resValues.year = val;\r\n            }\r\n            // 1-digit year\r\n            if (parsedIndexes.year1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year1]);\r\n                val = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\r\n                resValues.year = val;\r\n            }\r\n            // Full month\r\n            if (parsedIndexes.monthLong > -1) {\r\n                resValues.month = this.resolveMonth(matches[parsedIndexes.monthLong]);\r\n            }\r\n            // Short month\r\n            if (parsedIndexes.monthShort > -1) {\r\n                resValues.month = this.resolveShortMonth(matches[parsedIndexes.monthShort]);\r\n            }\r\n            // Numeric month\r\n            if (parsedIndexes.month > -1) {\r\n                resValues.month = parseInt(matches[parsedIndexes.month]) - 1;\r\n            }\r\n            // Weekday\r\n            // @todo\r\n            // Week\r\n            if ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\r\n                // We parse weeks ONLY if day is not explicitly set\r\n                // TODO: this needs work\r\n                // (but maybe later - I can hardly imagine anyone passing their dates in weeks)\r\n                resValues.month = 0;\r\n                resValues.day = $utils.getDayFromWeek(parseInt(matches[parsedIndexes.week]), resValues.year, 1, utc);\r\n            }\r\n            // Day\r\n            if (parsedIndexes.day > -1) {\r\n                resValues.day = parseInt(matches[parsedIndexes.day]);\r\n            }\r\n            // Year day\r\n            if (parsedIndexes.yearDay > -1) {\r\n                resValues.month = 0;\r\n                resValues.day = parseInt(matches[parsedIndexes.yearDay]);\r\n            }\r\n            // 24 Hour (0-23)\r\n            if (parsedIndexes.hourBase0 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\r\n            }\r\n            // 24 Hour (1-24)\r\n            if (parsedIndexes.hourBase1 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\r\n            }\r\n            // 12 Hour (0-11)\r\n            if (parsedIndexes.hour12Base0 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base0]);\r\n                if (val == 11) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // 12 Hour (1-12)\r\n            if (parsedIndexes.hour12Base1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base1]);\r\n                if (val == 12) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // Minute\r\n            if (parsedIndexes.minute > -1) {\r\n                resValues.minute = parseInt(matches[parsedIndexes.minute]);\r\n            }\r\n            // Second\r\n            if (parsedIndexes.second > -1) {\r\n                resValues.second = parseInt(matches[parsedIndexes.second]);\r\n            }\r\n            // Millisecond\r\n            if (parsedIndexes.millisecond > -1) {\r\n                let val = parseInt(matches[parsedIndexes.millisecond]);\r\n                if (parsedIndexes.millisecondDigits == 2) {\r\n                    val *= 10;\r\n                }\r\n                else if (parsedIndexes.millisecondDigits == 1) {\r\n                    val *= 100;\r\n                }\r\n                resValues.millisecond = val;\r\n            }\r\n            // Timestamp\r\n            if (parsedIndexes.timestamp > -1) {\r\n                resValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\r\n                const ts = new Date(resValues.timestamp);\r\n                resValues.year = ts.getUTCFullYear();\r\n                resValues.month = ts.getUTCMonth();\r\n                resValues.day = ts.getUTCDate();\r\n                resValues.hour = ts.getUTCHours();\r\n                resValues.minute = ts.getUTCMinutes();\r\n                resValues.second = ts.getUTCSeconds();\r\n                resValues.millisecond = ts.getUTCMilliseconds();\r\n            }\r\n            // Adjust time zone\r\n            if (parsedIndexes.zone > -1) {\r\n                resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\r\n            }\r\n            // ISO\r\n            if (parsedIndexes.iso > -1) {\r\n                resValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\r\n                resValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\r\n                resValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\r\n                resValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\r\n                resValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\r\n                resValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\r\n                resValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\r\n                if (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\r\n                    resValues.utc = true;\r\n                }\r\n                else if (matches[parsedIndexes.iso + 7] != \"\") {\r\n                    resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\r\n                }\r\n            }\r\n            // Create Date object\r\n            if (resValues.utc) {\r\n                res = new Date(Date.UTC(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond));\r\n            }\r\n            else {\r\n                res = new Date(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute + resValues.offset, resValues.second, resValues.millisecond);\r\n            }\r\n        }\r\n        else {\r\n            // Didn't match anything\r\n            // Let's try dropping it into Date constructor and hope for the best\r\n            res = new Date(source);\r\n        }\r\n        return res;\r\n    }\r\n    resolveTimezoneOffset(date, zone) {\r\n        let value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n        if (value) {\r\n            let match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n            let dir = match[1];\r\n            let hour = match[2];\r\n            let minute = match[3];\r\n            let offset = parseInt(hour) * 60 + parseInt(minute);\r\n            // Adjust offset\r\n            // Making it negative does not seem to make sense, but it's right\r\n            // because of how JavaScript calculates GMT offsets\r\n            if (dir == \"+\") {\r\n                offset *= -1;\r\n            }\r\n            // Check the difference in offset\r\n            let originalOffset = (date || new Date()).getTimezoneOffset();\r\n            let diff = offset - originalOffset;\r\n            return diff;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves month name (i.e. \"December\") into a month number (11).\r\n     *\r\n     * @param value  Month name\r\n     * @return Month number\r\n     */\r\n    resolveMonth(value) {\r\n        // Let's try English first\r\n        let month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (!this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._months()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves short month name (i.e. \"Dec\") into a month number.\r\n     *\r\n     * @param value  Short month name\r\n     * @return Month number\r\n     */\r\n    resolveShortMonth(value) {\r\n        // Let's try English first\r\n        let month = this._shortMonths().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Maybe long month (workaround for May)\r\n        month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (this._root.language && !this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._shortMonths()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Checks if passed in string represents AM/PM notation in many of its\r\n     * versions.\r\n     *\r\n     * @param value  Source string\r\n     * @return Is it AM/PM?\r\n     */\r\n    isAm(value) {\r\n        let list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\r\n        return list.indexOf(value.toUpperCase()) > -1;\r\n    }\r\n    /**\r\n     * Translates list of strings.\r\n     *\r\n     * @param list  Source strings\r\n     * @return Translated strings\r\n     */\r\n    getStringList(list) {\r\n        let res = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            // translate?\r\n            if (this._root.language) {\r\n                res.push($utils.escapeForRgex(this._t(list[i])));\r\n            }\r\n            else {\r\n                res.push($utils.escapeForRgex(list[i]));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n", "import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\r\nexport class DurationFormatter extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Collection of aliases for units.\r\n         */\r\n        Object.defineProperty(this, \"_unitAliases\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                \"Y\": \"y\",\r\n                \"D\": \"d\",\r\n                \"H\": \"h\",\r\n                \"K\": \"h\",\r\n                \"k\": \"h\",\r\n                \"n\": \"S\"\r\n            }\r\n        });\r\n    }\r\n    _setDefaults() {\r\n        const dmillisecond = \"_duration_millisecond\";\r\n        const dsecond = \"_duration_second\";\r\n        const dminute = \"_duration_minute\";\r\n        const dhour = \"_duration_hour\";\r\n        const dday = \"_duration_day\";\r\n        const dweek = \"_duration_week\";\r\n        const dmonth = \"_duration_month\";\r\n        const dyear = \"_duration_year\";\r\n        const asecond = \"_second\";\r\n        const aminute = \"_minute\";\r\n        const ahour = \"_hour\";\r\n        const aday = \"_day\";\r\n        const aweek = \"_week\";\r\n        const amonth = \"_week\";\r\n        const ayear = \"_year\";\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"baseUnit\", \"second\");\r\n        this._setDefault(\"durationFormats\", {\r\n            \"millisecond\": {\r\n                \"millisecond\": this._t(dmillisecond),\r\n                \"second\": this._t((dmillisecond + asecond)),\r\n                \"minute\": this._t((dmillisecond + aminute)),\r\n                \"hour\": this._t((dmillisecond + ahour)),\r\n                \"day\": this._t((dmillisecond + aday)),\r\n                \"week\": this._t((dmillisecond + aweek)),\r\n                \"month\": this._t((dmillisecond + amonth)),\r\n                \"year\": this._t((dmillisecond + ayear))\r\n            },\r\n            \"second\": {\r\n                \"second\": this._t((dsecond)),\r\n                \"minute\": this._t((dsecond + aminute)),\r\n                \"hour\": this._t((dsecond + ahour)),\r\n                \"day\": this._t((dsecond + aday)),\r\n                \"week\": this._t((dsecond + aweek)),\r\n                \"month\": this._t((dsecond + amonth)),\r\n                \"year\": this._t((dsecond + ayear))\r\n            },\r\n            \"minute\": {\r\n                \"minute\": this._t((dminute)),\r\n                \"hour\": this._t((dminute + ahour)),\r\n                \"day\": this._t((dminute + aday)),\r\n                \"week\": this._t((dminute + aweek)),\r\n                \"month\": this._t((dminute + amonth)),\r\n                \"year\": this._t((dminute + ayear))\r\n            },\r\n            \"hour\": {\r\n                \"hour\": this._t((dhour)),\r\n                \"day\": this._t((dhour + aday)),\r\n                \"week\": this._t((dhour + aweek)),\r\n                \"month\": this._t((dhour + amonth)),\r\n                \"year\": this._t((dhour + ayear))\r\n            },\r\n            \"day\": {\r\n                \"day\": this._t((dday)),\r\n                \"week\": this._t((dday + aweek)),\r\n                \"month\": this._t((dday + amonth)),\r\n                \"year\": this._t((dday + ayear))\r\n            },\r\n            \"week\": {\r\n                \"week\": this._t((dweek)),\r\n                \"month\": this._t((dweek + amonth)),\r\n                \"year\": this._t((dweek + ayear))\r\n            },\r\n            \"month\": {\r\n                \"month\": this._t((dmonth)),\r\n                \"year\": this._t((dmonth + ayear))\r\n            },\r\n            \"year\": {\r\n                \"year\": this._t(dyear)\r\n            }\r\n        });\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number as duration.\r\n     *\r\n     * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n     * 16 minutes and 40 seconds.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @param base    Override base unit\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, base) {\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // no format passed in or empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            if (this.get(\"durationFormat\") != null) {\r\n                format = this.get(\"durationFormat\");\r\n            }\r\n            else {\r\n                format = this.getFormat($type.toNumber(value), undefined, baseUnit);\r\n            }\r\n        }\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format, baseUnit);\r\n        // cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // format and replace the number\r\n        let details;\r\n        if (source > this.get(\"negativeBase\")) {\r\n            details = info.positive;\r\n        }\r\n        else if (source < this.get(\"negativeBase\")) {\r\n            details = info.negative;\r\n        }\r\n        else {\r\n            details = info.zero;\r\n        }\r\n        // Format\r\n        let formatted = this.applyFormat(source, details);\r\n        // Apply color?\r\n        if (details.color !== \"\") {\r\n            formatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format  Format string, i.e. \"#,###.00\"\r\n     * @param base    Override base unit\r\n     * @return Parsed information\r\n     */\r\n    parseFormat(format, base) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // Initialize duration parsing info\r\n        let info = {\r\n            \"positive\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"negative\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"zero\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Check for [] directives\r\n            let dirs = [];\r\n            dirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n            if (dirs && dirs.length && dirs[0] !== \"\") {\r\n                partFormat = item.source.substr(dirs[0].length);\r\n                item.color = dirs[1];\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Just \"Duration\"?\r\n                    // if (chunk.text.toLowerCase() === \"duration\") {\r\n                    // \tchunk.text = durationFormat;\r\n                    // }\r\n                    // Check for \"a\" (absolute) modifier\r\n                    if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n                        item.absolute = true;\r\n                        chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n                    }\r\n                    // Find all possible parts\r\n                    let matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n                    if (matches) {\r\n                        // Populate template\r\n                        for (let x = 0; x < matches.length; x++) {\r\n                            // Is it an alias?\r\n                            if (matches[x] == null) {\r\n                                matches[x] = this._unitAliases[matches[x]];\r\n                            }\r\n                            item.parts.push(matches[x]);\r\n                            chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                // Apply to template\r\n                item.template += chunk.text;\r\n            }\r\n            // Apply style formatting\r\n            //item.template = TextFormatter.format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by {parseFormat}\r\n     * @return Formatted duration\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = !details.absolute && (value < this.get(\"negativeBase\"));\r\n        value = Math.abs(value);\r\n        // Recalculate to milliseconds\r\n        let tstamp = this.toTimeStamp(value, details.baseUnit);\r\n        // Init return value\r\n        let res = details.template;\r\n        const values = {\r\n            millisecond: 0,\r\n            second: 0,\r\n            minute: 0,\r\n            hour: 0,\r\n            day: 0,\r\n            week: 0,\r\n            month: 0,\r\n            year: 0\r\n        };\r\n        // Iterate through duration parts\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            // Calculate current unit value\r\n            let ints;\r\n            const unitValue = this._getUnitValue(unit);\r\n            if (i < (len - 1)) {\r\n                ints = Math.floor(tstamp / unitValue);\r\n            }\r\n            else {\r\n                ints = Math.round(tstamp / unitValue);\r\n            }\r\n            values[unit] += ints;\r\n            // Reduce timestamp\r\n            tstamp -= ints * unitValue;\r\n        }\r\n        // Check if we have full unit that we need to bump up to higher unit\r\n        $object.each(values, (unit, value) => {\r\n            if (unit == \"millisecond\" && value == 1000) {\r\n                values[\"second\"]++;\r\n                values[\"millisecond\"] = 0;\r\n            }\r\n            else if (unit == \"second\" && value == 60) {\r\n                values[\"minute\"]++;\r\n                values[\"second\"] = 0;\r\n            }\r\n            else if (unit == \"minute\" && value == 60) {\r\n                values[\"hour\"]++;\r\n                values[\"minute\"] = 0;\r\n            }\r\n            else if (unit == \"hour\" && value == 24) {\r\n                values[\"day\"]++;\r\n                values[\"hour\"] = 0;\r\n            }\r\n            else if (unit == \"day\" && value == 7) {\r\n                values[\"week\"]++;\r\n                values[\"day\"] = 0;\r\n            }\r\n            else if (unit == \"day\" && value == 30) {\r\n                values[\"month\"]++;\r\n                values[\"day\"] = 0;\r\n            }\r\n            else if (unit == \"month\" && value == 12) {\r\n                values[\"year\"]++;\r\n                values[\"month\"] = 0;\r\n            }\r\n            // if (val > 0) {\r\n            // \tres = res.replace($type.PLACEHOLDER, $utils.padString(val, 2, \"0\"));\r\n            // }\r\n            // else {\r\n            // \tres = res.replace($type.PLACEHOLDER, \"\");\r\n            // }\r\n        });\r\n        // Iterate again\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            let digits = part.length;\r\n            // Calculate current unit value\r\n            res = res.replace($type.PLACEHOLDER, $utils.padString(values[unit], digits, \"0\"));\r\n        }\r\n        // Reapply negative sign\r\n        if (negative) {\r\n            res = \"-\" + res;\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Converts numeric value to timestamp in milliseconds.\r\n     *\r\n     * @param value     A source value\r\n     * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n     * @return Value representation as a timestamp in milliseconds\r\n     */\r\n    toTimeStamp(value, baseUnit) {\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _toTimeUnit(code) {\r\n        switch (code) {\r\n            case \"S\":\r\n                return \"millisecond\";\r\n            case \"s\":\r\n                return \"second\";\r\n            case \"m\":\r\n                return \"minute\";\r\n            case \"h\":\r\n                return \"hour\";\r\n            case \"d\":\r\n                return \"day\";\r\n            case \"w\":\r\n                return \"week\";\r\n            case \"M\":\r\n                return \"month\";\r\n            case \"y\":\r\n                return \"year\";\r\n        }\r\n        ;\r\n    }\r\n    /**\r\n     * Returns appropriate default format for the value.\r\n     *\r\n     * If `maxValue` is sepcified, it will use that value to determine the time\r\n     * unit for the format.\r\n     *\r\n     * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n     * will get `\"10\"`.\r\n     *\r\n     * However, you might want it to be formatted in the context of bigger scale,\r\n     * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n     * values, including small ones will use format with minutes, e.g.:\r\n     * `00:10`, `00:50`, `12: 30`, etc.\r\n     *\r\n     * @param value     Value to format\r\n     * @param maxValue  Maximum value to be used to determine format\r\n     * @param baseUnit  Base unit of the value\r\n     * @return Format\r\n     */\r\n    getFormat(value, maxValue, baseUnit) {\r\n        // Is format override set?\r\n        if (this.get(\"durationFormat\") != null) {\r\n            return this.get(\"durationFormat\");\r\n        }\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        if (maxValue != null && value != maxValue) {\r\n            value = Math.abs(value);\r\n            maxValue = Math.abs(maxValue);\r\n            let maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][maxUnit];\r\n        }\r\n        else {\r\n            let unit = this.getValueUnit(value, baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][unit];\r\n        }\r\n    }\r\n    /**\r\n     * Returns value's closest denominator time unit, e.g 100 seconds is\r\n     * `\"minute\"`, while 59 seconds would still be `second`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Denominator\r\n     */\r\n    getValueUnit(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        // Convert to milliseconds\r\n        let currentUnit;\r\n        let ms = this.getMilliseconds(value, baseUnit);\r\n        $object.eachContinue(this._getUnitValues(), (key, val) => {\r\n            if (key == baseUnit || currentUnit) {\r\n                let num = ms / val;\r\n                if (num <= 1) {\r\n                    if (!currentUnit) {\r\n                        currentUnit = key;\r\n                    }\r\n                    return false;\r\n                }\r\n                currentUnit = key;\r\n            }\r\n            return true;\r\n        });\r\n        return currentUnit;\r\n    }\r\n    /**\r\n     * Converts value to milliseconds according to `baseUnit`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Value in milliseconds\r\n     */\r\n    getMilliseconds(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _getUnitValue(timeUnit) {\r\n        return this._getUnitValues()[timeUnit];\r\n    }\r\n    _getUnitValues() {\r\n        return {\r\n            \"millisecond\": 1,\r\n            \"second\": 1000,\r\n            \"minute\": 60000,\r\n            \"hour\": 3600000,\r\n            \"day\": 86400000,\r\n            \"week\": 604800000,\r\n            \"month\": 2592000000,\r\n            \"year\": 31536000000,\r\n        };\r\n    }\r\n}\r\n", "/**\r\n * amCharts 5 locale\r\n *\r\n * Locale: en\r\n * Language: International English\r\n * Author: Martynas Majeris\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\r\n *\r\n * ---\r\n * Edit but leave the header section above this line. You can remove any\r\n * subsequent comment sections.\r\n * ---\r\n *\r\n * Use this file as a template to create translations. Leave the key part in\r\n * English intact. Fill the value with a translation.\r\n *\r\n * Empty string means no translation, so default \"International English\"\r\n * will be used.\r\n *\r\n * If you need the translation to literally be an empty string, use `null`\r\n * instead.\r\n *\r\n * IMPORTANT:\r\n * When translating make good effort to keep the translation length\r\n * at least the same chartcount as the English, especially for short prompts.\r\n *\r\n * Having significantly longer prompts may distort the actual charts.\r\n *\r\n * NOTE:\r\n * Some prompts - like months or weekdays - come in two versions: full and\r\n * shortened.\r\n *\r\n * If there's no official shortened version of these in your language, and it\r\n * would not be possible to invent such short versions that don't seem weird\r\n * to native speakers of that language, fill those with the same as full\r\n * version.\r\n *\r\n * PLACEHOLDERS:\r\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\r\n * values during translation and should be retained in the translated prompts.\r\n *\r\n * Placeholder positions may be changed to better suit structure of the\r\n * sentence.\r\n *\r\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\r\n * actual value representing range start, and \"%2\" will be replaced by end\r\n * value.\r\n *\r\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\r\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\r\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\r\n * places where they will make sense.\r\n *\r\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\r\n */\r\nexport default {\r\n    \"firstDayOfWeek\": 1,\r\n    // Number formatting options.\r\n    // \r\n    // Please check with the local standards which separator is accepted to be\r\n    // used for separating decimals, and which for thousands.\r\n    \"_decimalSeparator\": \".\",\r\n    \"_thousandSeparator\": \",\",\r\n    // Position of the percent sign in numbers\r\n    \"_percentPrefix\": null,\r\n    \"_percentSuffix\": \"%\",\r\n    // Suffixes for numbers\r\n    // When formatting numbers, big or small numers might be reformatted to\r\n    // shorter version, by applying a suffix.\r\n    // \r\n    // For example, 1000000 might become \"1m\".\r\n    // Or 1024 might become \"1KB\" if we're formatting byte numbers.\r\n    // \r\n    // This section defines such suffixes for all such cases.\r\n    \"_big_number_suffix_3\": \"k\",\r\n    \"_big_number_suffix_6\": \"M\",\r\n    \"_big_number_suffix_9\": \"G\",\r\n    \"_big_number_suffix_12\": \"T\",\r\n    \"_big_number_suffix_15\": \"P\",\r\n    \"_big_number_suffix_18\": \"E\",\r\n    \"_big_number_suffix_21\": \"Z\",\r\n    \"_big_number_suffix_24\": \"Y\",\r\n    \"_small_number_suffix_3\": \"m\",\r\n    \"_small_number_suffix_6\": \"μ\",\r\n    \"_small_number_suffix_9\": \"n\",\r\n    \"_small_number_suffix_12\": \"p\",\r\n    \"_small_number_suffix_15\": \"f\",\r\n    \"_small_number_suffix_18\": \"a\",\r\n    \"_small_number_suffix_21\": \"z\",\r\n    \"_small_number_suffix_24\": \"y\",\r\n    \"_byte_suffix_B\": \"B\",\r\n    \"_byte_suffix_KB\": \"KB\",\r\n    \"_byte_suffix_MB\": \"MB\",\r\n    \"_byte_suffix_GB\": \"GB\",\r\n    \"_byte_suffix_TB\": \"TB\",\r\n    \"_byte_suffix_PB\": \"PB\",\r\n    // Default date formats for various periods.\r\n    // \r\n    // This should reflect official or de facto formatting universally accepted\r\n    // in the country translation is being made for\r\n    // Available format codes here:\r\n    // https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\r\n    // \r\n    // This will be used when formatting date/time for particular granularity,\r\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\r\n    // \r\n    // \"date\" is used as in default date format when showing standalone dates.\r\n    \"_date\": \"yyyy-MM-dd\",\r\n    \"_date_millisecond\": \"mm:ss SSS\",\r\n    \"_date_millisecond_full\": \"HH:mm:ss SSS\",\r\n    \"_date_second\": \"HH:mm:ss\",\r\n    \"_date_second_full\": \"HH:mm:ss\",\r\n    \"_date_minute\": \"HH:mm\",\r\n    \"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_hour\": \"HH:mm\",\r\n    \"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_day\": \"MMM dd\",\r\n    \"_date_day_full\": \"MMM dd, yyyy\",\r\n    \"_date_week\": \"ww\",\r\n    \"_date_week_full\": \"MMM dd, yyyy\",\r\n    \"_date_month\": \"MMM\",\r\n    \"_date_month_full\": \"MMM, yyyy\",\r\n    \"_date_year\": \"yyyy\",\r\n    // Default duration formats for various base units.\r\n    // \r\n    // This will be used by DurationFormatter to format numeric values into\r\n    // duration.\r\n    // \r\n    // Notice how each duration unit comes in several versions. This is to ensure\r\n    // that each base unit is shown correctly.\r\n    // \r\n    // For example, if we have baseUnit set to \"second\", meaning our duration is\r\n    // in seconds.\r\n    // \r\n    // If we pass in `50` to formatter, it will know that we have just 50 seconds\r\n    // (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\r\n    // and the formatted result will be in like `\"50\"`.\r\n    // \r\n    // If we pass in `70`, which is more than a minute, the formatter will switch\r\n    // to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\r\n    // text.\r\n    // \r\n    // Available codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\r\n    \"_duration_millisecond\": \"SSS\",\r\n    \"_duration_millisecond_second\": \"ss.SSS\",\r\n    \"_duration_millisecond_minute\": \"mm:ss SSS\",\r\n    \"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\r\n    \"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\r\n    \"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\r\n    \"_duration_second\": \"ss\",\r\n    \"_duration_second_minute\": \"mm:ss\",\r\n    \"_duration_second_hour\": \"hh:mm:ss\",\r\n    \"_duration_second_day\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_week\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\r\n    \"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\r\n    \"_duration_minute\": \"mm\",\r\n    \"_duration_minute_hour\": \"hh:mm\",\r\n    \"_duration_minute_day\": \"d'd' hh:mm\",\r\n    \"_duration_minute_week\": \"d'd' hh:mm\",\r\n    \"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\r\n    \"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\r\n    \"_duration_hour\": \"hh'h'\",\r\n    \"_duration_hour_day\": \"d'd' hh'h'\",\r\n    \"_duration_hour_week\": \"d'd' hh'h'\",\r\n    \"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\r\n    \"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\r\n    \"_duration_day\": \"d'd'\",\r\n    \"_duration_day_week\": \"d'd'\",\r\n    \"_duration_day_month\": \"M'm' dd'd'\",\r\n    \"_duration_day_year\": \"y'y' MM'm' dd'd'\",\r\n    \"_duration_week\": \"w'w'\",\r\n    \"_duration_week_month\": \"w'w'\",\r\n    \"_duration_week_year\": \"w'w'\",\r\n    \"_duration_month\": \"M'm'\",\r\n    \"_duration_month_year\": \"y'y' MM'm'\",\r\n    \"_duration_year\": \"y'y'\",\r\n    // Era translations\r\n    \"_era_ad\": \"AD\",\r\n    \"_era_bc\": \"BC\",\r\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\r\n    // Please note that these come in 3 variants:\r\n    // * one letter (e.g. \"A\")\r\n    // * two letters (e.g. \"AM\")\r\n    // * two letters with dots (e.g. \"A.M.\")\r\n    // \r\n    // All three need to to be translated even if they are all the same. Some\r\n    // users might use one, some the other.\r\n    \"A\": \"\",\r\n    \"P\": \"\",\r\n    \"AM\": \"\",\r\n    \"PM\": \"\",\r\n    \"A.M.\": \"\",\r\n    \"P.M.\": \"\",\r\n    // Date-related stuff.\r\n    // \r\n    // When translating months, if there's a difference, use the form which is\r\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\r\n    // \r\n    // Note that May is listed twice. This is because in English May is the same\r\n    // in both long and short forms, while in other languages it may not be the\r\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\r\n    // version.\r\n    // \r\n    // Should month names and weekdays be capitalized or not?\r\n    // \r\n    // Rule of thumb is this: if the names should always be capitalized,\r\n    // regardless of name position within date (\"January\", \"21st January 2018\",\r\n    // etc.) use capitalized names. Otherwise enter all lowercase.\r\n    // \r\n    // The date formatter will automatically capitalize names if they are the\r\n    // first (or only) word in resulting date.\r\n    \"January\": \"\",\r\n    \"February\": \"\",\r\n    \"March\": \"\",\r\n    \"April\": \"\",\r\n    \"May\": \"\",\r\n    \"June\": \"\",\r\n    \"July\": \"\",\r\n    \"August\": \"\",\r\n    \"September\": \"\",\r\n    \"October\": \"\",\r\n    \"November\": \"\",\r\n    \"December\": \"\",\r\n    \"Jan\": \"\",\r\n    \"Feb\": \"\",\r\n    \"Mar\": \"\",\r\n    \"Apr\": \"\",\r\n    \"May(short)\": \"May\",\r\n    \"Jun\": \"\",\r\n    \"Jul\": \"\",\r\n    \"Aug\": \"\",\r\n    \"Sep\": \"\",\r\n    \"Oct\": \"\",\r\n    \"Nov\": \"\",\r\n    \"Dec\": \"\",\r\n    // Weekdays.\r\n    \"Sunday\": \"\",\r\n    \"Monday\": \"\",\r\n    \"Tuesday\": \"\",\r\n    \"Wednesday\": \"\",\r\n    \"Thursday\": \"\",\r\n    \"Friday\": \"\",\r\n    \"Saturday\": \"\",\r\n    \"Sun\": \"\",\r\n    \"Mon\": \"\",\r\n    \"Tue\": \"\",\r\n    \"Wed\": \"\",\r\n    \"Thu\": \"\",\r\n    \"Fri\": \"\",\r\n    \"Sat\": \"\",\r\n    // Date ordinal function.\r\n    // \r\n    // This is used when adding number ordinal when formatting days in dates.\r\n    // \r\n    // E.g. \"January 1st\", \"February 2nd\".\r\n    // \r\n    // The function accepts day number, and returns a string to be added to the\r\n    // day, like in default English translation, if we pass in 2, we will receive\r\n    // \"nd\" back.\r\n    \"_dateOrd\": function (day) {\r\n        let res = \"th\";\r\n        if ((day < 11) || (day > 13)) {\r\n            switch (day % 10) {\r\n                case 1:\r\n                    res = \"st\";\r\n                    break;\r\n                case 2:\r\n                    res = \"nd\";\r\n                    break;\r\n                case 3:\r\n                    res = \"rd\";\r\n                    break;\r\n            }\r\n        }\r\n        return res;\r\n    },\r\n    // Various chart controls.\r\n    // Shown as a tooltip on zoom out button.\r\n    \"Zoom Out\": \"\",\r\n    // Timeline buttons\r\n    \"Play\": \"\",\r\n    \"Stop\": \"\",\r\n    // Chart's Legend screen reader title.\r\n    \"Legend\": \"\",\r\n    // Legend's item screen reader indicator.\r\n    \"Press ENTER to toggle\": \"\",\r\n    // Shown when the chart is busy loading something.\r\n    \"Loading\": \"\",\r\n    // Shown as the first button in the breadcrumb navigation, e.g.:\r\n    // Home > First level > ...\r\n    \"Home\": \"\",\r\n    // Chart types.\r\n    // Those are used as default screen reader titles for the main chart element\r\n    // unless developer has set some more descriptive title.\r\n    \"Chart\": \"\",\r\n    \"Serial chart\": \"\",\r\n    \"X/Y chart\": \"\",\r\n    \"Pie chart\": \"\",\r\n    \"Gauge chart\": \"\",\r\n    \"Radar chart\": \"\",\r\n    \"Sankey diagram\": \"\",\r\n    \"Flow diagram\": \"\",\r\n    \"Chord diagram\": \"\",\r\n    \"TreeMap chart\": \"\",\r\n    \"Force directed tree\": \"\",\r\n    \"Sliced chart\": \"\",\r\n    // Series types.\r\n    // Used to name series by type for screen readers if they do not have their\r\n    // name set.\r\n    \"Series\": \"\",\r\n    \"Candlestick Series\": \"\",\r\n    \"OHLC Series\": \"\",\r\n    \"Column Series\": \"\",\r\n    \"Line Series\": \"\",\r\n    \"Pie Slice Series\": \"\",\r\n    \"Funnel Series\": \"\",\r\n    \"Pyramid Series\": \"\",\r\n    \"X/Y Series\": \"\",\r\n    // Map-related stuff.\r\n    \"Map\": \"\",\r\n    \"Press ENTER to zoom in\": \"\",\r\n    \"Press ENTER to zoom out\": \"\",\r\n    \"Use arrow keys to zoom in and out\": \"\",\r\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\r\n    // Export-related stuff.\r\n    // These prompts are used in Export menu labels.\r\n    // \r\n    // \"Export\" is the top-level menu item.\r\n    // \r\n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\r\n    // operation.\r\n    // \r\n    // Leave actual format untranslated, unless you absolutely know that they\r\n    // would convey more meaning in some other way.\r\n    \"Export\": \"\",\r\n    \"Image\": \"\",\r\n    \"Data\": \"\",\r\n    \"Print\": \"\",\r\n    \"Press ENTER or use arrow keys to navigate\": \"\",\r\n    \"Press ENTER to open\": \"\",\r\n    \"Press ENTER to print.\": \"\",\r\n    \"Press ENTER to export as %1.\": \"\",\r\n    \"(Press ESC to close this message)\": \"\",\r\n    \"Image Export Complete\": \"\",\r\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"\",\r\n    \"Saved from\": \"\",\r\n    \"PNG\": \"\",\r\n    \"JPG\": \"\",\r\n    \"GIF\": \"\",\r\n    \"SVG\": \"\",\r\n    \"PDF\": \"\",\r\n    \"JSON\": \"\",\r\n    \"CSV\": \"\",\r\n    \"XLSX\": \"\",\r\n    \"HTML\": \"\",\r\n    // Scrollbar-related stuff.\r\n    // \r\n    // Scrollbar is a control which can zoom and pan the axes on the chart.\r\n    // \r\n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\r\n    // upper and lower (for vertical one).\r\n    // \r\n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\r\n    // \r\n    // The final section is used to indicate the current range of selection.\r\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\r\n    \"Use left and right arrows to move selection\": \"\",\r\n    \"Use left and right arrows to move left selection\": \"\",\r\n    \"Use left and right arrows to move right selection\": \"\",\r\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\r\n    \"Use up and down arrows to move selection\": \"\",\r\n    \"Use up and down arrows to move lower selection\": \"\",\r\n    \"Use up and down arrows to move upper selection\": \"\",\r\n    \"From %1 to %2\": \"\",\r\n    \"From %1\": \"\",\r\n    \"To %1\": \"\",\r\n    // Data loader-related.\r\n    \"No parser available for file: %1\": \"\",\r\n    \"Error parsing file: %1\": \"\",\r\n    \"Unable to load file: %1\": \"\",\r\n    \"Invalid date\": \"\",\r\n    // Common actions\r\n    \"Close\": \"\",\r\n    \"Minimize\": \"\"\r\n};\r\n", "import { Entity } from \"./Entity\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport en from \"../../../locales/en\";\r\n;\r\n/**\r\n * Add localization functionality.\r\n */\r\nexport class Language extends Entity {\r\n    _setDefaults() {\r\n        this.setPrivate(\"defaultLocale\", en);\r\n        super._setDefaults();\r\n    }\r\n    /**\r\n     * Returns a prompt translation.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translate(prompt, locale, ...rest) {\r\n        // Get langauge\r\n        if (!locale) {\r\n            locale = this._root.locale || this.getPrivate(\"defaultLocale\");\r\n        }\r\n        // Init translation\r\n        let translation = prompt;\r\n        let value = locale[prompt];\r\n        // Try to look for the translation\r\n        if (value === null) {\r\n            translation = \"\";\r\n        }\r\n        else if (value != null) {\r\n            // It might be an empty string\r\n            if (value) {\r\n                translation = value;\r\n            }\r\n        }\r\n        else if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            // Try to look in default language\r\n            return this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\r\n        }\r\n        // Replace %1, %2, etc params\r\n        if (rest.length) {\r\n            for (let len = rest.length, i = 0; i < len; ++i) {\r\n                translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n            }\r\n        }\r\n        // Return the translation\r\n        return translation;\r\n    }\r\n    /**\r\n     * Returns a prompt translation, including custom prompts.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translateAny(prompt, locale, ...rest) {\r\n        return this.translate(prompt, locale, ...rest);\r\n    }\r\n    /**\r\n     * Add a custom prompt to locale.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  prompt       Source prompt\r\n     * @param  translation  Tanslation\r\n     * @param  locale       Target locale\r\n     */\r\n    setTranslationAny(prompt, translation, locale) {\r\n        const localeTarget = locale || this._root.locale;\r\n        localeTarget[prompt] = translation;\r\n    }\r\n    /**\r\n     * Add a batch of custom prompts.\r\n     *\r\n     * @since 5.3.3\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  translations  Translations\r\n     * @param  locale        Target locale\r\n     */\r\n    setTranslationsAny(translations, locale) {\r\n        $object.each(translations, (key, val) => {\r\n            this.setTranslationAny(key, val, locale);\r\n        });\r\n    }\r\n    translateEmpty(prompt, locale, ...rest) {\r\n        let translation = this.translate(prompt, locale, ...rest);\r\n        return translation == prompt ? \"\" : translation;\r\n    }\r\n    translateFunc(prompt, locale) {\r\n        if (this._root.locale[prompt]) {\r\n            return this._root.locale[prompt];\r\n        }\r\n        // Try to look in default language\r\n        if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            return this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\r\n        }\r\n        // Fail - return empty function\r\n        return () => {\r\n            return \"\";\r\n        };\r\n    }\r\n    /**\r\n     * Translates a btach of prompts.\r\n     *\r\n     * @param  list    Array of prompts to translate\r\n     * @param  locale  Target locale\r\n     * @return         Array of translations\r\n     */\r\n    translateAll(list, locale) {\r\n        // Translate all items in the list\r\n        if (!this.isDefault()) {\r\n            return $array.map(list, (x) => this.translate(x, locale));\r\n        }\r\n        else {\r\n            return list;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the currently selected locale is a default locale.\r\n     *\r\n     * @return `true` if locale is default; `false` if it is not.\r\n     */\r\n    isDefault() {\r\n        return this.getPrivate(\"defaultLocale\") === this._root.locale;\r\n    }\r\n}\r\n", "/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n/**\r\n * @ignore\r\n */\r\nexport class Matrix {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        Object.defineProperty(this, \"a\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"b\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"c\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"d\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n    }\r\n    /**\r\n     * Sets the matrix based on all the available properties\r\n     */\r\n    setTransform(x, y, pivotX, pivotY, rotation, scale = 1) {\r\n        this.a = Math.cos(rotation) * scale;\r\n        this.b = Math.sin(rotation) * scale;\r\n        this.c = -Math.sin(rotation) * scale;\r\n        this.d = Math.cos(rotation) * scale;\r\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\r\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\r\n    }\r\n    /**\r\n     * Get a new position with the current transformation applied.\r\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n     */\r\n    apply(origin) {\r\n        return {\r\n            x: (this.a * origin.x) + (this.c * origin.y) + this.tx,\r\n            y: (this.b * origin.x) + (this.d * origin.y) + this.ty\r\n        };\r\n    }\r\n    /**\r\n     * Get a new position with the inverse of the current transformation applied.\r\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n     */\r\n    applyInverse(origin) {\r\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\r\n        return {\r\n            x: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\r\n            y: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\r\n        };\r\n    }\r\n    /**\r\n     * Appends the given Matrix to this Matrix.\r\n     */\r\n    append(matrix) {\r\n        const a1 = this.a;\r\n        const b1 = this.b;\r\n        const c1 = this.c;\r\n        const d1 = this.d;\r\n        this.a = (matrix.a * a1) + (matrix.b * c1);\r\n        this.b = (matrix.a * b1) + (matrix.b * d1);\r\n        this.c = (matrix.c * a1) + (matrix.d * c1);\r\n        this.d = (matrix.c * b1) + (matrix.d * d1);\r\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\r\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\r\n    }\r\n    /**\r\n     * Prepends the given Matrix to this Matrix.\r\n     */\r\n    prepend(matrix) {\r\n        const tx1 = this.tx;\r\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\r\n            const a1 = this.a;\r\n            const c1 = this.c;\r\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\r\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\r\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\r\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\r\n        }\r\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\r\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\r\n    }\r\n    /**\r\n     * Copies the other matrix's properties into this matrix\r\n     */\r\n    copyFrom(matrix) {\r\n        this.a = matrix.a;\r\n        this.b = matrix.b;\r\n        this.c = matrix.c;\r\n        this.d = matrix.d;\r\n        this.tx = matrix.tx;\r\n        this.ty = matrix.ty;\r\n    }\r\n}\r\n", "var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n\n  var dot = ux * vx + uy * vy;\n\n  if (dot > 1) {\n    dot = 1;\n  }\n\n  if (dot < -1) {\n    dot = -1;\n  }\n\n  return sign * Math.acos(dot);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n\n  var segments = Math.max(Math.ceil(ratio), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexport default arcToBezier;", "/** @ignore */ /** */\r\nimport { BlendMode } from \"./Renderer\";\r\nimport { Color } from \"../../util/Color\";\r\nimport { Matrix } from \"../../util/Matrix\";\r\nimport { Percent, percent } from \"../../util/Percent\";\r\n//import { Throttler } from \"../../util/Throttler\";\r\nimport { ArrayDisposer, Disposer, DisposerClass, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\r\nimport { TextFormatter } from \"../../util/TextFormatter\";\r\nimport * as $utils from \"../../util/Utils\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $object from \"../../util/Object\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $math from \"../../util/Math\";\r\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\r\n/**\r\n * @ignore\r\n */\r\nfunction checkArgs(name, actual, expected) {\r\n    if (actual !== expected) {\r\n        throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkMinArgs(name, actual, expected) {\r\n    if (actual < expected) {\r\n        throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkEvenArgs(name, actual, expected) {\r\n    checkMinArgs(name, actual, expected);\r\n    if ((actual % expected) !== 0) {\r\n        throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n * This splits the flag so that way 0017 will be processed as 0 0 17\r\n *\r\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\r\n */\r\nfunction splitArcFlags(args) {\r\n    for (let i = 0; i < args.length; i += 7) {\r\n        let index = i + 3;\r\n        let flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])([01])(.*)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args.splice(index, 0, a[2]);\r\n                ++index;\r\n                if (a[3].length > 0) {\r\n                    args[index] = a[3];\r\n                }\r\n                else {\r\n                    args.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n        ++index;\r\n        flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])(.+)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args[index] = a[2];\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction assertBinary(value) {\r\n    if (value === 0 || value === 1) {\r\n        return value;\r\n    }\r\n    else {\r\n        throw new Error(\"Flag must be 0 or 1\");\r\n    }\r\n}\r\n//  1 -> 0xffffff * (2 / 2)\r\n//  2 -> 0xffffff * (1 / 2)\r\n//\r\n//  3 -> 0xffffff * (3 / 4)\r\n//  4 -> 0xffffff * (1 / 4)\r\n//\r\n//  5 -> 0xffffff * (7 / 8)\r\n//  6 -> 0xffffff * (5 / 8)\r\n//  7 -> 0xffffff * (3 / 8)\r\n//  8 -> 0xffffff * (1 / 8)\r\n//\r\n//  9 -> 0xffffff * (15 / 16)\r\n// 10 -> 0xffffff * (13 / 16)\r\n// 11 -> 0xffffff * (11 / 16)\r\n// 12 -> 0xffffff *  (9 / 16)\r\n// 13 -> 0xffffff *  (7 / 16)\r\n// 14 -> 0xffffff *  (5 / 16)\r\n// 15 -> 0xffffff *  (3 / 16)\r\n// 16 -> 0xffffff *  (1 / 16)\r\n// @todo remove this old color distribution algo if the new one pans out\r\n/*function distributeId(id: number): number {\r\n    if (id === 1) {\r\n        return 0x000001;\r\n\r\n    } else {\r\n        // Finds the closest power of 2\r\n        const base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\r\n\r\n        // Translates the id into an odd fraction index\r\n        const index = ((base - id) * 2) + 1;\r\n\r\n        // TODO is Math.round correct ?\r\n        return Math.round(0xffffff * (index / base));\r\n    }\r\n}*/\r\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\r\nfunction distributeId(id) {\r\n    const rgb = [0, 0, 0];\r\n    for (let i = 0; i < 24; i++) {\r\n        rgb[i % 3] <<= 1;\r\n        rgb[i % 3] |= id & 0x01;\r\n        id >>= 1;\r\n    }\r\n    return (rgb[0] | 0) + (rgb[1] << 8) + (rgb[2] << 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction eachTargets(hitTarget, f) {\r\n    for (;;) {\r\n        if (hitTarget.interactive) {\r\n            if (!f(hitTarget)) {\r\n                break;\r\n            }\r\n        }\r\n        if (hitTarget._parent) {\r\n            hitTarget = hitTarget._parent;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n}\r\n// TODO feature detection for mouse/touch/pointer\r\n/**\r\n * @ignore\r\n */\r\nfunction onPointerEvent(element, name, f) {\r\n    return $utils.addEventListener(element, $utils.getRendererEvent(name), (event) => {\r\n        const target = $utils.getEventTarget(event);\r\n        let touches = event.touches;\r\n        if (touches) {\r\n            if (touches.length == 0) {\r\n                touches = event.changedTouches;\r\n            }\r\n            f($array.copy(touches), target);\r\n        }\r\n        else {\r\n            f([event], target);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction isTainted(image) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    const context = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n    context.drawImage(image, 0, 0, 1, 1);\r\n    try {\r\n        context.getImageData(0, 0, 1, 1);\r\n        return false;\r\n    }\r\n    catch (err) {\r\n        console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\r\n *\r\n * @ignore\r\n */\r\nfunction clearCanvas(view) {\r\n    view.width = 0;\r\n    view.height = 0;\r\n    view.style.width = \"0px\";\r\n    view.style.height = \"0px\";\r\n}\r\n/**\r\n * Aligns the coordinate to the pixel, so it renders crisp\r\n *\r\n * @ignore\r\n */\r\nfunction crisp(x) {\r\n    return Math.floor(x) + .5;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasPivot {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasDisplayObject extends DisposerClass {\r\n    constructor(renderer) {\r\n        super();\r\n        Object.defineProperty(this, \"_layer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"mask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"interactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"inactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"wheelable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"cancelTouch\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"isMeasured\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"buttonMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"alpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"compoundAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"angle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"crisp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"pivot\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new CanvasPivot()\r\n        });\r\n        Object.defineProperty(this, \"filter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"cursorOverStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_replacedCursorStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_matrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        // TODO can this be replaced with _localMatrix ?\r\n        Object.defineProperty(this, \"_uMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_bounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._renderer = renderer;\r\n    }\r\n    subStatus(status) {\r\n        return {\r\n            inactive: (this.inactive == null ? status.inactive : this.inactive),\r\n            layer: this._layer || status.layer,\r\n        };\r\n    }\r\n    _dispose() {\r\n        this._renderer._removeObject(this);\r\n        this.getLayer().dirty = true;\r\n    }\r\n    getCanvas() {\r\n        return this.getLayer().view;\r\n    }\r\n    getLayer() {\r\n        let self = this;\r\n        for (;;) {\r\n            if (self._layer) {\r\n                return self._layer;\r\n            }\r\n            else if (self._parent) {\r\n                self = self._parent;\r\n            }\r\n            else {\r\n                return this._renderer.defaultLayer;\r\n            }\r\n        }\r\n    }\r\n    setLayer(order, margin) {\r\n        if (order == null) {\r\n            this._layer = undefined;\r\n        }\r\n        else {\r\n            const visible = true;\r\n            this._layer = this._renderer.getLayer(order, visible);\r\n            this._layer.visible = visible;\r\n            this._layer.margin = margin;\r\n            if (margin) {\r\n                $utils.setInteractive(this._layer.view, false);\r\n            }\r\n            this._renderer._ghostLayer.setMargin(this._renderer.layers);\r\n            if (this._parent) {\r\n                this._parent.registerChildLayer(this._layer);\r\n            }\r\n            this._layer.dirty = true;\r\n            this._renderer.resizeLayer(this._layer);\r\n            this._renderer.resizeGhost();\r\n        }\r\n    }\r\n    markDirtyLayer() {\r\n        this.getLayer().dirty = true;\r\n    }\r\n    clear() {\r\n        this.invalidateBounds();\r\n    }\r\n    invalidateBounds() {\r\n        this._localBounds = undefined;\r\n    }\r\n    _addBounds(_bounds) { }\r\n    _getColorId() {\r\n        if (this._colorId === undefined) {\r\n            this._colorId = this._renderer.paintId(this);\r\n        }\r\n        return this._colorId;\r\n    }\r\n    _isInteractive(status) {\r\n        return !status.inactive && (this.interactive || this._renderer._forceInteractive > 0);\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this._isInteractive(status);\r\n    }\r\n    contains(child) {\r\n        for (;;) {\r\n            if (child === this) {\r\n                return true;\r\n            }\r\n            else if (child._parent) {\r\n                child = child._parent;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    toGlobal(point) {\r\n        return this._matrix.apply(point);\r\n    }\r\n    toLocal(point) {\r\n        return this._matrix.applyInverse(point);\r\n    }\r\n    getLocalMatrix() {\r\n        this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\r\n        return this._uMatrix;\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            const bn = 10000000;\r\n            this._localBounds = {\r\n                left: bn,\r\n                top: bn,\r\n                right: -bn,\r\n                bottom: -bn\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    getAdjustedBounds(bounds) {\r\n        this._setMatrix();\r\n        const matrix = this.getLocalMatrix();\r\n        const p0 = matrix.apply({ x: bounds.left, y: bounds.top });\r\n        const p1 = matrix.apply({ x: bounds.right, y: bounds.top });\r\n        const p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    on(key, callback, context) {\r\n        if (this.interactive) {\r\n            return this._renderer._addEvent(this, key, callback, context);\r\n        }\r\n        else {\r\n            return new Disposer(() => { });\r\n        }\r\n    }\r\n    _setMatrix() {\r\n        // TODO only calculate this if it has actually changed\r\n        this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, \r\n        // Converts degrees to radians\r\n        this.angle * Math.PI / 180, this.scale);\r\n        this._matrix.copyFrom(this._localMatrix);\r\n        if (this._parent) {\r\n            // TODO only calculate this if it has actually changed\r\n            this._matrix.prepend(this._parent._matrix);\r\n        }\r\n    }\r\n    _transform(context, resolution) {\r\n        const m = this._matrix;\r\n        let tx = m.tx * resolution;\r\n        let ty = m.ty * resolution;\r\n        if (this.crisp) {\r\n            tx = crisp(tx);\r\n            ty = crisp(ty);\r\n        }\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, tx, ty);\r\n    }\r\n    _transformMargin(context, resolution, margin) {\r\n        const m = this._matrix;\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, (m.tx + margin.left) * resolution, (m.ty + margin.top) * resolution);\r\n    }\r\n    _transformLayer(context, resolution, layer) {\r\n        if (layer.margin) {\r\n            this._transformMargin(context, layer.scale || resolution, layer.margin);\r\n        }\r\n        else {\r\n            this._transform(context, layer.scale || resolution);\r\n        }\r\n    }\r\n    render(status, targetGhostLayer = 0) {\r\n        if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\r\n            this._setMatrix();\r\n            const subStatus = this.subStatus(status);\r\n            const resolution = this._renderer.resolution;\r\n            const layers = this._renderer.layers;\r\n            const ghostLayer = this._renderer._ghostLayer;\r\n            const ghostContext = ghostLayer.context;\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n            }\r\n            // TODO improve this\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    const context = layer.context;\r\n                    context.save();\r\n                    // We must apply the mask before we transform the element\r\n                    if (mask) {\r\n                        mask._transformLayer(context, resolution, layer);\r\n                        mask._runPath(context);\r\n                        context.clip();\r\n                    }\r\n                    context.globalAlpha = this.compoundAlpha * this.alpha;\r\n                    this._transformLayer(context, resolution, layer);\r\n                    if (this.filter) {\r\n                        context.filter = this.filter;\r\n                    }\r\n                }\r\n            });\r\n            ghostContext.save();\r\n            // We must apply the mask before we transform the element\r\n            if (mask && this._isInteractiveMask(subStatus)) {\r\n                mask._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n                mask._runPath(ghostContext);\r\n                ghostContext.clip();\r\n            }\r\n            this._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n            if ((subStatus.layer.order > 0) && !targetGhostLayer) {\r\n                $array.move(this._renderer._deferredGhostLayers, subStatus.layer.order);\r\n            }\r\n            this._render(subStatus, targetGhostLayer);\r\n            ghostContext.restore();\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    layer.context.restore();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _render(status, _targetGhostLayer = 0) {\r\n        if (this.exportable === false) {\r\n            status.layer.tainted = true;\r\n        }\r\n    }\r\n    _ghostOnly(targetGhostLayer = 0) {\r\n        return targetGhostLayer > 0 ? true : false;\r\n    }\r\n    _drawGhost(status, targetGhostLayer = 0) {\r\n        const interactive = this._isInteractive(status);\r\n        const order = status.layer.order || 0;\r\n        return interactive && ((order == 0 && !this._ghostOnly(targetGhostLayer)) || order == targetGhostLayer) ? true : false;\r\n    }\r\n    hovering() {\r\n        return this._renderer._hovering.has(this);\r\n    }\r\n    dragging() {\r\n        return this._renderer._dragging.some((x) => x.value === this);\r\n    }\r\n    shouldCancelTouch() {\r\n        const renderer = this._renderer;\r\n        if (renderer.tapToActivate && !renderer._touchActive) {\r\n            return false;\r\n        }\r\n        if (this.cancelTouch) {\r\n            return true;\r\n        }\r\n        else if (this._parent) {\r\n            return this._parent.shouldCancelTouch();\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasContainer extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"interactiveChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_childLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this.interactiveChildren || super._isInteractiveMask(status);\r\n    }\r\n    addChild(child) {\r\n        child._parent = this;\r\n        this._children.push(child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    addChildAt(child, index) {\r\n        child._parent = this;\r\n        this._children.splice(index, 0, child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    removeChild(child) {\r\n        child._parent = undefined;\r\n        $array.removeFirst(this._children, child);\r\n    }\r\n    _render(status, targetGhostLayer) {\r\n        super._render(status);\r\n        const renderer = this._renderer;\r\n        if (this.interactive && this.interactiveChildren) {\r\n            ++renderer._forceInteractive;\r\n        }\r\n        $array.each(this._children, (child) => {\r\n            child.compoundAlpha = this.compoundAlpha * this.alpha;\r\n            child.render(status, targetGhostLayer);\r\n        });\r\n        if (this.interactive && this.interactiveChildren) {\r\n            --renderer._forceInteractive;\r\n        }\r\n    }\r\n    registerChildLayer(layer) {\r\n        if (!this._childLayers) {\r\n            this._childLayers = [];\r\n        }\r\n        $array.pushOne(this._childLayers, layer);\r\n        if (this._parent) {\r\n            this._parent.registerChildLayer(layer);\r\n        }\r\n    }\r\n    markDirtyLayer(deep = false) {\r\n        super.markDirtyLayer();\r\n        if (deep && this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => layer.dirty = true);\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => {\r\n                layer.dirty = true;\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction setPoint(bounds, point) {\r\n    bounds.left = Math.min(bounds.left, point.x);\r\n    bounds.top = Math.min(bounds.top, point.y);\r\n    bounds.right = Math.max(bounds.right, point.x);\r\n    bounds.bottom = Math.max(bounds.bottom, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Op {\r\n    colorize(_context, _forceColor) { }\r\n    colorizeGhost(context, forceColor) {\r\n        this.colorize(context, forceColor);\r\n    }\r\n    path(_context) { }\r\n    pathGhost(context) {\r\n        this.path(context);\r\n    }\r\n    addBounds(_bounds) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginPath extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.beginPath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginFill extends Op {\r\n    constructor(color) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.fillStyle = forceColor;\r\n        }\r\n        else {\r\n            context.fillStyle = this.color;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndFill extends Op {\r\n    constructor(clearShadow) {\r\n        super();\r\n        Object.defineProperty(this, \"clearShadow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: clearShadow\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.fill();\r\n        if (this.clearShadow) {\r\n            context.shadowColor = \"\";\r\n            context.shadowBlur = 0;\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndStroke extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.stroke();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineStyle extends Op {\r\n    constructor(width, color, lineJoin, lineCap) {\r\n        super();\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"lineJoin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineJoin\r\n        });\r\n        Object.defineProperty(this, \"lineCap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineCap\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.strokeStyle = forceColor;\r\n        }\r\n        else {\r\n            context.strokeStyle = this.color;\r\n        }\r\n        context.lineWidth = this.width;\r\n        if (this.lineJoin) {\r\n            context.lineJoin = this.lineJoin;\r\n        }\r\n        if (this.lineCap) {\r\n            context.lineCap = this.lineCap;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDash extends Op {\r\n    constructor(dash) {\r\n        super();\r\n        Object.defineProperty(this, \"dash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dash\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.setLineDash(this.dash);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDashOffset extends Op {\r\n    constructor(dashOffset) {\r\n        super();\r\n        Object.defineProperty(this, \"dashOffset\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dashOffset\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.lineDashOffset = this.dashOffset;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawRect extends Op {\r\n    constructor(x, y, width, height) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n    }\r\n    path(context) {\r\n        context.rect(this.x, this.y, this.width, this.height);\r\n    }\r\n    addBounds(bounds) {\r\n        const l = this.x;\r\n        const t = this.y;\r\n        const r = l + this.width;\r\n        const b = t + this.height;\r\n        setPoint(bounds, { x: l, y: t });\r\n        setPoint(bounds, { x: r, y: t });\r\n        setPoint(bounds, { x: l, y: b });\r\n        setPoint(bounds, { x: r, y: b });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawCircle extends Op {\r\n    constructor(x, y, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x + this.radius, this.y);\r\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\r\n        setPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawEllipse extends Op {\r\n    constructor(x, y, radiusX, radiusY) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radiusX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusX\r\n        });\r\n        Object.defineProperty(this, \"radiusY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\r\n        setPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Arc extends Op {\r\n    constructor(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n        super();\r\n        Object.defineProperty(this, \"cx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cx\r\n        });\r\n        Object.defineProperty(this, \"cy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cy\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: startAngle\r\n        });\r\n        Object.defineProperty(this, \"endAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: endAngle\r\n        });\r\n        Object.defineProperty(this, \"anticlockwise\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: anticlockwise\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\r\n        }\r\n    }\r\n    addBounds(bounds) {\r\n        let arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\r\n        setPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\r\n        setPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ArcTo extends Op {\r\n    constructor(x1, y1, x2, y2, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x1\r\n        });\r\n        Object.defineProperty(this, \"y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y1\r\n        });\r\n        Object.defineProperty(this, \"x2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x2\r\n        });\r\n        Object.defineProperty(this, \"y2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y2\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\r\n        }\r\n    }\r\n    // TODO: add points\r\n    addBounds(_bounds) {\r\n        /*\r\n        // not finished\r\n        https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n\r\n        if (prevPoint) {\r\n            let x1 = prevPoint.x;\r\n            let y1 = prevPoint.y;\r\n            let x2 = this.x2;\r\n            let y2 = this.y2;\r\n            let r = this.radius;\r\n\r\n            let xa = (x2 - x1) / 2;\r\n            let ya = (y2 - y1) / 2;\r\n\r\n            let x0 = x1 + xa;\r\n            let y0 = y1 + ya;\r\n\r\n            let a = Math.hypot(xa, ya);\r\n            let b = Math.sqrt(r * r - a * a);\r\n\r\n            let cx = x0 + b * ya / a;\r\n            let cy = y0 - b * xa / a;\r\n\r\n            console.log(cx, cy);\r\n        }*/\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.lineTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass MoveTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ClosePath extends Op {\r\n    path(context) {\r\n        context.closePath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BezierCurveTo extends Op {\r\n    constructor(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"cpX2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX2\r\n        });\r\n        Object.defineProperty(this, \"cpY2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY2\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.cpX2, y: this.cpY2 });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass QuadraticCurveTo extends Op {\r\n    constructor(cpX, cpY, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Shadow extends Op {\r\n    constructor(color, blur, offsetX, offsetY, opacity) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"blur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: blur\r\n        });\r\n        Object.defineProperty(this, \"offsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetX\r\n        });\r\n        Object.defineProperty(this, \"offsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetY\r\n        });\r\n        Object.defineProperty(this, \"opacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: opacity\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        if (this.opacity) {\r\n            context.fillStyle = this.color;\r\n        }\r\n        context.shadowColor = this.color;\r\n        context.shadowBlur = this.blur;\r\n        context.shadowOffsetX = this.offsetX;\r\n        context.shadowOffsetY = this.offsetY;\r\n    }\r\n    colorizeGhost(_context, _forceColor) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass GraphicsImage extends Op {\r\n    constructor(image, width, height, x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: image\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n        setPoint(bounds, { x: this.width, y: this.height });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasGraphics extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_operations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"blendMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: BlendMode.NORMAL\r\n        });\r\n        Object.defineProperty(this, \"_hasShadows\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_fillAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this._operations.length = 0;\r\n    }\r\n    _pushOp(op) {\r\n        this._operations.push(op);\r\n    }\r\n    beginFill(color, alpha = 1) {\r\n        this._fillAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new BeginFill(color.toCSS(alpha)));\r\n            }\r\n            else {\r\n                this.isMeasured = true;\r\n                this._pushOp(new BeginFill(color));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\r\n        }\r\n    }\r\n    endFill() {\r\n        this._pushOp(new EndFill(this._hasShadows));\r\n    }\r\n    endStroke() {\r\n        this._pushOp(new EndStroke());\r\n    }\r\n    beginPath() {\r\n        this._pushOp(new BeginPath());\r\n    }\r\n    lineStyle(width = 0, color, alpha = 1, lineJoin, lineCap) {\r\n        this._strokeAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin, lineCap));\r\n            }\r\n            else {\r\n                this._pushOp(new LineStyle(width, color, lineJoin, lineCap));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin, lineCap));\r\n        }\r\n    }\r\n    setLineDash(dash) {\r\n        this._pushOp(new LineDash(dash ? dash : []));\r\n    }\r\n    setLineDashOffset(dashOffset = 0) {\r\n        this._pushOp(new LineDashOffset(dashOffset));\r\n    }\r\n    drawRect(x, y, width, height) {\r\n        this._pushOp(new DrawRect(x, y, width, height));\r\n    }\r\n    drawCircle(x, y, radius) {\r\n        this._pushOp(new DrawCircle(x, y, radius));\r\n    }\r\n    drawEllipse(x, y, radiusX, radiusY) {\r\n        this._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\r\n    }\r\n    arc(cx, cy, radius, startAngle, endAngle, anticlockwise = false) {\r\n        this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\r\n    }\r\n    arcTo(x1, y1, x2, y2, radius) {\r\n        this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\r\n    }\r\n    lineTo(x, y) {\r\n        this._pushOp(new LineTo(x, y));\r\n    }\r\n    moveTo(x, y) {\r\n        this._pushOp(new MoveTo(x, y));\r\n    }\r\n    bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\r\n    }\r\n    quadraticCurveTo(cpX, cpY, toX, toY) {\r\n        this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\r\n    }\r\n    closePath() {\r\n        this._pushOp(new ClosePath());\r\n    }\r\n    shadow(color, blur = 0, offsetX = 0, offsetY = 0, opacity) {\r\n        this._hasShadows = true;\r\n        this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\r\n    }\r\n    image(image, width, height, x, y) {\r\n        this._pushOp(new GraphicsImage(image, width, height, x, y));\r\n    }\r\n    // https://svgwg.org/svg2-draft/paths.html#DProperty\r\n    // TODO better error checking\r\n    svgPath(path) {\r\n        let x = 0;\r\n        let y = 0;\r\n        let cpx = null;\r\n        let cpy = null;\r\n        let qcpx = null;\r\n        let qcpy = null;\r\n        const SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\r\n        const ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\r\n        let match;\r\n        while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\r\n            const name = match[1];\r\n            const rest = match[2];\r\n            const args = [];\r\n            while ((match = ARGS_REGEXP.exec(rest)) !== null) {\r\n                args.push(match[1]);\r\n            }\r\n            // Reset control point\r\n            if (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\r\n                cpx = null;\r\n                cpy = null;\r\n            }\r\n            // Reset control point\r\n            if (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\r\n                qcpx = null;\r\n                qcpy = null;\r\n            }\r\n            switch (name) {\r\n                case \"M\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x = +args[0];\r\n                    y = +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"m\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x += +args[0];\r\n                    y += +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"L\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"l\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"H\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"V\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"v\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"C\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i];\r\n                        const y1 = +args[i + 1];\r\n                        cpx = +args[i + 2];\r\n                        cpy = +args[i + 3];\r\n                        x = +args[i + 4];\r\n                        y = +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"c\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i] + x;\r\n                        const y1 = +args[i + 1] + y;\r\n                        cpx = +args[i + 2] + x;\r\n                        cpy = +args[i + 3] + y;\r\n                        x += +args[i + 4];\r\n                        y += +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"S\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i];\r\n                        cpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"s\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i] + x;\r\n                        cpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"Q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i];\r\n                        qcpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i] + x;\r\n                        qcpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"T\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"t\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"A\":\r\n                case \"a\":\r\n                    const relative = (name === \"a\");\r\n                    splitArcFlags(args);\r\n                    checkEvenArgs(name, args.length, 7);\r\n                    for (let i = 0; i < args.length; i += 7) {\r\n                        let cx = +args[i + 5];\r\n                        let cy = +args[i + 6];\r\n                        if (relative) {\r\n                            cx += x;\r\n                            cy += y;\r\n                        }\r\n                        const bs = arcToBezier({\r\n                            px: x,\r\n                            py: y,\r\n                            rx: +args[i],\r\n                            ry: +args[i + 1],\r\n                            xAxisRotation: +args[i + 2],\r\n                            largeArcFlag: assertBinary(+args[i + 3]),\r\n                            sweepFlag: assertBinary(+args[i + 4]),\r\n                            cx,\r\n                            cy,\r\n                        });\r\n                        $array.each(bs, (b) => {\r\n                            this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\r\n                            x = b.x;\r\n                            y = b.y;\r\n                        });\r\n                    }\r\n                    break;\r\n                case \"Z\":\r\n                case \"z\":\r\n                    checkArgs(name, args.length, 0);\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    _runPath(context) {\r\n        context.beginPath();\r\n        $array.each(this._operations, (op) => {\r\n            op.path(context);\r\n        });\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        super._render(status);\r\n        const layerDirty = status.layer.dirty;\r\n        const interactive = this._isInteractive(status);\r\n        const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n        const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n        if (layerDirty || interactive || ghostOnly) {\r\n            const context = status.layer.context;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            if (layerDirty && !ghostOnly) {\r\n                context.globalCompositeOperation = this.blendMode;\r\n                context.beginPath();\r\n            }\r\n            let color;\r\n            if (drawGhost) {\r\n                ghostContext.beginPath();\r\n                color = this._getColorId();\r\n            }\r\n            $array.each(this._operations, (op) => {\r\n                if (layerDirty && !ghostOnly) {\r\n                    op.path(context);\r\n                    op.colorize(context, undefined);\r\n                }\r\n                if (drawGhost) {\r\n                    op.pathGhost(ghostContext);\r\n                    op.colorizeGhost(ghostContext, color);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    renderDetached(context) {\r\n        if (this.visible) {\r\n            this._setMatrix();\r\n            context.save();\r\n            // We must apply the mask before we transform the element\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n                mask._transform(context, 1);\r\n                mask._runPath(context);\r\n                context.clip();\r\n            }\r\n            // TODO handle compoundAlpha somehow ?\r\n            context.globalAlpha = this.compoundAlpha * this.alpha;\r\n            this._transform(context, 1);\r\n            if (this.filter) {\r\n                context.filter = this.filter;\r\n            }\r\n            context.globalCompositeOperation = this.blendMode;\r\n            context.beginPath();\r\n            $array.each(this._operations, (op) => {\r\n                op.path(context);\r\n                op.colorize(context, undefined);\r\n            });\r\n            context.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            $array.each(this._operations, (op) => {\r\n                op.addBounds(bounds);\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasText extends CanvasDisplayObject {\r\n    constructor(renderer, text, style) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"style\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"textVisible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"truncated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textInfo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        this.text = text;\r\n        this.style = style;\r\n    }\r\n    invalidateBounds() {\r\n        super.invalidateBounds();\r\n        this._textInfo = undefined;\r\n    }\r\n    _shared(context) {\r\n        if (this.style.textAlign) {\r\n            context.textAlign = this.style.textAlign;\r\n        }\r\n        if (this.style.direction) {\r\n            context.direction = this.style.direction;\r\n        }\r\n        if (this.style.textBaseline) {\r\n            context.textBaseline = this.style.textBaseline;\r\n        }\r\n    }\r\n    _prerender(status, ignoreGhost = false, ignoreFontWeight = false) {\r\n        super._render(status);\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        // Font style\r\n        const style = this.style;\r\n        let fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\r\n        context.font = fontStyle;\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.font = fontStyle;\r\n        }\r\n        // Other parameters\r\n        if (style.fill) {\r\n            if (style.fill instanceof Color) {\r\n                context.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\r\n            }\r\n            else {\r\n                context.fillStyle = style.fill;\r\n            }\r\n        }\r\n        if (style.shadowColor) {\r\n            status.layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\r\n        }\r\n        if (style.shadowBlur) {\r\n            status.layer.context.shadowBlur = style.shadowBlur;\r\n        }\r\n        if (style.shadowOffsetX) {\r\n            status.layer.context.shadowOffsetX = style.shadowOffsetX;\r\n        }\r\n        if (style.shadowOffsetY) {\r\n            status.layer.context.shadowOffsetY = style.shadowOffsetY;\r\n        }\r\n        this._shared(context);\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.fillStyle = this._getColorId();\r\n            this._shared(ghostContext);\r\n        }\r\n    }\r\n    _getFontStyle(style2, ignoreFontWeight = false) {\r\n        // Process defaults\r\n        const style = this.style;\r\n        let fontStyle = [];\r\n        if (style2 && style2.fontVariant) {\r\n            fontStyle.push(style2.fontVariant);\r\n        }\r\n        else if (style.fontVariant) {\r\n            fontStyle.push(style.fontVariant);\r\n        }\r\n        if (!ignoreFontWeight) {\r\n            if (style2 && style2.fontWeight) {\r\n                fontStyle.push(style2.fontWeight);\r\n            }\r\n            else if (style.fontWeight) {\r\n                fontStyle.push(style.fontWeight);\r\n            }\r\n        }\r\n        if (style2 && style2.fontStyle) {\r\n            fontStyle.push(style2.fontStyle);\r\n        }\r\n        else if (style.fontStyle) {\r\n            fontStyle.push(style.fontStyle);\r\n        }\r\n        if (style2 && style2.fontSize) {\r\n            if ($type.isNumber(style2.fontSize)) {\r\n                style2.fontSize = style2.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style2.fontSize);\r\n        }\r\n        else if (style.fontSize) {\r\n            if ($type.isNumber(style.fontSize)) {\r\n                style.fontSize = style.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style.fontSize);\r\n        }\r\n        if (style2 && style2.fontFamily) {\r\n            fontStyle.push(style2.fontFamily);\r\n        }\r\n        else if (style.fontFamily) {\r\n            fontStyle.push(style.fontFamily);\r\n        }\r\n        else if (fontStyle.length) {\r\n            fontStyle.push(\"Arial\");\r\n        }\r\n        return fontStyle.join(\" \");\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        // We need measurements in order to properly position text for alignment\r\n        if (!this._textInfo) {\r\n            this._measure(status);\r\n        }\r\n        if (this.textVisible) {\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n            const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n            context.save();\r\n            ghostContext.save();\r\n            this._prerender(status);\r\n            // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n            // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        if (!ghostOnly) {\r\n                            context.font = chunk.style;\r\n                        }\r\n                        if (this._isInteractive(status)) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        if (!ghostOnly) {\r\n                            context.fillStyle = chunk.fill.toCSS();\r\n                        }\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Draw text\r\n                    if (layerDirty && !ghostOnly) {\r\n                        context.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    // Draw underline\r\n                    if (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\r\n                        let thickness = 1;\r\n                        let offset = 1;\r\n                        let fontSize = chunk.height;\r\n                        const oversizedBehavior = this.style.oversizedBehavior || \"\";\r\n                        if ([\"truncate\", \"wrap\", \"wrap-no-break\"].indexOf(oversizedBehavior) > -1) {\r\n                            // Measure actual width of the text so the line fits\r\n                            const metrics = this._measureText(chunk.text, context);\r\n                            chunk.width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        }\r\n                        let offsetX = chunk.offsetX;\r\n                        switch (this.style.textAlign) {\r\n                            case \"right\":\r\n                            case \"end\":\r\n                                offsetX -= chunk.width;\r\n                                break;\r\n                            case \"center\":\r\n                                offsetX -= chunk.width / 2;\r\n                                break;\r\n                        }\r\n                        if (chunk.style) {\r\n                            const format = TextFormatter.getTextStyle(chunk.style);\r\n                            switch (format.fontWeight) {\r\n                                case \"bolder\":\r\n                                case \"bold\":\r\n                                case \"700\":\r\n                                case \"800\":\r\n                                case \"900\":\r\n                                    thickness = 2;\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (fontSize) {\r\n                            offset = fontSize / 20;\r\n                        }\r\n                        let y;\r\n                        if (chunk.textDecoration == \"line-through\") {\r\n                            y = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\r\n                        }\r\n                        else {\r\n                            y = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\r\n                        }\r\n                        if (!ghostOnly) {\r\n                            context.save();\r\n                            context.beginPath();\r\n                            if (chunk.fill) {\r\n                                context.strokeStyle = chunk.fill.toCSS();\r\n                            }\r\n                            else if (this.style.fill && this.style.fill instanceof Color) {\r\n                                context.strokeStyle = this.style.fill.toCSS();\r\n                            }\r\n                            context.lineWidth = thickness * offset;\r\n                            context.moveTo(offsetX, y);\r\n                            context.lineTo(offsetX + chunk.width, y);\r\n                            context.stroke();\r\n                            context.restore();\r\n                        }\r\n                    }\r\n                    if (interactive && this.interactive && drawGhost) {\r\n                        // Draw text in ghost canvas ONLY if it is set as interactive\r\n                        // explicitly. This way we avoid hit test anomalies caused by anti\r\n                        // aliasing of text.\r\n                        ghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                });\r\n            });\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            //if (this._textVisible) {\r\n            const x = this._measure({\r\n                inactive: this.inactive,\r\n                layer: this.getLayer(),\r\n            });\r\n            setPoint(bounds, { x: x.left, y: x.top });\r\n            setPoint(bounds, { x: x.right, y: x.bottom });\r\n            //}\r\n        }\r\n    }\r\n    _ignoreFontWeight() {\r\n        return /apple/i.test(navigator.vendor);\r\n    }\r\n    _measure(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        // Reset text info\r\n        this._textInfo = [];\r\n        // Init\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true, this._ignoreFontWeight());\r\n        // Get default font metrix\r\n        const refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let minX = 0;\r\n        let maxX = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        let currentStyle;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks;\r\n            if (line == \"\") {\r\n                chunks = [{\r\n                        type: \"value\",\r\n                        text: \"\"\r\n                    }];\r\n            }\r\n            else {\r\n                chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            }\r\n            while (chunks.length > 0) {\r\n                // Init line object\r\n                let lineInfo = {\r\n                    offsetY: offsetY,\r\n                    ascent: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    textChunks: []\r\n                };\r\n                // Measure reference text\r\n                const metrics = this._measureText(refText, context);\r\n                const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                lineInfo.height = height;\r\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                let currentFormat;\r\n                let currentDecoration = this.style.textDecoration;\r\n                let currentFill;\r\n                let currentChunkWidth;\r\n                let skipFurtherText = false;\r\n                let firstTextChunk = true;\r\n                let leftoverChunks = [];\r\n                let currentVerticalAlign;\r\n                //let offsetX = 0;\r\n                //let chunk;\r\n                //while(chunk = chunks.shift()) {\r\n                $array.eachContinue(chunks, (chunk, index) => {\r\n                    // Format chunk\r\n                    if (chunk.type == \"format\") {\r\n                        if (chunk.text == \"[/]\") {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                                styleRestored = true;\r\n                            }\r\n                            currentFill = undefined;\r\n                            currentStyle = undefined;\r\n                            currentChunkWidth = undefined;\r\n                            currentDecoration = this.style.textDecoration;\r\n                            currentVerticalAlign = undefined;\r\n                            currentFormat = chunk.text;\r\n                        }\r\n                        else {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                            }\r\n                            let format = TextFormatter.getTextStyle(chunk.text);\r\n                            const fontStyle = this._getFontStyle(format);\r\n                            context.save();\r\n                            ghostContext.save();\r\n                            context.font = fontStyle;\r\n                            currentStyle = fontStyle;\r\n                            currentFormat = chunk.text;\r\n                            if (format.textDecoration) {\r\n                                currentDecoration = format.textDecoration;\r\n                            }\r\n                            if (format.fill) {\r\n                                currentFill = format.fill;\r\n                            }\r\n                            if (format.width) {\r\n                                currentChunkWidth = $type.toNumber(format.width);\r\n                            }\r\n                            if (format.verticalAlign) {\r\n                                currentVerticalAlign = format.verticalAlign;\r\n                            }\r\n                            styleRestored = false;\r\n                            // Measure reference text after change of format\r\n                            const metrics = this._measureText(refText, context);\r\n                            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                            if (height > lineInfo.height) {\r\n                                lineInfo.height = height;\r\n                            }\r\n                            if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Text chunk\r\n                    else if (chunk.type == \"value\" && !skipFurtherText) {\r\n                        // Measure\r\n                        const metrics = this._measureText(chunk.text, context);\r\n                        let chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        // Check for fit\r\n                        if (truncate) {\r\n                            this.truncated = undefined;\r\n                            // Break words?\r\n                            let breakWords = firstTextChunk || this.style.breakWords || false;\r\n                            // Measure ellipsis and check if it fits\r\n                            const ellipsis = this.style.ellipsis || \"\";\r\n                            const ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\r\n                                chunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\r\n                                chunk.text += ellipsis;\r\n                                skipFurtherText = true;\r\n                                this.truncated = true;\r\n                            }\r\n                        }\r\n                        else if (wrap) {\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width;\r\n                                const tmpText = this._truncateText(context, chunk.text, excessWidth, false, (firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\"));\r\n                                if (tmpText == \"\") {\r\n                                    // Unable to fit a single letter - hide the whole label\r\n                                    this.textVisible = true;\r\n                                    return false;\r\n                                }\r\n                                //skipFurtherText = true;\r\n                                //Add remaining chunks for the next line\r\n                                leftoverChunks = chunks.slice(index + 1);\r\n                                //Add remaining text of current chunk if it was forced-cut\r\n                                if ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\r\n                                    leftoverChunks.unshift({\r\n                                        type: \"value\",\r\n                                        text: chunk.text.substr(tmpText.length)\r\n                                    });\r\n                                    if (currentFormat) {\r\n                                        leftoverChunks.unshift({\r\n                                            type: \"format\",\r\n                                            text: currentFormat\r\n                                        });\r\n                                    }\r\n                                }\r\n                                // Set current chunk (truncated)\r\n                                chunk.text = $utils.trim(tmpText);\r\n                                chunks = [];\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        // Chunk width?\r\n                        let leftBoundMod = 1;\r\n                        let rightBoundMod = 1;\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            // increase horizontal bounding boxes accordingly\r\n                            const boundsMod = chunkWidth / currentChunkWidth;\r\n                            switch (this.style.textAlign) {\r\n                                case \"right\":\r\n                                case \"end\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    break;\r\n                                case \"center\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    rightBoundMod = boundsMod;\r\n                                    break;\r\n                                default:\r\n                                    rightBoundMod = boundsMod;\r\n                            }\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: chunk.text,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: 0,\r\n                            textDecoration: currentDecoration,\r\n                            verticalAlign: currentVerticalAlign\r\n                        });\r\n                        //offsetX += chunkWidth;\r\n                        firstTextChunk = false;\r\n                    }\r\n                    if (leftoverChunks) {\r\n                        //return false;\r\n                    }\r\n                    return true;\r\n                    //}\r\n                });\r\n                if (this.style.lineHeight instanceof Percent) {\r\n                    lineInfo.height *= this.style.lineHeight.value;\r\n                    lineInfo.ascent *= this.style.lineHeight.value;\r\n                }\r\n                else {\r\n                    lineInfo.height *= this.style.lineHeight || 1.2;\r\n                    lineInfo.ascent *= this.style.lineHeight || 1.2;\r\n                }\r\n                if (minX < lineInfo.left) {\r\n                    minX = lineInfo.left;\r\n                }\r\n                if (maxX < lineInfo.right) {\r\n                    maxX = lineInfo.right;\r\n                }\r\n                this._textInfo.push(lineInfo);\r\n                //lineInfo.offsetY += lineInfo.ascent;\r\n                offsetY += lineInfo.height;\r\n                // Reset chunks so that it can proceed to the next line\r\n                chunks = leftoverChunks || [];\r\n            }\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo, _index) => {\r\n            let currentChunkOffset = 0;\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\r\n                chunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\r\n                currentChunkOffset += chunk.width;\r\n                if (chunk.verticalAlign) {\r\n                    switch (chunk.verticalAlign) {\r\n                        case \"super\":\r\n                            chunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\r\n                            break;\r\n                        case \"sub\":\r\n                            chunk.offsetY += chunk.height / 2;\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        const bounds = {\r\n            left: rtl ? -maxX : -minX,\r\n            top: 0,\r\n            right: rtl ? minX : maxX,\r\n            bottom: offsetY,\r\n        };\r\n        // We need to fit?\r\n        if (oversizedBehavior !== \"none\") {\r\n            const ratio = this._fitRatio(bounds);\r\n            if (ratio < 1) {\r\n                if (oversizedBehavior == \"fit\") {\r\n                    if ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\r\n                        this.textVisible = false;\r\n                        bounds.left = 0;\r\n                        bounds.top = 0;\r\n                        bounds.right = 0;\r\n                        bounds.bottom = 0;\r\n                    }\r\n                    else {\r\n                        if (!this._originalScale) {\r\n                            this._originalScale = this.scale;\r\n                        }\r\n                        this.scale = ratio;\r\n                        this.textVisible = true;\r\n                    }\r\n                }\r\n                else if (oversizedBehavior == \"hide\") {\r\n                    this.textVisible = false;\r\n                    bounds.left = 0;\r\n                    bounds.top = 0;\r\n                    bounds.right = 0;\r\n                    bounds.bottom = 0;\r\n                }\r\n                else {\r\n                    switch (this.style.textAlign) {\r\n                        case \"right\":\r\n                        case \"end\":\r\n                            bounds.left = rtl ? maxWidth : -maxWidth;\r\n                            bounds.right = 0;\r\n                            break;\r\n                        case \"center\":\r\n                            bounds.left = -maxWidth / 2;\r\n                            bounds.right = maxWidth / 2;\r\n                            break;\r\n                        default:\r\n                            bounds.left = 0;\r\n                            bounds.right = rtl ? -maxWidth : maxWidth;\r\n                    }\r\n                    this.scale = this._originalScale || 1;\r\n                    this._originalScale = undefined;\r\n                    this.textVisible = true;\r\n                }\r\n            }\r\n            else {\r\n                this.scale = this._originalScale || 1;\r\n                this._originalScale = undefined;\r\n                this.textVisible = true;\r\n            }\r\n        }\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return bounds;\r\n    }\r\n    _fitRatio(bounds) {\r\n        const maxW = this.style.maxWidth;\r\n        const maxH = this.style.maxHeight;\r\n        if (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\r\n            return 1;\r\n        }\r\n        const w = bounds.right - bounds.left;\r\n        const h = bounds.bottom - bounds.top;\r\n        return Math.min(maxW / w || 1, maxH / h || 1);\r\n    }\r\n    _truncateText(context, text, maxWidth, breakWords = false, fallbackBreakWords = true) {\r\n        let width;\r\n        do {\r\n            if (breakWords) {\r\n                text = text.slice(0, -1);\r\n            }\r\n            else {\r\n                let tmp = text.replace(/[^,;:!?\\\\\\/\\s​]+[,;:!?\\\\\\/\\s​]*$/g, \"\");\r\n                if ((tmp == \"\" || tmp === text) && fallbackBreakWords) {\r\n                    breakWords = true;\r\n                }\r\n                else if (tmp == \"\") {\r\n                    return text;\r\n                }\r\n                else {\r\n                    text = tmp;\r\n                }\r\n            }\r\n            const metrics = this._measureText(text, context);\r\n            width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n        } while ((width > maxWidth) && text != \"\");\r\n        return text;\r\n    }\r\n    _measureText(text, context) {\r\n        let metrics = context.measureText(text);\r\n        let fakeMetrics = {};\r\n        if (metrics.actualBoundingBoxAscent == null) {\r\n            const div = document.createElement(\"div\");\r\n            div.innerText = text;\r\n            div.style.visibility = \"hidden\";\r\n            div.style.position = \"absolute\";\r\n            div.style.top = \"-1000000px;\";\r\n            div.style.fontFamily = this.style.fontFamily || \"\";\r\n            div.style.fontSize = this.style.fontSize + \"\";\r\n            document.body.appendChild(div);\r\n            const bbox = div.getBoundingClientRect();\r\n            document.body.removeChild(div);\r\n            const h = bbox.height;\r\n            const w = metrics.width;\r\n            let left = 0;\r\n            let right = w;\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: h,\r\n                actualBoundingBoxDescent: 0,\r\n                actualBoundingBoxLeft: left,\r\n                actualBoundingBoxRight: right,\r\n                fontBoundingBoxAscent: h,\r\n                fontBoundingBoxDescent: 0,\r\n                width: w\r\n            };\r\n            //return fake;\r\n        }\r\n        else {\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\r\n                actualBoundingBoxRight: metrics.actualBoundingBoxRight,\r\n                fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                width: metrics.width\r\n            };\r\n        }\r\n        const w = metrics.width;\r\n        switch (this.style.textAlign) {\r\n            case \"right\":\r\n            case \"end\":\r\n                fakeMetrics.actualBoundingBoxLeft = w;\r\n                fakeMetrics.actualBoundingBoxRight = 0;\r\n                break;\r\n            case \"center\":\r\n                fakeMetrics.actualBoundingBoxLeft = w / 2;\r\n                fakeMetrics.actualBoundingBoxRight = w / 2;\r\n                break;\r\n            default:\r\n                fakeMetrics.actualBoundingBoxLeft = 0;\r\n                fakeMetrics.actualBoundingBoxRight = w;\r\n        }\r\n        return fakeMetrics;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasTextStyle {\r\n    constructor() {\r\n        //public wordWrapWidth: number = 100;\r\n        Object.defineProperty(this, \"fill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fillOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textAlign\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontFamily\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontWeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontVariant\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textDecoration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // leading?: number;\r\n        // letterSpacing?: number;\r\n        Object.defineProperty(this, \"lineHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: percent(120)\r\n        });\r\n        Object.defineProperty(this, \"baselineRatio\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0.19\r\n        });\r\n        // padding?: number;\r\n        // stroke?: number;\r\n        // strokeThickness?: number;\r\n        // trim?: number;\r\n        // wordWrap?: boolean;\r\n        Object.defineProperty(this, \"direction\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textBaseline\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"oversizedBehavior\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"none\"\r\n        });\r\n        Object.defineProperty(this, \"breakWords\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"ellipsis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"…\"\r\n        });\r\n        Object.defineProperty(this, \"maxWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"maxHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"minScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ignoreFormatting\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRadialText extends CanvasText {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textType\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"circular\"\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"inside\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"orientation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"auto\"\r\n        });\r\n        Object.defineProperty(this, \"kerning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_textReversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                this._renderCircular(status, targetGhostLayer);\r\n                break;\r\n            default:\r\n                super._render(status, targetGhostLayer);\r\n                break;\r\n        }\r\n    }\r\n    _renderCircular(status, targetGhostLayer = 0) {\r\n        if (this.textVisible) {\r\n            this._prerender(status);\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            // Savepoint\r\n            context.save();\r\n            if (interactive) {\r\n                ghostContext.save();\r\n            }\r\n            // We need measurements in order to properly position text for alignment\r\n            if (!this._textInfo) {\r\n                this._measure(status);\r\n            }\r\n            // Init\r\n            let radius = (this.radius || 0);\r\n            let startAngle = (this.startAngle || 0);\r\n            let deltaAngle = 0;\r\n            let orientation = this.orientation;\r\n            let inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\r\n            const inside = this.inside;\r\n            const align = this.style.textAlign || \"left\";\r\n            const kerning = this.kerning || 0;\r\n            let clockwise = align == \"left\" ? 1 : -1;\r\n            const shouldReverse = !this._textReversed;\r\n            const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n            const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n            // Check if we need to invert the whole stuff\r\n            if (inward == \"auto\") {\r\n                // Calc max angle so we know whether we need to flip it\r\n                let maxAngle = 0;\r\n                let midAngle = 0;\r\n                $array.each(this._textInfo, (line, _index) => {\r\n                    const deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\r\n                    if (deltaAngle > maxAngle) {\r\n                        maxAngle = deltaAngle;\r\n                    }\r\n                });\r\n                if (align == \"left\") {\r\n                    midAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else if (align == \"right\") {\r\n                    midAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else {\r\n                    midAngle = startAngle * $math.DEGREES;\r\n                }\r\n                midAngle = $math.normalizeAngle(midAngle);\r\n                inward = (midAngle >= 270) || (midAngle <= 90);\r\n            }\r\n            if (inward == true && shouldReverse) {\r\n                this._textInfo.reverse();\r\n                this._textReversed = true;\r\n            }\r\n            // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\r\n            // \tclockwise *= -1;\r\n            // }\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                const textHeight = line.height;\r\n                // Adjust radius (for `inside = false`)\r\n                // Radius adjustment for `inside = false` is below the line calculation\r\n                if (!inside) {\r\n                    radius += textHeight;\r\n                }\r\n                // Reverse letters if we're painting them counter-clockwise\r\n                if (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\r\n                    line.textChunks.reverse();\r\n                }\r\n                // Init angles\r\n                let lineStartAngle = startAngle;\r\n                deltaAngle = 0;\r\n                // Adjust for center-align\r\n                if (align == \"center\") {\r\n                    lineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\r\n                    deltaAngle = lineStartAngle - startAngle;\r\n                }\r\n                // if (inward == \"auto\") {\r\n                // \tlet midAngle;\r\n                // \tif (align == \"left\") {\r\n                // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \telse if () {\r\n                // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \tinward = (midAngle >= 270) || (midAngle <= 90);\r\n                // }\r\n                // Rotate letters if they are facing outward\r\n                lineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\r\n                // Savepoint\r\n                context.save();\r\n                if (interactive) {\r\n                    ghostContext.save();\r\n                }\r\n                // Assume starting angle\r\n                if (!ghostOnly) {\r\n                    context.rotate(lineStartAngle);\r\n                }\r\n                if (interactive) {\r\n                    ghostContext.rotate(lineStartAngle);\r\n                }\r\n                let angleShift = 0;\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Draw the letter\r\n                    const char = chunk.text;\r\n                    const charWidth = chunk.width;\r\n                    // Rotate half a letter\r\n                    angleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\r\n                    if (!ghostOnly) {\r\n                        context.rotate(angleShift);\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        if (!ghostOnly) {\r\n                            context.font = chunk.style;\r\n                        }\r\n                        if (interactive) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        if (!ghostOnly) {\r\n                            context.fillStyle = chunk.fill.toCSS();\r\n                        }\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Center letters\r\n                    if (!ghostOnly) {\r\n                        context.textBaseline = \"middle\";\r\n                        context.textAlign = \"center\";\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.textBaseline = \"middle\";\r\n                        ghostContext.textAlign = \"center\";\r\n                    }\r\n                    // Plop the letter\r\n                    if (layerDirty && !ghostOnly) {\r\n                        context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (interactive && drawGhost) {\r\n                        ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                    // Rotate half a letter and add spacing\r\n                    angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\r\n                    if (!ghostOnly) {\r\n                        context.rotate(angleShift);\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                });\r\n                // Restore angle\r\n                context.restore();\r\n                if (interactive) {\r\n                    ghostContext.restore();\r\n                }\r\n                // Adjust radius (for `inside = true`)\r\n                if (inside) {\r\n                    radius -= textHeight;\r\n                }\r\n            });\r\n            // Restore\r\n            context.restore();\r\n            if (interactive) {\r\n                ghostContext.restore();\r\n            }\r\n        }\r\n    }\r\n    _measure(status) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                return this._measureCircular(status);\r\n            default:\r\n                return super._measure(status);\r\n        }\r\n    }\r\n    _measureCircular(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const ellipsis = this.style.ellipsis || \"\";\r\n        let ellipsisMetrics;\r\n        //const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Reset text info\r\n        this.textVisible = true;\r\n        this._textInfo = [];\r\n        this._textReversed = false;\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true);\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let totalWidth = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            // Init line object\r\n            let lineInfo = {\r\n                offsetY: offsetY,\r\n                ascent: 0,\r\n                width: 0,\r\n                height: 0,\r\n                left: 0,\r\n                right: 0,\r\n                textChunks: []\r\n            };\r\n            let currentStyle;\r\n            let currentFill;\r\n            let currentChunkWidth;\r\n            //while(chunk = chunks.shift()) {\r\n            $array.each(chunks, (chunk, _index) => {\r\n                // Format chunk\r\n                if (chunk.type == \"format\") {\r\n                    if (chunk.text == \"[/]\") {\r\n                        if (!styleRestored) {\r\n                            context.restore();\r\n                            ghostContext.restore();\r\n                            styleRestored = true;\r\n                        }\r\n                        currentFill = undefined;\r\n                        currentStyle = undefined;\r\n                        currentChunkWidth = undefined;\r\n                    }\r\n                    else {\r\n                        let format = TextFormatter.getTextStyle(chunk.text);\r\n                        const fontStyle = this._getFontStyle(format);\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = fontStyle;\r\n                        currentStyle = fontStyle;\r\n                        if (format.fill) {\r\n                            currentFill = format.fill;\r\n                        }\r\n                        if (format.width) {\r\n                            currentChunkWidth = $type.toNumber(format.width);\r\n                        }\r\n                        styleRestored = false;\r\n                    }\r\n                    if (truncate) {\r\n                        ellipsisMetrics = this._measureText(ellipsis, context);\r\n                    }\r\n                }\r\n                // Text format\r\n                else if (chunk.type == \"value\") {\r\n                    // Measure each letter\r\n                    let chars = chunk.text.match(/./ug) || [];\r\n                    if (rtl) {\r\n                        chars = $utils.splitString(chunk.text);\r\n                        chars.reverse();\r\n                    }\r\n                    for (let i = 0; i < chars.length; i++) {\r\n                        const char = chars[i];\r\n                        // Measure\r\n                        const metrics = this._measureText(char, context);\r\n                        let chunkWidth = metrics.width;\r\n                        // Chunk width?\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        totalWidth += chunkWidth;\r\n                        // Handle oversized behavior\r\n                        if (truncate) {\r\n                            // Measure ellipsis and check if it fits\r\n                            if (!ellipsisMetrics) {\r\n                                ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            }\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            //totalWidth += ellipsisWidth;\r\n                            if ((totalWidth + ellipsisWidth) > maxWidth) {\r\n                                if (lineInfo.textChunks.length == 1) {\r\n                                    this.textVisible = false;\r\n                                }\r\n                                else {\r\n                                    lineInfo.width += ellipsisWidth;\r\n                                    lineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\r\n                                    lineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\r\n                                    lineInfo.textChunks.push({\r\n                                        style: currentStyle,\r\n                                        fill: currentFill,\r\n                                        text: ellipsis,\r\n                                        width: ellipsisWidth,\r\n                                        height: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\r\n                                        left: ellipsisMetrics.actualBoundingBoxLeft,\r\n                                        right: ellipsisMetrics.actualBoundingBoxRight,\r\n                                        ascent: ellipsisMetrics.actualBoundingBoxAscent,\r\n                                        offsetX: 0,\r\n                                        offsetY: chunkHeight,\r\n                                        textDecoration: undefined\r\n                                    });\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: char,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight + metrics.actualBoundingBoxDescent,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: chunkHeight,\r\n                            textDecoration: undefined\r\n                        });\r\n                        if (rtl) {\r\n                            // @todo still needed?\r\n                            //break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (this.style.lineHeight instanceof Percent) {\r\n                lineInfo.height *= this.style.lineHeight.value;\r\n            }\r\n            else {\r\n                lineInfo.height *= this.style.lineHeight || 1.2;\r\n            }\r\n            this._textInfo.push(lineInfo);\r\n            //lineInfo.offsetY += lineInfo.ascent;\r\n            offsetY += lineInfo.height;\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        if (oversizedBehavior == \"hide\" && (totalWidth > maxWidth)) {\r\n            this.textVisible = false;\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo) => {\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\r\n            });\r\n        });\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return {\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n        };\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasImage extends CanvasDisplayObject {\r\n    constructor(renderer, image) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_imageMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.image = image;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._imageMask) {\r\n            clearCanvas(this._imageMask);\r\n        }\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            let w = 0;\r\n            let h = 0;\r\n            if (this.width) {\r\n                w = this.width;\r\n            }\r\n            if (this.height) {\r\n                h = this.height;\r\n            }\r\n            this._localBounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: w,\r\n                bottom: h\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    _render(status, targetGhostLayer = 0) {\r\n        super._render(status);\r\n        if (this.image) {\r\n            if (this.tainted === undefined) {\r\n                this.tainted = isTainted(this.image);\r\n                status.layer.tainted = true;\r\n            }\r\n            if (this.tainted && this._renderer._omitTainted) {\r\n                return;\r\n            }\r\n            const ghostOnly = this._ghostOnly(targetGhostLayer);\r\n            const drawGhost = this._drawGhost(status, targetGhostLayer);\r\n            if (status.layer.dirty && !ghostOnly) {\r\n                if (this.shadowColor) {\r\n                    status.layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\r\n                }\r\n                if (this.shadowBlur) {\r\n                    status.layer.context.shadowBlur = this.shadowBlur;\r\n                }\r\n                if (this.shadowOffsetX) {\r\n                    status.layer.context.shadowOffsetX = this.shadowOffsetX;\r\n                }\r\n                if (this.shadowOffsetY) {\r\n                    status.layer.context.shadowOffsetY = this.shadowOffsetY;\r\n                }\r\n                // TODO should this round ?\r\n                const width = this.width || this.image.naturalWidth;\r\n                const height = this.height || this.image.naturalHeight;\r\n                status.layer.context.drawImage(this.image, 0, 0, width, height);\r\n            }\r\n            if (this.interactive && this._isInteractive(status) && drawGhost) {\r\n                const mask = this._getMask(this.image);\r\n                this._renderer._ghostLayer.context.drawImage(mask, 0, 0);\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this.image = undefined;\r\n        this._imageMask = undefined;\r\n    }\r\n    _getMask(image) {\r\n        if (this._imageMask === undefined) {\r\n            // TODO should this round ?\r\n            const width = this.width || image.naturalWidth;\r\n            const height = this.height || image.naturalHeight;\r\n            // We need to create a second canvas because destination-in clears out the entire canvas\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            const context = canvas.getContext(\"2d\");\r\n            context.imageSmoothingEnabled = false;\r\n            context.fillStyle = this._getColorId();\r\n            context.fillRect(0, 0, width, height);\r\n            if (!isTainted(image)) {\r\n                context.globalCompositeOperation = \"destination-in\";\r\n                context.drawImage(image, 0, 0, width, height);\r\n            }\r\n            this._imageMask = canvas;\r\n        }\r\n        return this._imageMask;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRendererEvent {\r\n    constructor(event, originalPoint, point, bbox) {\r\n        Object.defineProperty(this, \"event\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: event\r\n        });\r\n        Object.defineProperty(this, \"originalPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: originalPoint\r\n        });\r\n        Object.defineProperty(this, \"point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: point\r\n        });\r\n        Object.defineProperty(this, \"bbox\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: bbox\r\n        });\r\n        Object.defineProperty(this, \"id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"simulated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"native\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        if ($utils.supports(\"touchevents\") && event instanceof Touch) {\r\n            this.id = event.identifier;\r\n        }\r\n        else {\r\n            this.id = null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRenderer extends ArrayDisposer {\r\n    constructor(resolution) {\r\n        super();\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"_layerDom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"layers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_dirtyLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"defaultLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.getLayer(0)\r\n        });\r\n        Object.defineProperty(this, \"_ghostLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new GhostLayer()\r\n        });\r\n        Object.defineProperty(this, \"_deferredGhostLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_patternCanvas\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"canvas\")\r\n        });\r\n        Object.defineProperty(this, \"_patternContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._patternCanvas.getContext(\"2d\")\r\n        });\r\n        Object.defineProperty(this, \"_realWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_realHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"interactionsEnabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_colorMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_forceInteractive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_omitTainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO this should store the Id as well\r\n        Object.defineProperty(this, \"_hovering\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Set()\r\n        });\r\n        Object.defineProperty(this, \"_dragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mousedown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_lastPointerMoveEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tapToActivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"tapToActivateTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 3000\r\n        });\r\n        Object.defineProperty(this, \"_touchActive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_touchActiveTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (resolution == null) {\r\n            this.resolution = window.devicePixelRatio;\r\n        }\r\n        else {\r\n            this.resolution = resolution;\r\n        }\r\n        this.view.style.position = \"absolute\";\r\n        this.view.setAttribute(\"aria-hidden\", \"true\");\r\n        this.view.appendChild(this._layerDom);\r\n        this._disposers.push(new Disposer(() => {\r\n            $object.each(this._events, (_key, events) => {\r\n                events.disposer.dispose();\r\n            });\r\n            $array.each(this.layers, (layer) => {\r\n                clearCanvas(layer.view);\r\n                if (layer.exportableView) {\r\n                    clearCanvas(layer.exportableView);\r\n                }\r\n            });\r\n            clearCanvas(this._ghostLayer.view);\r\n            clearCanvas(this._patternCanvas);\r\n        }));\r\n        /*\r\n        this._disposers.push($utils.addEventListener(this._ghostLayer.view, \"click\", (originalEvent: MouseEvent) => {\r\n            const event = this.getEvent(originalEvent);\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n            console.debug(target);\r\n        }));\r\n        */\r\n        // Monitor for possible pixel ratio changes (when page is zoomed)\r\n        this._disposers.push($utils.onZoom(() => {\r\n            if (resolution == null) {\r\n                this.resolution = window.devicePixelRatio;\r\n            }\r\n        }));\r\n        // We need this in order top prevent default touch gestures when dragging\r\n        // draggable elements\r\n        if ($utils.supports(\"touchevents\")) {\r\n            const listener = (ev) => {\r\n                if (this._dragging.length !== 0) {\r\n                    $array.eachContinue(this._dragging, (item) => {\r\n                        if (item.value.shouldCancelTouch()) {\r\n                            ev.preventDefault();\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                // If touch down happends, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            };\r\n            this._disposers.push($utils.addEventListener(window, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchmove\", () => {\r\n                // If touch is moving, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(window, \"click\", (_ev) => {\r\n                this._touchActive = false;\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"click\", (_ev) => {\r\n                window.setTimeout(() => {\r\n                    this._touchActive = true;\r\n                    this._delayTouchDeactivate();\r\n                }, 100);\r\n            }, { passive: true }));\r\n        }\r\n        // Prevent scrolling of the window when hovering on \"wheelable\" object\r\n        if ($utils.supports(\"wheelevents\")) {\r\n            this._disposers.push($utils.addEventListener(this.view, \"wheel\", (ev) => {\r\n                let prevent = false;\r\n                this._hovering.forEach((obj) => {\r\n                    if (obj.wheelable) {\r\n                        prevent = true;\r\n                        return false;\r\n                    }\r\n                });\r\n                if (prevent) {\r\n                    ev.preventDefault();\r\n                }\r\n            }, { passive: false }));\r\n        }\r\n    }\r\n    /*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\r\n        this._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\r\n    });\r\n    */\r\n    resetImageArray() {\r\n        this._ghostLayer.imageArray = undefined;\r\n    }\r\n    _delayTouchDeactivate() {\r\n        if (this._touchActiveTimeout) {\r\n            clearTimeout(this._touchActiveTimeout);\r\n        }\r\n        if (this.tapToActivateTimeout > 0) {\r\n            this._touchActiveTimeout = window.setTimeout(() => {\r\n                this._touchActive = false;\r\n            }, this.tapToActivateTimeout);\r\n        }\r\n    }\r\n    get debugGhostView() {\r\n        return !!this._ghostLayer.view.parentNode;\r\n    }\r\n    set debugGhostView(value) {\r\n        if (value) {\r\n            if (!this._ghostLayer.view.parentNode) {\r\n                this.view.appendChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n        else {\r\n            if (this._ghostLayer.view.parentNode) {\r\n                this._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n    }\r\n    createLinearGradient(x1, y1, x2, y2) {\r\n        return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\r\n    }\r\n    createRadialGradient(x1, y1, radius1, x2, y2, radius2) {\r\n        return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\r\n    }\r\n    createPattern(graphics, background, repetition, width, height) {\r\n        // const patternCanvas = document.createElement(\"canvas\");\r\n        // const patternContext = patternCanvas.getContext(\"2d\")!;\r\n        // patternCanvas.width = width;\r\n        // patternCanvas.height = height;\r\n        // if (fill) {\r\n        // \tpatternContext.fillStyle = fill.toCSS();\r\n        // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\r\n        // }\r\n        // const layer = {\r\n        // \tview: patternCanvas,\r\n        // \tcontext: patternContext,\r\n        // \tvisible: true,\r\n        // \torder: 0,\r\n        // \twidth: width,\r\n        // \theight: height,\r\n        // \tdirty: true\r\n        // };\r\n        // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\r\n        // // patternContext.stroke();\r\n        // image.targetLayer = layer;\r\n        // image.render(layer);\r\n        //this._layerDom.appendChild(patternCanvas);\r\n        this._patternCanvas.width = width;\r\n        this._patternCanvas.height = height;\r\n        this._patternContext.clearRect(0, 0, width, height);\r\n        // patternCanvas.style.width = width * this.resolution + \"px\";\r\n        // patternCanvas.style.height = height * this.resolution + \"px\";\r\n        background.renderDetached(this._patternContext);\r\n        graphics.renderDetached(this._patternContext);\r\n        return this._patternContext.createPattern(this._patternCanvas, repetition);\r\n    }\r\n    makeContainer() {\r\n        return new CanvasContainer(this);\r\n    }\r\n    makeGraphics() {\r\n        return new CanvasGraphics(this);\r\n    }\r\n    makeText(text, style) {\r\n        return new CanvasText(this, text, style);\r\n    }\r\n    makeTextStyle() {\r\n        return new CanvasTextStyle();\r\n    }\r\n    makeRadialText(text, style) {\r\n        return new CanvasRadialText(this, text, style);\r\n    }\r\n    makePicture(image) {\r\n        return new CanvasImage(this, image);\r\n    }\r\n    resizeLayer(layer) {\r\n        layer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resizeGhost() {\r\n        this._ghostLayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resize(realWidth, realHeight, calculatedWidth, calculatedHeight) {\r\n        this._realWidth = realWidth;\r\n        this._realHeight = realHeight;\r\n        this._calculatedWidth = calculatedWidth;\r\n        this._calculatedHeight = calculatedHeight;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                layer.dirty = true;\r\n                this.resizeLayer(layer);\r\n            }\r\n        });\r\n        this.resizeGhost();\r\n        this.view.style.width = calculatedWidth + \"px\";\r\n        this.view.style.height = calculatedHeight + \"px\";\r\n    }\r\n    createDetachedLayer(willReadFrequently = false) {\r\n        const view = document.createElement(\"canvas\");\r\n        const context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently });\r\n        const layer = new CanvasLayer(view, context);\r\n        view.style.position = \"absolute\";\r\n        view.style.top = \"0px\";\r\n        view.style.left = \"0px\";\r\n        return layer;\r\n    }\r\n    getLayerByOrder(order) {\r\n        const layers = this.layers;\r\n        const length = layers.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const layer = layers[i];\r\n            if (layer.order == order) {\r\n                return layer;\r\n            }\r\n        }\r\n    }\r\n    getLayer(order, visible = true) {\r\n        let existingLayer = this.getLayerByOrder(order);\r\n        if (existingLayer) {\r\n            return existingLayer;\r\n        }\r\n        const layer = this.createDetachedLayer(order == 99);\r\n        layer.order = order;\r\n        layer.visible = visible;\r\n        layer.view.className = \"am5-layer-\" + order;\r\n        if (layer.visible) {\r\n            this.resizeLayer(layer);\r\n        }\r\n        const layers = this.layers;\r\n        layers.push(layer);\r\n        layers.sort((a, b) => {\r\n            if (a.order > b.order) {\r\n                return 1;\r\n            }\r\n            else if (a.order < b.order) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        const length = layers.length;\r\n        const layerIndex = $array.indexOf(layers, layer);\r\n        let next;\r\n        for (let i = layerIndex + 1; i < length; i++) {\r\n            if (layers[i].visible) {\r\n                next = layers[i];\r\n                break;\r\n            }\r\n        }\r\n        if (layer.visible) {\r\n            if (next === undefined) {\r\n                this._layerDom.appendChild(layer.view);\r\n            }\r\n            else {\r\n                this._layerDom.insertBefore(layer.view, next.view);\r\n            }\r\n        }\r\n        return layer;\r\n    }\r\n    render(root) {\r\n        this._dirtyLayers.length = 0;\r\n        this._deferredGhostLayers = [];\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                if (layer.dirty && layer.visible) {\r\n                    this._dirtyLayers.push(layer);\r\n                    layer.clear();\r\n                }\r\n            }\r\n        });\r\n        this._ghostLayer.clear();\r\n        root.render({\r\n            inactive: null,\r\n            layer: this.defaultLayer,\r\n        });\r\n        const deferredGhostLayers = this._deferredGhostLayers;\r\n        if (deferredGhostLayers.length) {\r\n            deferredGhostLayers.sort((a, b) => a - b);\r\n            $array.each(deferredGhostLayers, (layerx) => {\r\n                root.render({\r\n                    inactive: null,\r\n                    layer: this.defaultLayer\r\n                }, layerx);\r\n            });\r\n        }\r\n        this._ghostLayer.context.restore();\r\n        //setTimeout(() => {\r\n        // Remove this after the Chrome bug is fixed:\r\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                const context = layer.context;\r\n                context.beginPath();\r\n                context.moveTo(0, 0);\r\n                context.stroke();\r\n            }\r\n        });\r\n        $array.each(this._dirtyLayers, (layer) => {\r\n            layer.context.restore();\r\n            layer.dirty = false;\r\n        });\r\n        //}, 100)\r\n        if (this._hovering.size && this._lastPointerMoveEvent) {\r\n            const { events, target, native } = this._lastPointerMoveEvent;\r\n            //this._mouseMoveThrottler.run();\r\n            $array.each(events, (event) => {\r\n                this._dispatchGlobalMousemove(event, target, native);\r\n            });\r\n        }\r\n    }\r\n    paintId(obj) {\r\n        const id = distributeId(++this._colorId);\r\n        const color = Color.fromHex(id).toCSS();\r\n        this._colorMap[color] = obj;\r\n        return color;\r\n    }\r\n    _removeObject(obj) {\r\n        if (obj._colorId !== undefined) {\r\n            delete this._colorMap[obj._colorId];\r\n        }\r\n    }\r\n    // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\r\n    // \treturn this._colorMap[colorId];\r\n    // }\r\n    _adjustBoundingBox(bbox) {\r\n        const margin = this._ghostLayer.margin;\r\n        return new DOMRect(-margin.left, -margin.top, bbox.width + margin.left + margin.right, bbox.height + margin.top + margin.bottom);\r\n    }\r\n    getEvent(originalEvent, adjustPoint = true) {\r\n        const bbox = this.view.getBoundingClientRect();\r\n        const x = originalEvent.clientX || 0;\r\n        const y = originalEvent.clientY || 0;\r\n        const widthScale = this._calculatedWidth / this._realWidth;\r\n        const heightScale = this._calculatedHeight / this._realHeight;\r\n        const originalPoint = {\r\n            x: x - bbox.left,\r\n            y: y - bbox.top,\r\n        };\r\n        const point = {\r\n            x: (x - (adjustPoint ? bbox.left : 0)) * widthScale,\r\n            y: (y - (adjustPoint ? bbox.top : 0)) * heightScale,\r\n        };\r\n        return new CanvasRendererEvent(originalEvent, originalPoint, point, this._adjustBoundingBox(bbox));\r\n    }\r\n    _getHitTarget(point, bbox, target) {\r\n        if (bbox.width === 0 || bbox.height === 0 || point.x < bbox.left || point.x > bbox.right || point.y < bbox.top || point.y > bbox.bottom) {\r\n            return;\r\n        }\r\n        if (!target || !this._layerDom.contains(target)) {\r\n            return;\r\n        }\r\n        const pixel = this._ghostLayer.getImageData(point, bbox);\r\n        if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\r\n            return false;\r\n        }\r\n        const colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    getObjectAtPoint(point) {\r\n        const data = this._ghostLayer.getImageArray(point);\r\n        if (data[0] === 0 && data[1] === 0 && data[2] === 0) {\r\n            return undefined;\r\n        }\r\n        const colorId = Color.fromRGB(data[0], data[1], data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    _withEvents(key, f) {\r\n        const events = this._events[key];\r\n        if (events !== undefined) {\r\n            events.dispatching = true;\r\n            try {\r\n                f(events);\r\n            }\r\n            finally {\r\n                events.dispatching = false;\r\n                if (events.cleanup) {\r\n                    events.cleanup = false;\r\n                    $array.keepIf(events.callbacks, (callback) => {\r\n                        return !callback.disposed;\r\n                    });\r\n                    if (events.callbacks.length === 0) {\r\n                        events.disposer.dispose();\r\n                        delete this._events[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _dispatchEventAll(key, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return;\r\n        }\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed) {\r\n                    callback.callback.call(callback.context, event);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    _dispatchEvent(key, target, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return false;\r\n        }\r\n        let dispatched = false;\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed && callback.object === target) {\r\n                    callback.callback.call(callback.context, event);\r\n                    dispatched = true;\r\n                }\r\n            });\r\n        });\r\n        return dispatched;\r\n    }\r\n    _dispatchMousedown(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        if (button != 0 && button != 2 && button != 1 && button !== undefined) {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            const id = event.id;\r\n            let dragged = false;\r\n            eachTargets(target, (obj) => {\r\n                const info = { id: id, value: obj };\r\n                this._mousedown.push(info);\r\n                if (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\r\n                    // Only dispatch the first element which matches\r\n                    dragged = true;\r\n                    const has = this._dragging.some((x) => {\r\n                        return x.value === obj && x.id === id;\r\n                    });\r\n                    if (!has) {\r\n                        this._dragging.push(info);\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n    _dispatchGlobalMousemove(originalEvent, originalTarget, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        event.native = native;\r\n        if (target) {\r\n            this._hovering.forEach((obj) => {\r\n                if (!obj.contains(target)) {\r\n                    this._hovering.delete(obj);\r\n                    if (obj.cursorOverStyle) {\r\n                        $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                    }\r\n                    this._dispatchEvent(\"pointerout\", obj, event);\r\n                }\r\n            });\r\n            if (event.native) {\r\n                eachTargets(target, (obj) => {\r\n                    if (!this._hovering.has(obj)) {\r\n                        this._hovering.add(obj);\r\n                        if (obj.cursorOverStyle) {\r\n                            obj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\r\n                            $utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\r\n                        }\r\n                        this._dispatchEvent(\"pointerover\", obj, event);\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n            //} else if (target === false) {\r\n        }\r\n        else {\r\n            this._hovering.forEach((obj) => {\r\n                if (obj.cursorOverStyle) {\r\n                    $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                }\r\n                this._dispatchEvent(\"pointerout\", obj, event);\r\n            });\r\n            this._hovering.clear();\r\n        }\r\n        this._dispatchEventAll(\"globalpointermove\", event);\r\n    }\r\n    removeHovering(graphics) {\r\n        this._hovering.delete(graphics);\r\n        if (graphics.cursorOverStyle) {\r\n            $utils.setStyle(document.body, \"cursor\", graphics._replacedCursorStyle);\r\n        }\r\n    }\r\n    _dispatchGlobalMouseup(originalEvent, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        event.native = native;\r\n        //const target = this._getHitTarget(event.originalPoint);\r\n        this._dispatchEventAll(\"globalpointerup\", event);\r\n    }\r\n    _dispatchDragMove(originalEvent) {\r\n        if (this._dragging.length !== 0) {\r\n            const event = this.getEvent(originalEvent);\r\n            const id = event.id;\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointermove\", obj.value, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchDragEnd(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        let clickevent;\r\n        if (button == 0 || button === undefined) {\r\n            clickevent = \"click\";\r\n        }\r\n        else if (button == 2) {\r\n            clickevent = \"rightclick\";\r\n        }\r\n        else if (button == 1) {\r\n            clickevent = \"middleclick\";\r\n        }\r\n        else {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const id = event.id;\r\n        if (this._mousedown.length !== 0) {\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n            if (target) {\r\n                this._mousedown.forEach((obj) => {\r\n                    if (obj.id === id && obj.value.contains(target)) {\r\n                        this._dispatchEvent(clickevent, obj.value, event);\r\n                    }\r\n                });\r\n            }\r\n            this._mousedown.length = 0;\r\n        }\r\n        if (this._dragging.length !== 0) {\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointerup\", obj.value, event);\r\n                }\r\n            });\r\n            this._dragging.length = 0;\r\n        }\r\n    }\r\n    _dispatchDoubleClick(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"dblclick\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchWheel(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"wheel\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _makeSharedEvent(key, f) {\r\n        if (this._listeners[key] === undefined) {\r\n            const listener = f();\r\n            this._listeners[key] = new CounterDisposer(() => {\r\n                delete this._listeners[key];\r\n                listener.dispose();\r\n            });\r\n        }\r\n        return this._listeners[key].increment();\r\n    }\r\n    _onPointerEvent(name, f) {\r\n        let native = false;\r\n        let timer = null;\r\n        function clear() {\r\n            timer = null;\r\n            native = false;\r\n        }\r\n        return new MultiDisposer([\r\n            new Disposer(() => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                clear();\r\n            }),\r\n            $utils.addEventListener(this.view, $utils.getRendererEvent(name), (_) => {\r\n                native = true;\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                timer = window.setTimeout(clear, 0);\r\n            }),\r\n            onPointerEvent(window, name, (ev, target) => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                f(ev, target, native);\r\n                native = false;\r\n            }),\r\n        ]);\r\n    }\r\n    // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\r\n    _initEvent(key) {\r\n        switch (key) {\r\n            case \"globalpointermove\":\r\n            case \"pointerover\":\r\n            case \"pointerout\":\r\n                return this._makeSharedEvent(\"pointermove\", () => {\r\n                    const listener = (events, target, native) => {\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMousemove(event, target, native);\r\n                        });\r\n                    };\r\n                    return new MultiDisposer([\r\n                        this._onPointerEvent(\"pointerdown\", listener),\r\n                        this._onPointerEvent(\"pointermove\", listener),\r\n                    ]);\r\n                });\r\n            case \"globalpointerup\":\r\n                return this._makeSharedEvent(\"pointerup\", () => {\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"click\":\r\n            case \"rightclick\":\r\n            case \"middleclick\":\r\n            case \"pointerdown\":\r\n            /*\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    return this._onPointerEvent(\"pointerdown\", (event, target, native) => {\r\n                        this._lastPointerMoveEvent = { event, target, native };\r\n                        this._dispatchMousedown(event)\r\n                    });\r\n                });\r\n            */\r\n            case \"pointermove\":\r\n            case \"pointerup\":\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    //const throttler = new Throttler();\r\n                    const mousedown = this._onPointerEvent(\"pointerdown\", (events, target) => {\r\n                        $array.each(events, (ev) => {\r\n                            this._dispatchMousedown(ev, target);\r\n                        });\r\n                    });\r\n                    // TODO handle throttling properly for multitouch\r\n                    const mousemove = this._onPointerEvent(\"pointermove\", (ev) => {\r\n                        //throttler.throttle(() => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragMove(ev);\r\n                        });\r\n                        //});\r\n                    });\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mousedown.dispose();\r\n                        mousemove.dispose();\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"dblclick\":\r\n                return this._makeSharedEvent(\"dblclick\", () => {\r\n                    return this._onPointerEvent(\"dblclick\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDoubleClick(ev, target);\r\n                        });\r\n                    });\r\n                });\r\n            case \"wheel\":\r\n                return this._makeSharedEvent(\"wheel\", () => {\r\n                    return $utils.addEventListener(this.view, $utils.getRendererEvent(\"wheel\"), (event) => {\r\n                        this._dispatchWheel(event, $utils.getEventTarget(event));\r\n                    }, { passive: false });\r\n                });\r\n        }\r\n    }\r\n    _addEvent(object, key, callback, context) {\r\n        let events = this._events[key];\r\n        if (events === undefined) {\r\n            events = this._events[key] = {\r\n                disposer: this._initEvent(key),\r\n                callbacks: [],\r\n                dispatching: false,\r\n                cleanup: false,\r\n            };\r\n        }\r\n        const listener = { object, context, callback, disposed: false };\r\n        events.callbacks.push(listener);\r\n        return new Disposer(() => {\r\n            listener.disposed = true;\r\n            if (events.dispatching) {\r\n                events.cleanup = true;\r\n            }\r\n            else {\r\n                $array.removeFirst(events.callbacks, listener);\r\n                if (events.callbacks.length === 0) {\r\n                    events.disposer.dispose();\r\n                    delete this._events[key];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getCanvas(root, options) {\r\n        // Make sure everything is rendered\r\n        this.render(root);\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        let scale = this.resolution;\r\n        let canvasWidth = Math.floor(this._calculatedWidth * this.resolution);\r\n        let canvasHeight = Math.floor(this._calculatedHeight * this.resolution);\r\n        // Check if we need to scale\r\n        if (options.minWidth && (options.minWidth > canvasWidth)) {\r\n            let minScale = options.minWidth / canvasWidth;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.minHeight && (options.minHeight > canvasHeight)) {\r\n            let minScale = options.minHeight / canvasHeight;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxWidth && (options.maxWidth < canvasWidth)) {\r\n            let maxScale = options.maxWidth / canvasWidth;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxHeight && (options.maxHeight > canvasHeight)) {\r\n            let maxScale = options.maxHeight / canvasHeight;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        // Check if we need to compensate for pixel ratio\r\n        if (options.maintainPixelRatio) {\r\n            scale /= this.resolution;\r\n        }\r\n        // Init list canvases to remove from DOM after export\r\n        const canvases = [];\r\n        // Set up new canvas for export\r\n        let forceRender = false;\r\n        const canvas = document.createElement(\"canvas\");\r\n        if (scale != this.resolution) {\r\n            forceRender = true;\r\n            canvasWidth = canvasWidth * scale / this.resolution;\r\n            canvasHeight = canvasHeight * scale / this.resolution;\r\n        }\r\n        canvas.width = canvasWidth;\r\n        canvas.height = canvasHeight;\r\n        // Add to DOM so it inherits CSS\r\n        canvas.style.position = \"fixed\";\r\n        canvas.style.top = \"-10000px\";\r\n        this.view.appendChild(canvas);\r\n        canvases.push(canvas);\r\n        // Context\r\n        const context = canvas.getContext(\"2d\");\r\n        let width = 0;\r\n        let height = 0;\r\n        let needRerender = false;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                if (layer.tainted || forceRender) {\r\n                    needRerender = true;\r\n                    layer.exportableView = layer.view;\r\n                    layer.exportableContext = layer.context;\r\n                    layer.view = document.createElement(\"canvas\");\r\n                    // Add to DOM so it inherits CSS\r\n                    layer.view.style.position = \"fixed\";\r\n                    layer.view.style.top = \"-10000px\";\r\n                    this.view.appendChild(layer.view);\r\n                    canvases.push(layer.view);\r\n                    let extraX = 0;\r\n                    let extraY = 0;\r\n                    if (layer.margin) {\r\n                        extraX += layer.margin.left || 0 + layer.margin.right || 0;\r\n                        extraY += layer.margin.top || 0 + layer.margin.bottom || 0;\r\n                    }\r\n                    layer.view.width = canvasWidth + extraX;\r\n                    layer.view.height = canvasHeight + extraY;\r\n                    layer.context = layer.view.getContext(\"2d\");\r\n                    layer.dirty = true;\r\n                    layer.scale = scale;\r\n                }\r\n            }\r\n        });\r\n        if (needRerender) {\r\n            this._omitTainted = true;\r\n            this.render(root);\r\n            this._omitTainted = false;\r\n        }\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                // Layer is fine. Just plop it into our target canvas\r\n                let x = 0;\r\n                let y = 0;\r\n                if (layer.margin) {\r\n                    x = -(layer.margin.left || 0) * this.resolution;\r\n                    y = -(layer.margin.top || 0) * this.resolution;\r\n                }\r\n                context.drawImage(layer.view, x, y);\r\n                // Restore layer original canvas\r\n                if (layer.exportableView) {\r\n                    layer.view = layer.exportableView;\r\n                    layer.exportableView = undefined;\r\n                }\r\n                if (layer.exportableContext) {\r\n                    layer.context = layer.exportableContext;\r\n                    layer.exportableContext = undefined;\r\n                }\r\n                if (width < layer.view.clientWidth) {\r\n                    width = layer.view.clientWidth;\r\n                }\r\n                if (height < layer.view.clientHeight) {\r\n                    height = layer.view.clientHeight;\r\n                }\r\n                layer.scale = undefined;\r\n            }\r\n        });\r\n        canvas.style.width = width + \"px\";\r\n        canvas.style.height = height + \"px\";\r\n        $array.each(canvases, (canvas) => {\r\n            canvas.style.position = \"\";\r\n            canvas.style.top = \"\";\r\n            this.view.removeChild(canvas);\r\n        });\r\n        return canvas;\r\n    }\r\n}\r\nclass GhostLayer {\r\n    constructor() {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            }\r\n        });\r\n        Object.defineProperty(this, \"_resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"imageArray\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.view = document.createElement(\"canvas\");\r\n        this.context = this.view.getContext(\"2d\", { alpha: false, willReadFrequently: true });\r\n        this.context.imageSmoothingEnabled = false;\r\n        this.view.style.position = \"absolute\";\r\n        this.view.style.top = \"0px\";\r\n        this.view.style.left = \"0px\";\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        this._resolution = resolution;\r\n        canvasWidth += (this.margin.left + this.margin.right);\r\n        canvasHeight += (this.margin.top + this.margin.bottom);\r\n        // TODO this should take into account calculateSize\r\n        domWidth += (this.margin.left + this.margin.right);\r\n        domHeight += (this.margin.top + this.margin.bottom);\r\n        this.view.style.left = -this.margin.left + \"px\";\r\n        this.view.style.top = -this.margin.top + \"px\";\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    getImageData(point, bbox) {\r\n        return this.context.getImageData(\r\n        // TODO should this round ?\r\n        Math.round(((point.x - bbox.left) / bbox.width) * this._width), Math.round(((point.y - bbox.top) / bbox.height) * this._height), 1, 1);\r\n    }\r\n    getImageArray(point) {\r\n        if (!this.imageArray) {\r\n            this.imageArray = this.context.getImageData(0, 0, this._width, this._height).data;\r\n        }\r\n        const data = this.imageArray;\r\n        const x = Math.round(point.x * this._resolution);\r\n        const y = Math.round(point.y * this._resolution);\r\n        const i = (y * this._width + x) * 4;\r\n        return [data[i], data[i + 1], data[i + 2], data[i + 3]];\r\n    }\r\n    setMargin(layers) {\r\n        this.margin.left = 0;\r\n        this.margin.right = 0;\r\n        this.margin.top = 0;\r\n        this.margin.bottom = 0;\r\n        $array.each(layers, (layer) => {\r\n            if (layer.margin) {\r\n                this.margin.left = Math.max(this.margin.left, layer.margin.left);\r\n                this.margin.right = Math.max(this.margin.right, layer.margin.right);\r\n                this.margin.top = Math.max(this.margin.top, layer.margin.top);\r\n                this.margin.bottom = Math.max(this.margin.bottom, layer.margin.bottom);\r\n            }\r\n        });\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.fillStyle = '#000';\r\n        this.context.fillRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasLayer {\r\n    constructor(view, context) {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"order\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportableView\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"exportableContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this.view = view;\r\n        this.context = context;\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.width != null) {\r\n            canvasWidth = this.width;\r\n            domWidth = this.width;\r\n        }\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.height != null) {\r\n            canvasHeight = this.height;\r\n            domHeight = this.height;\r\n        }\r\n        if (this.margin) {\r\n            canvasWidth += (this.margin.left + this.margin.right);\r\n            canvasHeight += (this.margin.top + this.margin.bottom);\r\n            // TODO this should take into account calculateSize\r\n            domWidth += (this.margin.left + this.margin.right);\r\n            domHeight += (this.margin.top + this.margin.bottom);\r\n            this.view.style.left = -this.margin.left + \"px\";\r\n            this.view.style.top = -this.margin.top + \"px\";\r\n        }\r\n        else {\r\n            this.view.style.left = \"0px\";\r\n            this.view.style.top = \"0px\";\r\n        }\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.clearRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n", "import { AnimationState } from \"./util/Animation\";\r\nimport { Container } from \"./render/Container\";\r\nimport { Text } from \"./render/Text\";\r\nimport { HorizontalLayout } from \"./render/HorizontalLayout\";\r\nimport { VerticalLayout } from \"./render/VerticalLayout\";\r\nimport { GridLayout } from \"./render/GridLayout\";\r\nimport { Disposer } from \"./util/Disposer\";\r\nimport { ResizeSensor } from \"./util/ResizeSensor\";\r\nimport { InterfaceColors } from \"./util/InterfaceColors\";\r\nimport { Graphics } from \"./render/Graphics\";\r\nimport { Rectangle } from \"./render/Rectangle\";\r\nimport { Tooltip } from \"./render/Tooltip\";\r\nimport { NumberFormatter } from \"./util/NumberFormatter\";\r\nimport { DateFormatter } from \"./util/DateFormatter\";\r\nimport { DurationFormatter } from \"./util/DurationFormatter\";\r\nimport { Language } from \"./util/Language\";\r\nimport { EventDispatcher } from \"./util/EventDispatcher\";\r\nimport { DefaultTheme } from \"../themes/DefaultTheme\";\r\nimport { CanvasRenderer } from \"./render/backend/CanvasRenderer\";\r\nimport { p100, percent, isPercent, Percent } from \"./util/Percent\";\r\nimport { color } from \"./util/Color\";\r\nimport { populateString } from \"./util/PopulateString\";\r\nimport { registry } from \"./Registry\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\nimport * as $object from \"./util/Object\";\r\nimport * as $utils from \"./util/Utils\";\r\nimport * as $type from \"./util/Type\";\r\nimport en from \"../../locales/en\";\r\nfunction rAF(fps, callback) {\r\n    if (fps == null) {\r\n        requestAnimationFrame(callback);\r\n    }\r\n    else {\r\n        setTimeout(() => {\r\n            requestAnimationFrame(callback);\r\n        }, 1000 / fps);\r\n    }\r\n}\r\n// TODO implement Disposer\r\n/**\r\n * Root element of the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\r\n */\r\nexport class Root {\r\n    constructor(id, settings = {}, isReal) {\r\n        /**\r\n         * A reference to original chart container (div element).\r\n         */\r\n        Object.defineProperty(this, \"dom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_inner\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPositions\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_ticker\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_tickers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_updateTick\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        /**\r\n         * Root's event dispatcher.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n         */\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        /**\r\n         * @ignore\r\n         * @todo needs description\r\n         */\r\n        Object.defineProperty(this, \"animationTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_animations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rootContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Main content container.\r\n         */\r\n        Object.defineProperty(this, \"container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[Container]] used to display tooltips in.\r\n         */\r\n        Object.defineProperty(this, \"tooltipContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipContainerSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Locale-related\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"language\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Language.new(this, {})\r\n        });\r\n        /**\r\n         * Locale used by the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\r\n         */\r\n        Object.defineProperty(this, \"locale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: en\r\n        });\r\n        // Date-time related\r\n        /**\r\n         * Use UTC when formatting date/time.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#utc-and-time-zones} for more info\r\n         */\r\n        Object.defineProperty(this, \"utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * If set, will format date/time in specific time zone.\r\n         *\r\n         * The value should be named time zone, e.g.:\r\n         * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\r\n         *\r\n         * NOTE: Using time zone feature may noticeable affect performance of the\r\n         * chart, especially with large data sets, since every single date will need\r\n         * to be recalculated.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#time-zone} for more info\r\n         * @since 5.1.0\r\n         */\r\n        Object.defineProperty(this, \"timezone\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * The maximum FPS that the Root will run at.\r\n         *\r\n         * If `undefined` it will run at the highest FPS.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\r\n         */\r\n        Object.defineProperty(this, \"fps\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Number formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n         */\r\n        Object.defineProperty(this, \"numberFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: NumberFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Date/time formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"dateFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DateFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Duration formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"durationFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DurationFormatter.new(this, {})\r\n        });\r\n        // Accessibility\r\n        /**\r\n         * Global tab index for using for the whole chart\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n         */\r\n        Object.defineProperty(this, \"tabindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        //@todo maybe make this better\r\n        Object.defineProperty(this, \"_tabindexes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_a11yD\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusedSprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isShift\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_keyboardDragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_readerAlertElement\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_logo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDiv\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Used for dynamically-created CSS and JavaScript with strict source policies.\r\n         */\r\n        Object.defineProperty(this, \"nonce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Special color set to be used for various controls.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\r\n         */\r\n        Object.defineProperty(this, \"interfaceColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * An instance of vertical layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"verticalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: VerticalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of horizontal layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default HorizontalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"horizontalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: HorizontalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of grid layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"gridLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: GridLayout.new(this, {})\r\n        });\r\n        Object.defineProperty(this, \"_paused\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates whether chart should resized automatically when parent container\r\n         * width and/or height changes.\r\n         *\r\n         * If disabled (`autoResize = false`) you can make the chart resize manually\r\n         * by calling root element's `resize()` method.\r\n         */\r\n        Object.defineProperty(this, \"autoResize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_fontHash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"\"\r\n        });\r\n        Object.defineProperty(this, \"_isDisposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_resizeSensorDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltips\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_htmlElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlEnabledContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         *\r\n         * @since 5.11.0\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n        if (settings.accessible == false) {\r\n            this._a11yD = true;\r\n        }\r\n        if (settings.useSafeResolution == null) {\r\n            settings.useSafeResolution = true;\r\n        }\r\n        let resolution;\r\n        if (settings.useSafeResolution) {\r\n            resolution = $utils.getSafeResolution();\r\n        }\r\n        this._renderer = new CanvasRenderer(resolution);\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        $array.each(registry.rootElements, (root) => {\r\n            if (root.dom === dom) {\r\n                throw new Error(\"You cannot have multiple Roots on the same DOM node\");\r\n            }\r\n        });\r\n        this.interfaceColors = InterfaceColors.new(this, {});\r\n        if (dom === null) {\r\n            throw new Error(\"Could not find HTML element with id `\" + id + \"`\");\r\n        }\r\n        this.dom = dom;\r\n        let inner = document.createElement(\"div\");\r\n        inner.style.position = \"relative\";\r\n        inner.style.width = \"100%\";\r\n        inner.style.height = \"100%\";\r\n        dom.appendChild(inner);\r\n        const tooltipContainerBounds = settings.tooltipContainerBounds;\r\n        if (tooltipContainerBounds) {\r\n            this._tooltipContainerSettings = tooltipContainerBounds;\r\n        }\r\n        this._inner = inner;\r\n        this._updateComputedStyles();\r\n        registry.rootElements.push(this);\r\n    }\r\n    static new(id, settings) {\r\n        const root = new Root(id, settings, true);\r\n        root._init();\r\n        return root;\r\n    }\r\n    moveDOM(id) {\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        if (dom) {\r\n            while (this.dom.childNodes.length > 0) {\r\n                dom.appendChild(this.dom.childNodes[0]);\r\n            }\r\n            this.dom = dom;\r\n            this._initResizeSensor();\r\n            this.resize();\r\n        }\r\n    }\r\n    _handleLogo() {\r\n        if (this._logo) {\r\n            const w = this.dom.offsetWidth;\r\n            const h = this.dom.offsetHeight;\r\n            if ((w <= 150) || (h <= 60)) {\r\n                this._logo.hide();\r\n            }\r\n            else {\r\n                this._logo.show();\r\n            }\r\n        }\r\n    }\r\n    _showBranding() {\r\n        if (!this._logo) {\r\n            const logo = this.tooltipContainer.children.push(Container.new(this, {\r\n                interactive: true,\r\n                interactiveChildren: false,\r\n                position: \"absolute\",\r\n                setStateOnChildren: true,\r\n                paddingTop: 9,\r\n                paddingRight: 9,\r\n                paddingBottom: 9,\r\n                paddingLeft: 9,\r\n                scale: .6,\r\n                y: percent(100),\r\n                centerY: p100,\r\n                tooltipText: \"Created using amCharts 5\",\r\n                tooltipX: p100,\r\n                cursorOverStyle: \"pointer\",\r\n                background: Rectangle.new(this, {\r\n                    fill: color(0x474758),\r\n                    fillOpacity: 0,\r\n                    tooltipY: 5\r\n                })\r\n            }));\r\n            const tooltip = Tooltip.new(this, {\r\n                pointerOrientation: \"horizontal\",\r\n                paddingTop: 4,\r\n                paddingRight: 7,\r\n                paddingBottom: 4,\r\n                paddingLeft: 7\r\n            });\r\n            tooltip.label.setAll({\r\n                fontSize: 12\r\n            });\r\n            tooltip.get(\"background\").setAll({\r\n                fill: this.interfaceColors.get(\"background\"),\r\n                stroke: this.interfaceColors.get(\"grid\"),\r\n                strokeOpacity: 0.3\r\n            });\r\n            logo.set(\"tooltip\", tooltip);\r\n            logo.events.on(\"click\", () => {\r\n                window.open(\"https://www.amcharts.com/\", \"_blank\");\r\n            });\r\n            logo.states.create(\"hover\", {});\r\n            const m = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0xcccccc),\r\n                strokeWidth: 3,\r\n                svgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\r\n            }));\r\n            m.states.create(\"hover\", { stroke: color(0x3CABFF) });\r\n            const a = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0x888888),\r\n                strokeWidth: 3,\r\n                svgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\r\n            }));\r\n            a.states.create(\"hover\", { stroke: color(0x474758) });\r\n            //logo.set(\"tooltip\", this._tooltip);\r\n            //logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\r\n            this._logo = logo;\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _getRealSize() {\r\n        return this.dom.getBoundingClientRect();\r\n    }\r\n    _getCalculatedSize(rect) {\r\n        if (this._settings.calculateSize) {\r\n            return this._settings.calculateSize(rect);\r\n        }\r\n        else {\r\n            return {\r\n                width: rect.width,\r\n                height: rect.height,\r\n            };\r\n        }\r\n    }\r\n    _init() {\r\n        const settings = this._settings;\r\n        if (settings.accessible !== false) {\r\n            if (settings.focusable) {\r\n                this._inner.setAttribute(\"focusable\", \"true\");\r\n                this._inner.setAttribute(\"tabindex\", this.tabindex + \"\");\r\n            }\r\n            if (settings.ariaLabel) {\r\n                this._inner.setAttribute(\"aria-label\", settings.ariaLabel);\r\n            }\r\n            if (settings.role) {\r\n                this._inner.setAttribute(\"role\", settings.role);\r\n            }\r\n        }\r\n        const renderer = this._renderer;\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const width = Math.floor(size.width);\r\n        const height = Math.floor(size.height);\r\n        const realWidth = Math.floor(rect.width);\r\n        const realHeight = Math.floor(rect.height);\r\n        const rootContainer = Container.new(this, {\r\n            visible: true,\r\n            width: width,\r\n            height: height,\r\n        });\r\n        this._rootContainer = rootContainer;\r\n        this._rootContainer._defaultThemes.push(DefaultTheme.new(this));\r\n        const container = rootContainer.children.push(Container.new(this, { visible: true, width: p100, height: p100 }));\r\n        this.container = container;\r\n        renderer.resize(realWidth, realHeight, width, height);\r\n        //@todo: better appendChild - refer\r\n        this._inner.appendChild(renderer.view);\r\n        // TODO: TMP TMP TMP for testing only, remove\r\n        //renderer.debugGhostView = true;\r\n        this._initResizeSensor();\r\n        // HTML content holder\r\n        const htmlElementContainer = document.createElement(\"div\");\r\n        this._htmlElementContainer = htmlElementContainer;\r\n        htmlElementContainer.className = \"am5-html-container\";\r\n        htmlElementContainer.style.position = \"absolute\";\r\n        htmlElementContainer.style.pointerEvents = \"none\";\r\n        if (!this._tooltipContainerSettings) {\r\n            htmlElementContainer.style.overflow = \"hidden\";\r\n        }\r\n        this._inner.appendChild(htmlElementContainer);\r\n        if (this._a11yD !== true) {\r\n            // Create element which is used to make announcements to screen reader\r\n            const readerAlertElement = document.createElement(\"div\");\r\n            readerAlertElement.className = \"am5-reader-container\";\r\n            readerAlertElement.setAttribute(\"role\", \"alert\");\r\n            // readerAlertElement.style.zIndex = \"-100000\";\r\n            // readerAlertElement.style.opacity = \"0\";\r\n            // readerAlertElement.style.top = \"0\";\r\n            readerAlertElement.style.position = \"absolute\";\r\n            readerAlertElement.style.width = \"1px\";\r\n            readerAlertElement.style.height = \"1px\";\r\n            readerAlertElement.style.overflow = \"hidden\";\r\n            readerAlertElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n            this._readerAlertElement = readerAlertElement;\r\n            this._inner.appendChild(this._readerAlertElement);\r\n            const focusElementContainer = document.createElement(\"div\");\r\n            focusElementContainer.className = \"am5-focus-container\";\r\n            focusElementContainer.style.position = \"absolute\";\r\n            focusElementContainer.style.pointerEvents = \"none\";\r\n            focusElementContainer.style.top = \"0px\";\r\n            focusElementContainer.style.left = \"0px\";\r\n            focusElementContainer.style.overflow = \"hidden\";\r\n            focusElementContainer.style.width = width + \"px\";\r\n            focusElementContainer.style.height = height + \"px\";\r\n            focusElementContainer.setAttribute(\"role\", \"graphics-document\");\r\n            $utils.setInteractive(focusElementContainer, false);\r\n            this._focusElementContainer = focusElementContainer;\r\n            this._inner.appendChild(this._focusElementContainer);\r\n            const tooltipElementContainer = document.createElement(\"div\");\r\n            this._tooltipElementContainer = tooltipElementContainer;\r\n            tooltipElementContainer.className = \"am5-tooltip-container\";\r\n            this._inner.appendChild(tooltipElementContainer);\r\n            // Add keyboard events for accessibility, e.g. simulating drag with arrow\r\n            // keys and click with ENTER\r\n            if ($utils.supports(\"keyboardevents\")) {\r\n                this._disposers.push($utils.addEventListener(window, \"keydown\", (ev) => {\r\n                    const eventKey = $utils.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = true;\r\n                    }\r\n                    else if (eventKey == \"Tab\") {\r\n                        this._isShift = ev.shiftKey;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(window, \"keyup\", (ev) => {\r\n                    const eventKey = $utils.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = false;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"click\", () => {\r\n                    // Some screen readers convert ENTER (and some SPACE) press whil on\r\n                    // focused element to a \"click\" event, preventing actual \"keydown\"\r\n                    // event from firing. We're using this \"click\" event to still\r\n                    // generate internal click events.\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\r\n                        if (announceText !== \"\") {\r\n                            this.readerAlert(announceText);\r\n                        }\r\n                        const downEvent = renderer.getEvent(new MouseEvent(\"click\"));\r\n                        focusedSprite.events.dispatch(\"click\", {\r\n                            type: \"click\",\r\n                            originalEvent: downEvent.event,\r\n                            point: downEvent.point,\r\n                            simulated: true,\r\n                            target: focusedSprite\r\n                        });\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keydown\", (ev) => {\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        if (ev.key == \"Escape\") {\r\n                            // ESC pressed - lose current focus\r\n                            $utils.blur();\r\n                            this._focusedSprite = undefined;\r\n                        }\r\n                        let dragOffsetX = 0;\r\n                        let dragOffsetY = 0;\r\n                        // TODO: figure out if using bogus MouseEvent is fine, or it will\r\n                        // fail on some platforms\r\n                        const eventKey = $utils.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"Enter\":\r\n                            case \" \":\r\n                                const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\r\n                                if (announceText !== \"\") {\r\n                                    this.readerAlert(announceText);\r\n                                }\r\n                                if (eventKey == \" \" && focusedSprite.get(\"role\") != \"checkbox\") {\r\n                                    return;\r\n                                }\r\n                                ev.preventDefault();\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mouse\"));\r\n                                focusedSprite.events.dispatch(\"click\", {\r\n                                    type: \"click\",\r\n                                    originalEvent: downEvent.event,\r\n                                    point: downEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                                return;\r\n                            case \"ArrowLeft\":\r\n                                dragOffsetX = -6;\r\n                                break;\r\n                            case \"ArrowRight\":\r\n                                dragOffsetX = 6;\r\n                                break;\r\n                            case \"ArrowUp\":\r\n                                dragOffsetY = -6;\r\n                                break;\r\n                            case \"ArrowDown\":\r\n                                dragOffsetY = 6;\r\n                                break;\r\n                            default:\r\n                                return;\r\n                        }\r\n                        if (dragOffsetX != 0 || dragOffsetY != 0) {\r\n                            ev.preventDefault();\r\n                            if (!focusedSprite.isDragging()) {\r\n                                // Start dragging\r\n                                this._keyboardDragPoint = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\r\n                                    clientX: 0,\r\n                                    clientY: 0\r\n                                }));\r\n                                downEvent.point = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                if (focusedSprite.events.isEnabled(\"pointerdown\")) {\r\n                                    focusedSprite.events.dispatch(\"pointerdown\", {\r\n                                        type: \"pointerdown\",\r\n                                        originalEvent: downEvent.event,\r\n                                        point: downEvent.point,\r\n                                        simulated: true,\r\n                                        target: focusedSprite\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Move focus marker\r\n                                //this._positionFocusElement(focusedSprite);\r\n                            }\r\n                            // Move incrementally\r\n                            const dragPoint = this._keyboardDragPoint;\r\n                            dragPoint.x += dragOffsetX;\r\n                            dragPoint.y += dragOffsetY;\r\n                            const moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\r\n                                clientX: dragPoint.x,\r\n                                clientY: dragPoint.y\r\n                            }), false);\r\n                            if (focusedSprite.events.isEnabled(\"globalpointermove\")) {\r\n                                focusedSprite.events.dispatch(\"globalpointermove\", {\r\n                                    type: \"globalpointermove\",\r\n                                    originalEvent: moveEvent.event,\r\n                                    point: moveEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keyup\", (ev) => {\r\n                    if (this._focusedSprite) {\r\n                        const focusedSprite = this._focusedSprite;\r\n                        const eventKey = $utils.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"ArrowLeft\":\r\n                            case \"ArrowRight\":\r\n                            case \"ArrowUp\":\r\n                            case \"ArrowDown\":\r\n                                if (focusedSprite.isDragging()) {\r\n                                    // Simulate drag stop\r\n                                    const dragPoint = this._keyboardDragPoint;\r\n                                    const upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\r\n                                        clientX: dragPoint.x,\r\n                                        clientY: dragPoint.y\r\n                                    }));\r\n                                    if (focusedSprite.events.isEnabled(\"globalpointerup\")) {\r\n                                        focusedSprite.events.dispatch(\"globalpointerup\", {\r\n                                            type: \"globalpointerup\",\r\n                                            originalEvent: upEvent.event,\r\n                                            point: upEvent.point,\r\n                                            simulated: true,\r\n                                            target: focusedSprite\r\n                                        });\r\n                                    }\r\n                                    //this._positionFocusElement(focusedSprite);\r\n                                    this._keyboardDragPoint = undefined;\r\n                                    // @todo dispatch mouseup event instead of calling dragStop?\r\n                                    // this._dispatchEvent(\"globalpointerup\", target, upEvent);\r\n                                    return;\r\n                                }\r\n                                else if (focusedSprite.get(\"focusableGroup\")) {\r\n                                    // Find next item in focusable group\r\n                                    const group = focusedSprite.get(\"focusableGroup\");\r\n                                    const items = this._tabindexes.filter((item) => {\r\n                                        return item.get(\"focusableGroup\") == group && item.getPrivate(\"focusable\") !== false && item.isVisibleDeep() ? true : false;\r\n                                    });\r\n                                    let index = items.indexOf(focusedSprite);\r\n                                    const lastIndex = items.length - 1;\r\n                                    index += (eventKey == \"ArrowRight\" || eventKey == \"ArrowDown\") ? 1 : -1;\r\n                                    if (index < 0) {\r\n                                        index = lastIndex;\r\n                                    }\r\n                                    else if (index > lastIndex) {\r\n                                        index = 0;\r\n                                    }\r\n                                    $utils.focus(items[index].getPrivate(\"focusElement\").dom);\r\n                                }\r\n                                break;\r\n                            case \"Tab\":\r\n                                const group = focusedSprite.get(\"focusableGroup\");\r\n                                if (group && this._isShift) {\r\n                                    this._focusNext(focusedSprite.getPrivate(\"focusElement\").dom, -1, group);\r\n                                    return;\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        this._startTicker();\r\n        this.setThemes([]);\r\n        this._addTooltip();\r\n        if (!this._hasLicense()) {\r\n            this._showBranding();\r\n        }\r\n    }\r\n    _initResizeSensor() {\r\n        if (this._resizeSensorDisposer) {\r\n            this._resizeSensorDisposer.dispose();\r\n        }\r\n        this._resizeSensorDisposer = new ResizeSensor(this.dom, () => {\r\n            if (this.autoResize) {\r\n                this.resize();\r\n            }\r\n        });\r\n        this._disposers.push(this._resizeSensorDisposer);\r\n    }\r\n    /**\r\n     * If automatic resizing of char is disabled (`root.autoResize = false`), it\r\n     * can be resized manually by calling this method.\r\n     */\r\n    resize() {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const w = Math.floor(size.width);\r\n        const h = Math.floor(size.height);\r\n        if (w > 0 && h > 0) {\r\n            const realWidth = Math.floor(rect.width);\r\n            const realHeight = Math.floor(rect.height);\r\n            const htmlElementContainer = this._htmlElementContainer;\r\n            htmlElementContainer.style.width = w + \"px\";\r\n            htmlElementContainer.style.height = h + \"px\";\r\n            if (this._a11yD !== true) {\r\n                const focusElementContainer = this._focusElementContainer;\r\n                focusElementContainer.style.width = w + \"px\";\r\n                focusElementContainer.style.height = h + \"px\";\r\n            }\r\n            this._renderer.resize(realWidth, realHeight, w, h);\r\n            const rootContainer = this._rootContainer;\r\n            rootContainer.setPrivate(\"width\", w);\r\n            rootContainer.setPrivate(\"height\", h);\r\n            this._render();\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _render() {\r\n        this._renderer.render(this._rootContainer._display);\r\n        if (this._focusElementDirty) {\r\n            this._updateCurrentFocus();\r\n            this._focusElementDirty = false;\r\n        }\r\n    }\r\n    _runTickers(currentTime) {\r\n        $array.each(this._tickers, (f) => {\r\n            f(currentTime);\r\n        });\r\n    }\r\n    _runAnimations(currentTime) {\r\n        let running = 0;\r\n        $array.keepIf(this._animations, (animation) => {\r\n            const state = animation._runAnimation(currentTime);\r\n            if (state === AnimationState.Stopped) {\r\n                return false;\r\n            }\r\n            else if (state === AnimationState.Playing) {\r\n                ++running;\r\n                return true;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n        this._isDirtyAnimation = false;\r\n        return running === 0;\r\n    }\r\n    _runDirties() {\r\n        //console.log(\"tick **************************************************************\");\r\n        let allParents = {};\r\n        while (this._isDirtyParents) {\r\n            // This must be before calling _prepareChildren\r\n            this._isDirtyParents = false;\r\n            $object.keys(this._dirtyParents).forEach((key) => {\r\n                const parent = this._dirtyParents[key];\r\n                delete this._dirtyParents[key];\r\n                if (!parent.isDisposed()) {\r\n                    allParents[parent.uid] = parent;\r\n                    parent._prepareChildren();\r\n                }\r\n            });\r\n        }\r\n        $object.keys(allParents).forEach((key) => {\r\n            allParents[key]._updateChildren();\r\n        });\r\n        const objects = [];\r\n        //\t\tconsole.log(\"_beforeChanged\")\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            const entity = this._dirty[key];\r\n            if (entity.isDisposed()) {\r\n                delete this._dirty[entity.uid];\r\n            }\r\n            else {\r\n                objects.push(entity);\r\n                entity._beforeChanged();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_changed\")\r\n        objects.forEach((entity) => {\r\n            entity._changed();\r\n            delete this._dirty[entity.uid];\r\n            entity._clearDirty();\r\n        });\r\n        this._isDirty = false;\r\n        const depths = {};\r\n        const bounds = [];\r\n        $object.keys(this._dirtyBounds).forEach((key) => {\r\n            const entity = this._dirtyBounds[key];\r\n            delete this._dirtyBounds[key];\r\n            if (!entity.isDisposed()) {\r\n                depths[entity.uid] = entity.depth();\r\n                bounds.push(entity);\r\n            }\r\n        });\r\n        this._positionHTMLElements();\r\n        // High depth -> low depth\r\n        bounds.sort((x, y) => {\r\n            return $order.compare(depths[y.uid], depths[x.uid]);\r\n        });\r\n        //\t\tconsole.log(\"_updateBounds\")\r\n        bounds.forEach((entity) => {\r\n            entity._updateBounds();\r\n        });\r\n        //\t\tconsole.log(\"_updatePosition\")\r\n        const dirtyPositions = this._dirtyPositions;\r\n        $object.keys(dirtyPositions).forEach((key) => {\r\n            const sprite = dirtyPositions[key];\r\n            delete dirtyPositions[key];\r\n            if (!sprite.isDisposed()) {\r\n                sprite._updatePosition();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_afterChanged\")\r\n        objects.forEach((entity) => {\r\n            entity._afterChanged();\r\n        });\r\n    }\r\n    _renderFrame(currentTime) {\r\n        if (this._updateTick) {\r\n            if (this.events.isEnabled(\"framestarted\")) {\r\n                this.events.dispatch(\"framestarted\", {\r\n                    type: \"framestarted\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            this._checkComputedStyles();\r\n            this._runTickers(currentTime);\r\n            const animationDone = this._runAnimations(currentTime);\r\n            this._runDirties();\r\n            this._render();\r\n            this._renderer.resetImageArray();\r\n            this._positionHTMLElements();\r\n            if (this.events.isEnabled(\"frameended\")) {\r\n                this.events.dispatch(\"frameended\", {\r\n                    type: \"frameended\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            return this._tickers.length === 0 &&\r\n                animationDone &&\r\n                !this._isDirtyAnimation &&\r\n                !this._isDirty;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _runTicker(currentTime, now) {\r\n        if (!this.isDisposed()) {\r\n            this.animationTime = currentTime;\r\n            const done = this._renderFrame(currentTime);\r\n            // No more work to do\r\n            if (done) {\r\n                this._ticker = null;\r\n                this.animationTime = null;\r\n            }\r\n            else {\r\n                if (!this._paused) {\r\n                    if (now) {\r\n                        this._ticker;\r\n                    }\r\n                    else {\r\n                        rAF(this.fps, this._ticker);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _runTickerNow(timeout = 10000) {\r\n        if (!this.isDisposed()) {\r\n            const endTime = performance.now() + timeout;\r\n            for (;;) {\r\n                const currentTime = performance.now();\r\n                if (currentTime >= endTime) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n                this.animationTime = currentTime;\r\n                const done = this._renderFrame(currentTime);\r\n                if (done) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _startTicker() {\r\n        if (this._ticker === null) {\r\n            this.animationTime = null;\r\n            this._ticker = (currentTime) => {\r\n                this._runTicker(currentTime);\r\n            };\r\n            rAF(this.fps, this._ticker);\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether the root is updating or not.\r\n     */\r\n    get updateTick() {\r\n        return this._updateTick;\r\n    }\r\n    /**\r\n     * Enables or disables the root updating.\r\n     */\r\n    set updateTick(value) {\r\n        this._updateTick = value;\r\n        if (value) {\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyEntity(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirty[entity.uid] === undefined) {\r\n            this._dirty[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyParent(parent) {\r\n        this._isDirty = true;\r\n        this._isDirtyParents = true;\r\n        if (this._dirtyParents[parent.uid] === undefined) {\r\n            this._dirtyParents[parent.uid] = parent;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyBounds(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirtyBounds[entity.uid] === undefined) {\r\n            this._dirtyBounds[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyPosition(sprite) {\r\n        this._isDirty = true;\r\n        if (this._dirtyPositions[sprite.uid] === undefined) {\r\n            this._dirtyPositions[sprite.uid] = sprite;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addAnimation(animation) {\r\n        this._isDirtyAnimation = true;\r\n        // TODO use numeric id instead\r\n        if (this._animations.indexOf(animation) === -1) {\r\n            this._animations.push(animation);\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _markDirty() {\r\n        this._isDirty = true;\r\n    }\r\n    _markDirtyRedraw() {\r\n        this.events.once(\"frameended\", () => {\r\n            this._isDirty = true;\r\n            this._startTicker();\r\n        });\r\n    }\r\n    eachFrame(f) {\r\n        this._tickers.push(f);\r\n        this._startTicker();\r\n        return new Disposer(() => {\r\n            $array.removeFirst(this._tickers, f);\r\n        });\r\n    }\r\n    markDirtyGlobal(container) {\r\n        if (!container) {\r\n            container = this.container;\r\n        }\r\n        container.walkChildren((child) => {\r\n            if (child instanceof Container) {\r\n                this.markDirtyGlobal(child);\r\n            }\r\n            child.markDirty();\r\n            child.markDirtyBounds();\r\n        });\r\n    }\r\n    /**\r\n     * Returns width of the target container, in pixels.\r\n     *\r\n     * @return Width\r\n     */\r\n    width() {\r\n        // TODO make this more efficient, maybe just return the renderer's width ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).width);\r\n    }\r\n    /**\r\n     * Returns height of the target container, in pixels.\r\n     *\r\n     * @return Height\r\n     */\r\n    height() {\r\n        // TODO make this more efficient, maybe just return the renderer's height ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).height);\r\n    }\r\n    /**\r\n     * Disposes root and all the content in it.\r\n     */\r\n    dispose() {\r\n        if (!this._isDisposed) {\r\n            this._isDisposed = true;\r\n            this._rootContainer.dispose();\r\n            this._renderer.dispose();\r\n            this.horizontalLayout.dispose();\r\n            this.verticalLayout.dispose();\r\n            this.interfaceColors.dispose();\r\n            $array.each(this._disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n            if (this._inner) {\r\n                $utils.removeElement(this._inner);\r\n            }\r\n            $array.remove(registry.rootElements, this);\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if root element is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._isDisposed;\r\n    }\r\n    /**\r\n     * Triggers screen reader read out a message.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n     * @param  text  Alert text\r\n     */\r\n    readerAlert(text) {\r\n        if (this._a11yD !== true) {\r\n            const element = this._readerAlertElement;\r\n            text = $utils.stripTags(text);\r\n            if (element.innerHTML == text) {\r\n                element.innerHTML = \"\";\r\n            }\r\n            element.innerHTML = text;\r\n        }\r\n    }\r\n    /**\r\n     * Sets themes to be used for the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n     * @param  themes  A list of themes\r\n     */\r\n    setThemes(themes) {\r\n        this._rootContainer.set(\"themes\", themes);\r\n        // otherwise new themes are not applied\r\n        const tooltipContainer = this.tooltipContainer;\r\n        if (tooltipContainer) {\r\n            tooltipContainer._applyThemes();\r\n        }\r\n        // @todo review this\r\n        const interfaceColors = this.interfaceColors;\r\n        if (interfaceColors) {\r\n            interfaceColors._applyThemes();\r\n        }\r\n    }\r\n    _addTooltip() {\r\n        if (!this.tooltipContainer) {\r\n            const tooltipContainerSettings = this._tooltipContainerSettings;\r\n            const tooltipContainer = this._rootContainer.children.push(Container.new(this, {\r\n                position: \"absolute\",\r\n                isMeasured: false,\r\n                width: p100,\r\n                height: p100,\r\n                layer: tooltipContainerSettings ? 35 : 30,\r\n                layerMargin: tooltipContainerSettings ? tooltipContainerSettings : undefined\r\n            }));\r\n            this.tooltipContainer = tooltipContainer;\r\n            const tooltip = Tooltip.new(this, {});\r\n            this.container.set(\"tooltip\", tooltip);\r\n            tooltip.hide(0);\r\n            this._tooltip = tooltip;\r\n        }\r\n    }\r\n    /**\r\n     * Accesibility\r\n     */\r\n    _registerTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (target.get(\"focusable\")) {\r\n            $array.pushOne(this._tabindexes, target);\r\n        }\r\n        else {\r\n            $array.remove(this._tabindexes, target);\r\n        }\r\n        this._invalidateTabindexes();\r\n    }\r\n    _unregisterTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        this._invalidateTabindexes();\r\n    }\r\n    _invalidateTabindexes() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._tabindexes.sort((a, b) => {\r\n            const aindex = a.get(\"tabindexOrder\", 0);\r\n            const bindex = b.get(\"tabindexOrder\", 0);\r\n            if (aindex == bindex) {\r\n                return 0;\r\n            }\r\n            else if (aindex > bindex) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        });\r\n        const groups = [];\r\n        $array.each(this._tabindexes, (item, index) => {\r\n            if (!item.getPrivate(\"focusElement\")) {\r\n                this._makeFocusElement(index, item);\r\n            }\r\n            else {\r\n                this._moveFocusElement(index, item);\r\n            }\r\n            const group = item.get(\"focusableGroup\");\r\n            if (group && item.getPrivate(\"focusable\") !== false) {\r\n                if (groups.indexOf(group) !== -1) {\r\n                    // Non-first element in the group, make it not directly focusable\r\n                    item.getPrivate(\"focusElement\").dom.setAttribute(\"tabindex\", \"-1\");\r\n                }\r\n                else {\r\n                    groups.push(group);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _updateCurrentFocus() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (this._focusedSprite) {\r\n            this._decorateFocusElement(this._focusedSprite);\r\n            this._positionFocusElement(this._focusedSprite);\r\n        }\r\n    }\r\n    _decorateFocusElement(target, focusElement) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Decorate with proper accessibility attributes\r\n        if (!focusElement) {\r\n            focusElement = target.getPrivate(\"focusElement\").dom;\r\n        }\r\n        if (!focusElement) {\r\n            return;\r\n        }\r\n        const role = target.get(\"role\");\r\n        if (role) {\r\n            focusElement.setAttribute(\"role\", role);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"role\");\r\n        }\r\n        const ariaLabel = target.get(\"ariaLabel\");\r\n        if (ariaLabel) {\r\n            const label = populateString(target, ariaLabel);\r\n            focusElement.setAttribute(\"aria-label\", label);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-label\");\r\n        }\r\n        const ariaLive = target.get(\"ariaLive\");\r\n        if (ariaLive) {\r\n            focusElement.setAttribute(\"aria-live\", ariaLive);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-live\");\r\n        }\r\n        const ariaChecked = target.get(\"ariaChecked\");\r\n        if (ariaChecked != null && role && [\"checkbox\", \"option\", \"radio\", \"menuitemcheckbox\", \"menuitemradio\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-checked\");\r\n        }\r\n        const ariaCurrent = target.get(\"ariaCurrent\");\r\n        if (ariaCurrent != null) {\r\n            focusElement.setAttribute(\"aria-current\", ariaCurrent);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-current\");\r\n        }\r\n        const ariaSelected = target.get(\"ariaSelected\");\r\n        if (ariaSelected != null && role && [\"gridcell\", \"option\", \"row\", \"tab\", \"columnheader\", \"rowheader\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-selected\", ariaSelected ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-selected\");\r\n        }\r\n        if (target.get(\"ariaHidden\")) {\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        const ariaOrientation = target.get(\"ariaOrientation\");\r\n        if (ariaOrientation) {\r\n            focusElement.setAttribute(\"aria-orientation\", ariaOrientation);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-orientation\");\r\n        }\r\n        const ariaValueNow = target.get(\"ariaValueNow\");\r\n        if (ariaValueNow) {\r\n            focusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuenow\");\r\n        }\r\n        const ariaValueMin = target.get(\"ariaValueMin\");\r\n        if (ariaValueMin) {\r\n            focusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemin\");\r\n        }\r\n        const ariaValueMax = target.get(\"ariaValueMax\");\r\n        if (ariaValueMax) {\r\n            focusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemax\");\r\n        }\r\n        const ariaValueText = target.get(\"ariaValueText\");\r\n        if (ariaValueText) {\r\n            focusElement.setAttribute(\"aria-valuetext\", ariaValueText);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuetext\");\r\n        }\r\n        const ariaControls = target.get(\"ariaControls\");\r\n        if (ariaControls) {\r\n            focusElement.setAttribute(\"aria-controls\", ariaControls);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-controls\");\r\n        }\r\n        if (target.get(\"visible\") && target.get(\"opacity\") !== 0 && target.get(\"role\") != \"tooltip\" && !target.isHidden() && target.getPrivate(\"focusable\") !== false && (target.height() || target.width())) {\r\n            if (focusElement.getAttribute(\"tabindex\") != \"-1\") {\r\n                focusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\r\n            }\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"tabindex\");\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n    }\r\n    _makeFocusElement(index, target) {\r\n        if (target.getPrivate(\"focusElement\") || this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Init\r\n        const focusElement = document.createElement(\"div\");\r\n        if (target.get(\"role\") != \"tooltip\") {\r\n            focusElement.tabIndex = this.tabindex;\r\n        }\r\n        focusElement.style.position = \"absolute\";\r\n        $utils.setInteractive(focusElement, false);\r\n        const disposers = [];\r\n        target.setPrivate(\"focusElement\", {\r\n            dom: focusElement,\r\n            disposers,\r\n        });\r\n        this._decorateFocusElement(target);\r\n        disposers.push($utils.addEventListener(focusElement, \"focus\", (ev) => {\r\n            this._handleFocus(ev);\r\n        }));\r\n        disposers.push($utils.addEventListener(focusElement, \"blur\", (ev) => {\r\n            this._handleBlur(ev);\r\n        }));\r\n        this._moveFocusElement(index, target);\r\n    }\r\n    _removeFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (focusElement) {\r\n            const container = this._focusElementContainer;\r\n            container.removeChild(focusElement.dom);\r\n            $array.each(focusElement.disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    _hideFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        focusElement.dom.style.display = \"none\";\r\n    }\r\n    _moveFocusElement(index, target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get container\r\n        const container = this._focusElementContainer;\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        if (focusElement === this._focusElementContainer.children[index]) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        const next = this._focusElementContainer.children[index + 1];\r\n        if (next) {\r\n            container.insertBefore(focusElement, next);\r\n        }\r\n        else {\r\n            container.append(focusElement);\r\n        }\r\n    }\r\n    _positionFocusElement(target) {\r\n        if (this._a11yD == true || target == undefined) {\r\n            return;\r\n        }\r\n        const bounds = target.globalBounds();\r\n        let width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\r\n        let height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\r\n        const padding = this._settings.focusPadding !== undefined ? this._settings.focusPadding : 2;\r\n        let x = bounds.left - padding;\r\n        let y = bounds.top - padding;\r\n        if (width < 0) {\r\n            x += width;\r\n            width = Math.abs(width);\r\n        }\r\n        if (height < 0) {\r\n            y += height;\r\n            height = Math.abs(height);\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        focusElement.style.top = y + \"px\";\r\n        focusElement.style.left = x + \"px\";\r\n        focusElement.style.width = (width + padding * 2) + \"px\";\r\n        focusElement.style.height = (height + padding * 2) + \"px\";\r\n    }\r\n    _getSpriteByFocusElement(target) {\r\n        let found;\r\n        $array.eachContinue(this._tabindexes, (item, _index) => {\r\n            if (item.getPrivate(\"focusElement\").dom === target) {\r\n                found = item;\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return found;\r\n    }\r\n    _handleFocus(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get element\r\n        //const focused = this._tabindexes[index];\r\n        const focused = this._getSpriteByFocusElement(ev.target);\r\n        if (!focused) {\r\n            return;\r\n        }\r\n        // Jump over hidden elements\r\n        if (!focused.isVisibleDeep()) {\r\n            this._focusNext(ev.target, this._isShift ? -1 : 1);\r\n            return;\r\n        }\r\n        // Size and position\r\n        this._positionFocusElement(focused);\r\n        //this._decorateFocusElement(focused);\r\n        this._focusedSprite = focused;\r\n        if (focused.events.isEnabled(\"focus\")) {\r\n            focused.events.dispatch(\"focus\", {\r\n                type: \"focus\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n    }\r\n    _focusNext(el, direction, group) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusableElements = Array.from(document.querySelectorAll([\r\n            'a[href]',\r\n            'area[href]',\r\n            'button:not([disabled])',\r\n            'details',\r\n            'input:not([disabled])',\r\n            'iframe:not([disabled])',\r\n            'select:not([disabled])',\r\n            'textarea:not([disabled])',\r\n            '[contentEditable=\"\"]',\r\n            '[contentEditable=\"true\"]',\r\n            '[contentEditable=\"TRUE\"]',\r\n            '[tabindex]:not([tabindex^=\"-\"])',\r\n            //':not([disabled])'\r\n        ].join(',')));\r\n        let index = focusableElements.indexOf(el) + direction;\r\n        if (index < 0) {\r\n            index = focusableElements.length - 1;\r\n        }\r\n        else if (index >= focusableElements.length) {\r\n            index = 0;\r\n        }\r\n        const targetElement = focusableElements[index];\r\n        if (group && direction == -1) {\r\n            const target = this._getSpriteByFocusElement(targetElement);\r\n            if (target && target.get(\"focusableGroup\") == group) {\r\n                this._focusNext(targetElement, direction);\r\n                return;\r\n            }\r\n        }\r\n        targetElement.focus();\r\n    }\r\n    _handleBlur(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focused = this._focusedSprite;\r\n        if (focused && !focused.isDisposed() && focused.events.isEnabled(\"blur\")) {\r\n            focused.events.dispatch(\"blur\", {\r\n                type: \"blur\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n        this._focusedSprite = undefined;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltip(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const text = $utils.stripTags(target._getText());\r\n        let tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (target.get(\"role\") == \"tooltip\" && text != \"\") {\r\n            if (!tooltipElement) {\r\n                tooltipElement = this._makeTooltipElement(target);\r\n            }\r\n            if (tooltipElement.innerHTML != text) {\r\n                tooltipElement.innerHTML = text;\r\n            }\r\n            tooltipElement.setAttribute(\"aria-hidden\", target.isVisibleDeep() ? \"false\" : \"true\");\r\n        }\r\n        else if (tooltipElement) {\r\n            tooltipElement.remove();\r\n            target.removePrivate(\"tooltipElement\");\r\n        }\r\n    }\r\n    _makeTooltipElement(target) {\r\n        const container = this._tooltipElementContainer;\r\n        const tooltipElement = document.createElement(\"div\");\r\n        tooltipElement.style.position = \"absolute\";\r\n        tooltipElement.style.width = \"1px\";\r\n        tooltipElement.style.height = \"1px\";\r\n        tooltipElement.style.overflow = \"hidden\";\r\n        tooltipElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n        $utils.setInteractive(tooltipElement, false);\r\n        this._decorateFocusElement(target, tooltipElement);\r\n        container.append(tooltipElement);\r\n        target.setPrivate(\"tooltipElement\", tooltipElement);\r\n        return tooltipElement;\r\n    }\r\n    _removeTooltipElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (tooltipElement) {\r\n            const parent = tooltipElement.parentElement;\r\n            if (parent) {\r\n                parent.removeChild(tooltipElement);\r\n            }\r\n        }\r\n    }\r\n    _invalidateAccessibility(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._focusElementDirty = true;\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (target.get(\"focusable\")) {\r\n            if (focusElement) {\r\n                this._decorateFocusElement(target);\r\n                this._positionFocusElement(target);\r\n            }\r\n            // else {\r\n            // \tthis._renderer._makeFocusElement(0, this);\r\n            // }\r\n        }\r\n        else if (focusElement) {\r\n            this._removeFocusElement(target);\r\n        }\r\n        //this.updateCurrentFocus();\r\n    }\r\n    /**\r\n     * Returns `true` if `target` is currently focused.\r\n     *\r\n     * @param   target  Target\r\n     * @return          Focused?\r\n     */\r\n    focused(target) {\r\n        return this._focusedSprite === target;\r\n    }\r\n    /**\r\n     * Converts document coordinates to coordinates withing root element.\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    documentPointToRoot(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x - rect.left) * scaleWidth,\r\n            y: (point.y - rect.top) * scaleHeight,\r\n        };\r\n    }\r\n    /**\r\n     * Converts root coordinates to document\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    rootPointToDocument(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x / scaleWidth) + rect.left,\r\n            y: (point.y / scaleHeight) + rect.top\r\n        };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _updateComputedStyles() {\r\n        const styles = window.getComputedStyle(this.dom);\r\n        let fontHash = \"\";\r\n        $object.each(styles, (key, val) => {\r\n            if ($type.isString(key) && key.match(/^font/)) {\r\n                fontHash += val;\r\n            }\r\n        });\r\n        const changed = fontHash != this._fontHash;\r\n        if (changed) {\r\n            this._fontHash = fontHash;\r\n        }\r\n        return changed;\r\n    }\r\n    _checkComputedStyles() {\r\n        if (this._updateComputedStyles()) {\r\n            this._invalidateLabelBounds(this.container);\r\n        }\r\n    }\r\n    _invalidateLabelBounds(target) {\r\n        if (target instanceof Container) {\r\n            target.children.each((child) => {\r\n                this._invalidateLabelBounds(child);\r\n            });\r\n        }\r\n        else if (target instanceof Text) {\r\n            target.markDirtyBounds();\r\n        }\r\n    }\r\n    /**\r\n     * To all the clever heads out there. Yes, we did not make any attempts to\r\n     * scramble this.\r\n     *\r\n     * This is a part of a tool meant for our users to manage their commercial\r\n     * licenses for removal of amCharts branding from charts.\r\n     *\r\n     * The only legit way to do so is to purchase a commercial license for amCharts:\r\n     * https://www.amcharts.com/online-store/\r\n     *\r\n     * Removing or altering this code, or disabling amCharts branding in any other\r\n     * way is against the license and thus illegal.\r\n     */\r\n    _hasLicense() {\r\n        for (let i = 0; i < registry.licenses.length; i++) {\r\n            if (registry.licenses[i].match(/^AM5C.{5,}/i)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _licenseApplied() {\r\n        if (this._logo) {\r\n            this._logo.set(\"forceHidden\", true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get debugGhostView() {\r\n        return this._renderer.debugGhostView;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    set debugGhostView(value) {\r\n        this._renderer.debugGhostView = value;\r\n    }\r\n    /**\r\n     * Set this to `true` if you need chart to require first a tap onto it before\r\n     * touch gesture related functionality like zoom/pan is turned on.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default false\r\n     * @since 5.2.9\r\n     * @param  value  Needs a tap to activate touch functions\r\n     */\r\n    set tapToActivate(value) {\r\n        this._renderer.tapToActivate = value;\r\n    }\r\n    /**\r\n     * @return Needs a tap to activate touch functions\r\n     */\r\n    get tapToActivate() {\r\n        return this._renderer.tapToActivate;\r\n    }\r\n    /**\r\n     * If `tapToActivate` is set to `true`, this setting will determine number\r\n     * of milliseconds the chart will stay \"active\", before releasing the\r\n     * controls back to the page.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default 3000\r\n     * @since 5.2.9\r\n     * @param  value  Timeout\r\n     */\r\n    set tapToActivateTimeout(value) {\r\n        this._renderer.tapToActivateTimeout = value;\r\n    }\r\n    /**\r\n     * @return Timeout\r\n     */\r\n    get tapToActivateTimeout() {\r\n        return this._renderer.tapToActivateTimeout;\r\n    }\r\n    _makeHTMLElement(target) {\r\n        // Get container\r\n        const container = this._htmlElementContainer;\r\n        // Init\r\n        const htmlElement = document.createElement(\"div\");\r\n        target.setPrivate(\"htmlElement\", htmlElement);\r\n        // Should we put this into a wrapper?\r\n        let needWrapper = false;\r\n        let wrapperTarget;\r\n        target._walkParents((parent) => {\r\n            if (parent.get(\"verticalScrollbar\")) {\r\n                needWrapper = true;\r\n                wrapperTarget = parent;\r\n                return false;\r\n            }\r\n        });\r\n        let htmlElementWrapper;\r\n        if (needWrapper) {\r\n            htmlElementWrapper = document.createElement(\"div\");\r\n            target.setPrivate(\"htmlElementWrapper\", htmlElementWrapper);\r\n            target.setPrivate(\"wrapperContainer\", wrapperTarget);\r\n            htmlElementWrapper.style.position = \"absolute\";\r\n            htmlElementWrapper.style.overflow = \"hidden\";\r\n            htmlElementWrapper.style.boxSizing = \"border-box\";\r\n            htmlElementWrapper.style.top = \"0px\";\r\n            htmlElementWrapper.style.left = \"0px\";\r\n            htmlElementWrapper.style.width = \"100%\";\r\n            htmlElementWrapper.style.height = \"100%\";\r\n            wrapperTarget.events.on(\"boundschanged\", () => {\r\n                this._positionHTMLElement(target);\r\n            });\r\n        }\r\n        //htmlElement.tabIndex = this.tabindex;\r\n        htmlElement.style.position = \"absolute\";\r\n        htmlElement.style.overflow = \"auto\";\r\n        htmlElement.style.boxSizing = \"border-box\";\r\n        $utils.setInteractive(htmlElement, target.get(\"interactive\", false));\r\n        // Translate events\r\n        if (target.events.isEnabled(\"click\")) {\r\n            $utils.setInteractive(htmlElement, true);\r\n            this._disposers.push($utils.addEventListener(htmlElement, \"click\", (ev) => {\r\n                const downEvent = this._renderer.getEvent(ev);\r\n                target.events.dispatch(\"click\", {\r\n                    type: \"click\",\r\n                    originalEvent: downEvent.event,\r\n                    point: downEvent.point,\r\n                    simulated: false,\r\n                    target: target\r\n                });\r\n            }));\r\n        }\r\n        this._positionHTMLElement(target);\r\n        if (needWrapper) {\r\n            htmlElementWrapper.append(htmlElement);\r\n            container.append(htmlElementWrapper);\r\n        }\r\n        else {\r\n            container.append(htmlElement);\r\n        }\r\n        $array.pushOne(this._htmlEnabledContainers, target);\r\n        return htmlElement;\r\n    }\r\n    _positionHTMLElements() {\r\n        $array.each(this._htmlEnabledContainers, (target) => {\r\n            this._positionHTMLElement(target);\r\n        });\r\n    }\r\n    _positionHTMLElement(target) {\r\n        const htmlElementWrapper = target.getPrivate(\"htmlElementWrapper\");\r\n        if (htmlElementWrapper) {\r\n            const wrapperTarget = target.getPrivate(\"wrapperContainer\");\r\n            if (wrapperTarget) {\r\n                const bounds = wrapperTarget.globalBounds();\r\n                htmlElementWrapper.style.clipPath = \"rect(\" + bounds.top + \"px \" + bounds.right + \"px \" + bounds.bottom + \"px \" + bounds.left + \"px)\";\r\n            }\r\n        }\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            // Translate settings\r\n            const visualSettings = [\r\n                \"paddingTop\",\r\n                \"paddingRight\",\r\n                \"paddingBottom\",\r\n                \"paddingLeft\",\r\n                \"minWidth\",\r\n                \"minHeight\",\r\n                \"maxWidth\",\r\n                \"maxHeight\"\r\n            ];\r\n            $array.each(visualSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    htmlElement.style[setting] = value + \"px\";\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            const strtingSettings = [\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\"\r\n            ];\r\n            $array.each(strtingSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    if (setting == \"fontSize\" && !$type.isString(value)) {\r\n                        htmlElement.style[setting] = value + \"px\";\r\n                    }\r\n                    else {\r\n                        htmlElement.style[setting] = value + \"\";\r\n                    }\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            // Init and reset scale / rotation\r\n            const scale = target.compositeScale() || 1;\r\n            const rotation = target.compositeRotation() || 0;\r\n            htmlElement.style.transform = \"\";\r\n            htmlElement.style.transformOrigin = \"\";\r\n            // Deal with opacity\r\n            const opacity = target.compositeOpacity();\r\n            setTimeout(() => {\r\n                htmlElement.style.opacity = opacity + \"\";\r\n            }, 10);\r\n            const visible = target.isVisibleDeep();\r\n            if (visible) {\r\n                htmlElement.style.display = \"block\";\r\n            }\r\n            // Deal with position\r\n            // const bounds = target.globalBounds();\r\n            // htmlElement.style.top = (bounds.top) + \"px\";\r\n            // htmlElement.style.left = (bounds.left) + \"px\";\r\n            let pos = {\r\n                x: target.x() + target.get(\"dx\", 0),\r\n                y: target.y() + target.get(\"dy\", 0)\r\n            };\r\n            if (target.parent) {\r\n                pos = target.parent.toGlobal(pos);\r\n            }\r\n            htmlElement.style.top = pos.y + \"px\";\r\n            htmlElement.style.left = pos.x + \"px\";\r\n            // Use width/height if those are set\r\n            const width = target.get(\"width\");\r\n            const height = target.get(\"height\");\r\n            let w = 0;\r\n            let h = 0;\r\n            if (width) {\r\n                w = target.width();\r\n            }\r\n            if (height) {\r\n                h = target.height();\r\n            }\r\n            if (!width || !height) {\r\n                htmlElement.style.position = \"fixed\";\r\n                htmlElement.style.width = \"\";\r\n                htmlElement.style.height = \"\";\r\n                const bbox = htmlElement.getBoundingClientRect();\r\n                htmlElement.style.position = \"absolute\";\r\n                if (!width)\r\n                    w = bbox.width;\r\n                if (!height)\r\n                    h = bbox.height;\r\n                let lw = w / scale;\r\n                let lh = h / scale;\r\n                let cx = target.get(\"centerX\", 0);\r\n                let cy = target.get(\"centerY\", 0);\r\n                let ll = 0;\r\n                let lr = 0;\r\n                let lt = 0;\r\n                let lb = 0;\r\n                if (cx instanceof Percent) {\r\n                    ll = -cx.value * lw;\r\n                    lr = (1 - cx.value) * lw;\r\n                }\r\n                else {\r\n                    ll = -cx;\r\n                    lr = lw - cx;\r\n                }\r\n                if (cy instanceof Percent) {\r\n                    lt = -cy.value * lh;\r\n                    lb = (1 - cy.value) * lh;\r\n                }\r\n                else {\r\n                    lt = -cy;\r\n                    lb = lh - cy;\r\n                }\r\n                target._localBounds = { left: ll, right: lr, top: lt, bottom: lb };\r\n                let previousBounds = target._adjustedLocalBounds;\r\n                let newBounds = target._display.getAdjustedBounds(target._localBounds);\r\n                target._adjustedLocalBounds = newBounds;\r\n                // compare each value of the bounds\r\n                if (previousBounds.left !== newBounds.left || previousBounds.right !== newBounds.right || previousBounds.top !== newBounds.top || previousBounds.bottom !== newBounds.bottom) {\r\n                    target.markDirtyBounds();\r\n                }\r\n            }\r\n            if (w > 0) {\r\n                htmlElement.style.minWidth = (w) + \"px\";\r\n            }\r\n            if (h > 0) {\r\n                htmlElement.style.minHeight = (h) + \"px\";\r\n            }\r\n            // Hide or show\r\n            if (!visible || opacity == 0) {\r\n                htmlElement.style.display = \"none\";\r\n            }\r\n            // Center position\r\n            const x = target.get(\"centerX\", 0);\r\n            const originX = isPercent(x) ? x.percent + \"%\" : x + \"px\";\r\n            const y = target.get(\"centerY\", 0);\r\n            const originY = isPercent(y) ? y.percent + \"%\" : y + \"px\";\r\n            if (x || y) {\r\n                htmlElement.style.transform = \"translate(-\" + originX + \", -\" + originY + \")\" + htmlElement.style.transform;\r\n            }\r\n            // Deal with scale\r\n            if (scale != 1) {\r\n                htmlElement.style.transform += \"scale(\" + scale + \")\";\r\n            }\r\n            if (rotation != 0) {\r\n                htmlElement.style.transform += \" rotate(\" + rotation + \"deg)\";\r\n            }\r\n            if (htmlElement.style.transform != \"\") {\r\n                htmlElement.style.transformOrigin = originX + \" \" + originY;\r\n                //htmlElement.style.transformOrigin = \"0% 0%\";\r\n            }\r\n        }\r\n    }\r\n    _setHTMLContent(target, html) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (!htmlElement) {\r\n            htmlElement = this._makeHTMLElement(target);\r\n        }\r\n        if (htmlElement.innerHTML != html) {\r\n            htmlElement.innerHTML = html;\r\n        }\r\n    }\r\n    _removeHTMLContent(target) {\r\n        const htmlElementWrapper = target.getPrivate(\"htmlElementWrapper\");\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElementWrapper) {\r\n            this._htmlElementContainer.removeChild(htmlElementWrapper);\r\n            target.removePrivate(\"htmlElement\");\r\n            target.removePrivate(\"htmlElementWrapper\");\r\n            target.removePrivate(\"wrapperContainer\");\r\n        }\r\n        else if (htmlElement) {\r\n            this._htmlElementContainer.removeChild(htmlElement);\r\n            target.removePrivate(\"htmlElement\");\r\n            target.removePrivate(\"wrapperContainer\");\r\n        }\r\n        $array.remove(this._htmlEnabledContainers, target);\r\n    }\r\n}\r\n", "import { Entity } from \"./Entity\";\r\nimport { StyleRule } from \"./Utils\";\r\nimport { MultiDisposer, CounterDisposer } from \"../../core/util/Disposer\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * @ignore\r\n */\r\nlet rules;\r\n/**\r\n * @ignore\r\n */\r\nfunction modalCSS(element, root, _prefix) {\r\n    const ic = root.interfaceColors;\r\n    const active = ic.get(\"secondaryButton\").toCSS();\r\n    const text = ic.get(\"text\").toCSS();\r\n    const shadow = ic.get(\"alternativeBackground\").toCSS(0.45);\r\n    //const altbg = ic.get(\"alternativeBackground\")!.toCSS();\r\n    if (!rules) {\r\n        const disposer = new MultiDisposer([\r\n            new StyleRule(element, \".am5-modal\", {\r\n                \"width\": \"100%\",\r\n                \"height\": \"100%\",\r\n                \"position\": \"absolute\",\r\n                \"z-index\": \"100000\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\"\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-curtain\", {\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"width\": \"100%\",\r\n                \"height\": \"100%\",\r\n                \"position\": \"absolute\",\r\n                \"background\": ic.get(\"background\").toCSS(0.5),\r\n                \"z-index\": \"100\"\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-wrapper\", {\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"width\": \"100%\",\r\n                \"height\": \"100%\",\r\n                \"position\": \"absolute\",\r\n                \"text-align\": \"center\",\r\n                \"white-space\": \"nowrap\",\r\n                \"background\": ic.get(\"background\").toCSS(0.5),\r\n                \"z-index\": \"101\"\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-wrapper:before\", {\r\n                \"content\": \"''\",\r\n                \"display\": \"inline-block\",\r\n                \"height\": \"100%\",\r\n                \"vertical-align\": \"middle\",\r\n                \"margin-right\": \"-0.25em\"\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-content\", {\r\n                \"display\": \"inline-block\",\r\n                \"padding\": \"1.2em\",\r\n                \"vertical-align\": \"middle\",\r\n                \"text-align\": \"start\",\r\n                \"white-space\": \"normal\",\r\n                \"background\": ic.get(\"background\").toCSS(),\r\n                //\"border\": \"1px solid \" + ic.get(\"alternativeBackground\")!.toCSS(),\r\n                \"border-radius\": \"4px\",\r\n                \"-webkit-box-shadow\": \"0px 0px 36px 0px \" + shadow,\r\n                \"box-shadow\": \"0px 0px 36px 0px \" + shadow,\r\n                \"color\": text\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-content h1\", {\r\n                \"font-size\": \"1em\",\r\n                \"margin\": \"0 0 0.5em 0\"\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-table\", {\r\n                \"display\": \"table\",\r\n                \"margin\": \"1em 0\"\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-table-row\", {\r\n                \"display\": \"table-row\"\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-table-heading\", {\r\n                \"display\": \"table-heading\",\r\n                \"padding\": \"3px 10px 3px 0\",\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-table-cell\", {\r\n                \"display\": \"table-cell\",\r\n                \"padding\": \"3px 0 3px 0\",\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-table-cell > *\", {\r\n                \"vertical-align\": \"middle\"\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-content input[type=text], .am5-modal-content input[type=number], .am5-modal-content select\", {\r\n                \"border\": \"1px solid \" + active,\r\n                \"border-radius\": \"4px\",\r\n                \"padding\": \"3px 5px\",\r\n                \"margin\": \"2px\"\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-input-narrow\", {\r\n                \"width\": \"50px\"\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-button\", {\r\n                \"font-weight\": \"400\",\r\n                \"color\": ic.get(\"secondaryButtonText\").toCSS(),\r\n                \"line-height\": \"1.5\",\r\n                \"text-align\": \"center\",\r\n                \"text-decoration\": \"none\",\r\n                \"vertical-align\": \"middle\",\r\n                \"cursor\": \"pointer\",\r\n                \"padding\": \"0.2em 0.8em\",\r\n                \"font-size\": \"1em\",\r\n                \"border-radius\": \"0.25em\",\r\n                \"margin\": \"0 0.25em 0 0\",\r\n                \"border\": \"1px solid \" + ic.get(\"secondaryButtonStroke\").toCSS(),\r\n                \"background\": ic.get(\"secondaryButton\").toCSS()\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-button:hover\", {\r\n                \"background\": ic.get(\"secondaryButtonHover\").toCSS()\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-button.am5-modal-primary\", {\r\n                \"color\": ic.get(\"primaryButtonText\").toCSS(),\r\n                \"border\": \"1px solid \" + ic.get(\"primaryButtonStroke\").toCSS(),\r\n                \"background\": ic.get(\"primaryButton\").toCSS()\r\n            }, root.nonce),\r\n            new StyleRule(element, \".am5-modal-button.am5-modal-primary:hover\", {\r\n                \"background\": ic.get(\"primaryButtonHover\").toCSS()\r\n            }, root.nonce),\r\n        ]);\r\n        rules = new CounterDisposer(() => {\r\n            rules = undefined;\r\n            disposer.dispose();\r\n        });\r\n    }\r\n    return rules.increment();\r\n}\r\n/**\r\n * Used to display a modal dialog with HTML content.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/modal-popups/} for more info\r\n */\r\nexport class Modal extends Entity {\r\n    //protected _currentPass: number = 0;\r\n    _afterNew() {\r\n        // Applying themes because this will not have parents\r\n        super._afterNewApplyThemes();\r\n        // Defaults\r\n        this._setRawDefault(\"deactivateRoot\", true);\r\n        // Load CSS\r\n        modalCSS($utils.getShadowRoot(this._root.dom), this._root);\r\n        // Create elements\r\n        const container = document.createElement(\"div\");\r\n        container.className = \"am5-modal\";\r\n        container.style.display = \"none\";\r\n        this.root._inner.appendChild(container);\r\n        this.setPrivate(\"container\", container);\r\n        const curtain = document.createElement(\"div\");\r\n        curtain.className = \"am5-modal-curtain\";\r\n        container.appendChild(curtain);\r\n        this.setPrivate(\"curtain\", curtain);\r\n        this._disposers.push($utils.addEventListener(curtain, \"click\", () => {\r\n            this.cancel();\r\n        }));\r\n        const wrapper = document.createElement(\"div\");\r\n        wrapper.className = \"am5-modal-wrapper\";\r\n        container.appendChild(wrapper);\r\n        this.setPrivate(\"wrapper\", wrapper);\r\n        const content = document.createElement(\"div\");\r\n        content.className = \"am5-modal-content\";\r\n        wrapper.appendChild(content);\r\n        this.setPrivate(\"content\", content);\r\n        const html = this.get(\"content\");\r\n        if (html) {\r\n            content.innerHTML = html;\r\n        }\r\n        // Close on ESC\r\n        if ($utils.supports(\"keyboardevents\")) {\r\n            this._disposers.push($utils.addEventListener(document, \"keydown\", (ev) => {\r\n                if (this.isOpen() && $utils.getEventKey(ev) == \"Escape\") {\r\n                    this.cancel();\r\n                }\r\n            }));\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"content\")) {\r\n            this.getPrivate(\"content\").innerHTML = this.get(\"content\", \"\");\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if modal is currently open.\r\n     *\r\n     * @return  Modal open?\r\n     */\r\n    isOpen() {\r\n        return this.getPrivate(\"container\").style.display != \"none\";\r\n    }\r\n    /**\r\n     * Opens modal.\r\n     */\r\n    open() {\r\n        this.getPrivate(\"container\").style.display = \"block\";\r\n        if (this.get(\"deactivateRoot\")) {\r\n            this.setTimeout(() => {\r\n                this._root._renderer.interactionsEnabled = false;\r\n            }, 10);\r\n        }\r\n        this.events.dispatch(\"opened\", {\r\n            type: \"opened\",\r\n            target: this\r\n        });\r\n    }\r\n    /**\r\n     * Closes modal.\r\n     */\r\n    close() {\r\n        this.getPrivate(\"container\").style.display = \"none\";\r\n        if (this.get(\"deactivateRoot\")) {\r\n            this._root._renderer.interactionsEnabled = true;\r\n        }\r\n        this.events.dispatch(\"closed\", {\r\n            type: \"closed\",\r\n            target: this\r\n        });\r\n    }\r\n    /**\r\n     * Closes modal and invokes `cancelled` event.\r\n     */\r\n    cancel() {\r\n        this.getPrivate(\"container\").style.display = \"none\";\r\n        if (this.get(\"deactivateRoot\")) {\r\n            this._root._renderer.interactionsEnabled = true;\r\n        }\r\n        this.events.dispatch(\"cancelled\", {\r\n            type: \"cancelled\",\r\n            target: this\r\n        });\r\n    }\r\n    /**\r\n     * Disposes modal.\r\n     */\r\n    _dispose() {\r\n        super._dispose();\r\n        const container = this.getPrivate(\"container\");\r\n        if (container.parentElement) {\r\n            container.parentElement.removeChild(container);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Modal, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Modal\"\r\n});\r\nObject.defineProperty(Modal, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Modal.className])\r\n});\r\n", "import { Entity } from \"../../core/util/Entity\";\r\n/**\r\n * A universal placeholder for bullet elements.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n */\r\nexport class Bullet extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        // used by MapPolygons where one data item can have multiple bullets of the same kind\r\n        Object.defineProperty(this, \"_index\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Target series object if it's a bullet for series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because bullet will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"sprite\")) {\r\n            const sprite = this.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setAll({ position: \"absolute\", role: \"figure\" });\r\n                this._disposers.push(sprite);\r\n            }\r\n        }\r\n        if (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\r\n            if (this.series) {\r\n                this.series._positionBullet(this);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Bullet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Bullet\"\r\n});\r\nObject.defineProperty(Bullet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Bullet.className])\r\n});\r\n", "import * as $type from \"../util/Type\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class RoundedRectangle extends Rectangle {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        let width = this.width();\r\n        let height = this.height();\r\n        let w = width;\r\n        let h = height;\r\n        let wSign = w / Math.abs(width);\r\n        let hSign = h / Math.abs(height);\r\n        if ($type.isNumber(w) && $type.isNumber(h)) {\r\n            let minSide = Math.min(w, h) / 2;\r\n            let crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\r\n            let crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\r\n            let crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\r\n            let crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\r\n            let maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n            crtl = $math.fitToRange(crtl, 0, maxcr);\r\n            crtr = $math.fitToRange(crtr, 0, maxcr);\r\n            crbr = $math.fitToRange(crbr, 0, maxcr);\r\n            crbl = $math.fitToRange(crbl, 0, maxcr);\r\n            const display = this._display;\r\n            display.moveTo(crtl * wSign, 0);\r\n            display.lineTo(w - crtr * wSign, 0);\r\n            if (crtr > 0) {\r\n                display.arcTo(w, 0, w, crtr * hSign, crtr);\r\n            }\r\n            display.lineTo(w, h - crbr * hSign);\r\n            if (crbr > 0) {\r\n                display.arcTo(w, h, w - crbr * wSign, h, crbr);\r\n            }\r\n            display.lineTo(crbl * wSign, h);\r\n            if (crbl > 0) {\r\n                display.arcTo(0, h, 0, h - crbl * hSign, crbl);\r\n            }\r\n            display.lineTo(0, crtl * hSign);\r\n            if (crtl > 0) {\r\n                display.arcTo(0, 0, crtl * wSign, 0, crtl);\r\n            }\r\n            display.closePath();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RoundedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RoundedRectangle\"\r\n});\r\nObject.defineProperty(RoundedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Rectangle.classNames.concat([RoundedRectangle.className])\r\n});\r\n", "import { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws an interactive button.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\r\n * @important\r\n */\r\nexport class Button extends Container {\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\r\n        super._afterNew();\r\n        if (!this._settings.background) {\r\n            this.set(\"background\", RoundedRectangle.new(this._root, {\r\n                themeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\r\n            }));\r\n        }\r\n        this.setPrivate(\"trustBounds\", true);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"icon\")) {\r\n            const previous = this._prevSettings.icon;\r\n            const icon = this.get(\"icon\");\r\n            if (icon !== previous) {\r\n                this._disposeProperty(\"icon\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (icon) {\r\n                    this.children.push(icon);\r\n                }\r\n                this._prevSettings.icon = icon;\r\n            }\r\n        }\r\n        if (this.isDirty(\"label\")) {\r\n            const previous = this._prevSettings.label;\r\n            const label = this.get(\"label\");\r\n            if (label !== previous) {\r\n                this._disposeProperty(\"label\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (label) {\r\n                    this.children.push(label);\r\n                }\r\n                this._prevSettings.label = label;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Button, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Button\"\r\n});\r\nObject.defineProperty(Button, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Button.className])\r\n});\r\n", "import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a circle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Circle extends Graphics {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n        this.setPrivateRaw(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this._display.drawCircle(0, 0, Math.abs(this.get(\"radius\", 10)));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Circle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Circle\"\r\n});\r\nObject.defineProperty(Circle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Circle.className])\r\n});\r\n", "import { Graphics } from \"./Graphics\";\r\nimport * as $array from \"../util/Array\";\r\n/**\r\n * Draws a polygon.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/polygon/} for more info\r\n * @important\r\n * @since 5.4.0\r\n */\r\nexport class Polygon extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"morphAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"coordinates\")) {\r\n            const points = [];\r\n            const coordinates = this.get(\"coordinates\");\r\n            if (coordinates) {\r\n                $array.each(coordinates, (coord) => {\r\n                    points.push({ x: coord[0], y: coord[1] });\r\n                });\r\n            }\r\n            this.set(\"points\", points);\r\n        }\r\n        if (this.isPrivateDirty(\"points\")) {\r\n            this._clear = true;\r\n        }\r\n        if (this.isDirty(\"points\")) {\r\n            this._clear = true;\r\n            const points = this.get(\"points\");\r\n            const prevPoints = this._prevSettings.points;\r\n            if (prevPoints) {\r\n                if (points) {\r\n                    let copy = $array.copy(points);\r\n                    let prevCopy = $array.copy(prevPoints);\r\n                    let cl = copy.length;\r\n                    let pl = prevCopy.length;\r\n                    if (cl > pl) {\r\n                        let newCopy = $array.copy(copy);\r\n                        for (let i = 0; i < cl; i++) {\r\n                            let index = Math.floor(i / cl * pl);\r\n                            newCopy[i] = { x: prevCopy[index].x, y: prevCopy[index].y };\r\n                        }\r\n                        prevCopy = newCopy;\r\n                    }\r\n                    else if (pl > cl) {\r\n                        let newCopy = $array.copy(prevCopy);\r\n                        for (let i = 0; i < pl; i++) {\r\n                            let index = Math.floor(i / pl * cl);\r\n                            newCopy[i] = { x: copy[index].x, y: copy[index].y };\r\n                        }\r\n                        copy = newCopy;\r\n                    }\r\n                    this.setPrivateRaw(\"previousPoints\", prevCopy);\r\n                    this.setPrivateRaw(\"points\", copy);\r\n                    this.morphAnimation = this.animatePrivate({ key: \"morphProgress\", from: 0, to: 1, duration: this.get(\"animationDuration\", 0), easing: this.get(\"animationEasing\") });\r\n                    // solves no animated theme\r\n                    this._root.events.once(\"frameended\", () => {\r\n                        this._markDirtyPrivateKey(\"morphProgress\");\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                this.setPrivateRaw(\"previousPoints\", points);\r\n                this.setPrivateRaw(\"points\", points);\r\n            }\r\n            let minX = Infinity;\r\n            let maxX = -Infinity;\r\n            let minY = Infinity;\r\n            let maxY = -Infinity;\r\n            if (points) {\r\n                for (let i = 1, len = points.length; i < len; i++) {\r\n                    const point = points[i];\r\n                    minX = Math.min(minX, point.x);\r\n                    maxX = Math.max(maxX, point.x);\r\n                    minY = Math.min(minY, point.y);\r\n                    maxY = Math.max(maxY, point.y);\r\n                }\r\n            }\r\n            this.setPrivate(\"minX\", minX);\r\n            this.setPrivate(\"maxX\", maxX);\r\n            this.setPrivate(\"minY\", minY);\r\n            this.setPrivate(\"maxY\", minY);\r\n        }\r\n        if (this.isPrivateDirty(\"morphProgress\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this._draw();\r\n        }\r\n    }\r\n    _draw() {\r\n        const previousPoints = this.getPrivate(\"previousPoints\");\r\n        const points = this.getPrivate(\"points\");\r\n        const morphProgress = this.getPrivate(\"morphProgress\", 1);\r\n        if (points && previousPoints) {\r\n            const first = points[0];\r\n            const prevFirst = previousPoints[0];\r\n            if (first) {\r\n                this._display.moveTo(prevFirst.x + (first.x - prevFirst.x) * morphProgress, prevFirst.y + (first.y - prevFirst.y) * morphProgress);\r\n            }\r\n            for (let i = 1, len = points.length; i < len; i++) {\r\n                const point = points[i];\r\n                const prevPoint = previousPoints[i];\r\n                this._display.lineTo(prevPoint.x + (point.x - prevPoint.x) * morphProgress, prevPoint.y + (point.y - prevPoint.y) * morphProgress);\r\n            }\r\n            this._display.closePath();\r\n        }\r\n    }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n}\r\nObject.defineProperty(Polygon, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Polygon\"\r\n});\r\nObject.defineProperty(Polygon, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Polygon.className])\r\n});\r\n", "import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a Ellipse.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Ellipse extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radiusX\") || this.isDirty(\"radiusY\") || this.isDirty(\"rotation\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this._display.drawEllipse(0, 0, Math.abs(this.get(\"radiusX\")), Math.abs(this.get(\"radiusY\")));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Ellipse, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Ellipse\"\r\n});\r\nObject.defineProperty(Ellipse, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Ellipse.className])\r\n});\r\n", "import { Graphics } from \"./Graphics\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws a Star.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Star extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"spikes\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const display = this._display;\r\n            const r = this.get(\"radius\", 0);\r\n            const ir = $utils.relativeToValue(this.get(\"innerRadius\", 0), r);\r\n            const spikes = this.get(\"spikes\", 0);\r\n            const step = Math.PI / spikes;\r\n            let angle = Math.PI / 2 * 3;\r\n            display.moveTo(0, -r);\r\n            for (let i = 0; i < spikes; i++) {\r\n                display.lineTo(Math.cos(angle) * r, Math.sin(angle) * r);\r\n                angle += step;\r\n                display.lineTo(Math.cos(angle) * ir, Math.sin(angle) * ir);\r\n                angle += step;\r\n            }\r\n            display.lineTo(0, -r);\r\n            display.closePath();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Star, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Star\"\r\n});\r\nObject.defineProperty(Star, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Star.className])\r\n});\r\n", "import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport { color } from \"../../core/util/Color\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * A version of [[Container]] which adds zooming capabilities.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Zoomable_container} for more info\r\n * @since 5.8.0\r\n * @important\r\n */\r\nexport class ZoomableContainer extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_za\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_txa\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tya\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_movePoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_downScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_downX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_downY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_pinchDP\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * All elements must be added to `contents.children` instead of `children` of\r\n         * [[ZoomableContainer]].\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Zoomable_container} for more info\r\n         */\r\n        Object.defineProperty(this, \"contents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {\r\n                width: p100,\r\n                height: p100,\r\n                x: 0,\r\n                y: 0,\r\n                draggable: true,\r\n                background: Rectangle.new(this._root, {\r\n                    fill: color(0xffffff),\r\n                    fillOpacity: 0\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_wheelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        const events = this.contents.events;\r\n        this._disposers.push(events.on(\"pointerdown\", (event) => {\r\n            this._handleThisDown(event);\r\n        }));\r\n        this._disposers.push(events.on(\"globalpointerup\", (event) => {\r\n            this._handleThisUp(event);\r\n        }));\r\n        this._disposers.push(events.on(\"globalpointermove\", (event) => {\r\n            this._handleThisMove(event);\r\n        }));\r\n        const bg = this.contents.get(\"background\");\r\n        if (bg) {\r\n            bg.adapters.add(\"width\", (width) => {\r\n                return Number(width) * 20;\r\n            });\r\n            bg.adapters.add(\"height\", (height) => {\r\n                return Number(height) * 20;\r\n            });\r\n            bg.adapters.add(\"x\", (x) => {\r\n                return Number(x) - bg.width() / 2;\r\n            });\r\n            bg.adapters.add(\"y\", (y) => {\r\n                return Number(y) - bg.height() / 2;\r\n            });\r\n        }\r\n        const contents = this.contents;\r\n        contents.adapters.add(\"x\", (x) => {\r\n            const scale = contents.get(\"scale\", 1);\r\n            if ($type.isNumber(x) && scale >= 1) {\r\n                let maxPanOut = this.get(\"maxPanOut\", 0.4);\r\n                let w = contents.width();\r\n                x = Math.min(w * maxPanOut, x);\r\n                x = Math.max(this.width() - w * scale * (1 + maxPanOut), x);\r\n            }\r\n            return x;\r\n        });\r\n        contents.adapters.add(\"y\", (y) => {\r\n            const scale = contents.get(\"scale\", 1);\r\n            if ($type.isNumber(y) && scale >= 1) {\r\n                let maxPanOut = this.get(\"maxPanOut\", 0.4);\r\n                let h = contents.height();\r\n                y = Math.min(h * maxPanOut, y);\r\n                y = Math.max(this.height() - h * scale * (1 + maxPanOut), y);\r\n            }\r\n            return y;\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"wheelable\")) {\r\n            this._handleSetWheel();\r\n        }\r\n        this.contents._display.cancelTouch = this.get(\"pinchZoom\", false);\r\n    }\r\n    _handleSetWheel() {\r\n        if (this.get(\"wheelable\")) {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n            this._wheelDp = this.events.on(\"wheel\", (event) => {\r\n                const wheelEvent = event.originalEvent;\r\n                // Ignore wheel event if it is happening on a non-ZoomableContainer element, e.g. if\r\n                // some page element is over the ZoomableContainer.\r\n                if ($utils.isLocalEvent(wheelEvent, this)) {\r\n                    wheelEvent.preventDefault();\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n                const point = this.toLocal(event.point);\r\n                this._handleWheelZoom(wheelEvent.deltaY, point);\r\n            });\r\n            this._disposers.push(this._wheelDp);\r\n        }\r\n        else {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n        }\r\n    }\r\n    _handleWheelZoom(delta, point) {\r\n        let step = this.get(\"zoomStep\", 2);\r\n        let zoomLevel = this.contents.get(\"scale\", 1);\r\n        let newZoomLevel = zoomLevel;\r\n        if (delta > 0) {\r\n            newZoomLevel = zoomLevel / step;\r\n        }\r\n        else if (delta < 0) {\r\n            newZoomLevel = zoomLevel * step;\r\n        }\r\n        if (newZoomLevel != zoomLevel) {\r\n            this.zoomToPoint(point, newZoomLevel);\r\n        }\r\n    }\r\n    /**\r\n     * Zooms to specific X/Y point.\r\n     *\r\n     * @param   point  Center point\r\n     * @param   level  Zoom level\r\n     * @return         Zoom Animation object\r\n     */\r\n    zoomToPoint(point, level) {\r\n        if (level) {\r\n            level = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\r\n        }\r\n        const zoomLevel = this.contents.get(\"scale\", 1);\r\n        let x = point.x;\r\n        let y = point.y;\r\n        let cx = x;\r\n        let cy = y;\r\n        const contents = this.contents;\r\n        let tx = contents.x();\r\n        let ty = contents.y();\r\n        let xx = cx - ((x - tx) / zoomLevel * level);\r\n        let yy = cy - ((y - ty) / zoomLevel * level);\r\n        this._animateTo(xx, yy, level);\r\n        return this._za;\r\n    }\r\n    /**\r\n     * Zooms the container contents in by `zoomStep`.\r\n     *\r\n     * @return Zoom Animation object\r\n     */\r\n    zoomIn() {\r\n        return this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.contents.get(\"scale\", 1) * this.get(\"zoomStep\", 2));\r\n    }\r\n    /**\r\n     * Zooms the container contents out by `zoomStep`.\r\n     *\r\n     * @return Zoom Animation object\r\n     */\r\n    zoomOut() {\r\n        return this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.contents.get(\"scale\", 1) / this.get(\"zoomStep\", 2));\r\n    }\r\n    /**\r\n     * Fully zooms out the container contents.\r\n     *\r\n     * @return Zoom Animation object\r\n     */\r\n    goHome() {\r\n        return this._animateTo(0, 0, 1);\r\n    }\r\n    _animateTo(x, y, scale) {\r\n        const duration = this.get(\"animationDuration\", 0);\r\n        const easing = this.get(\"animationEasing\");\r\n        const contents = this.contents;\r\n        this._txa = contents.animate({ key: \"x\", to: x, duration: duration, easing: easing });\r\n        this._tya = contents.animate({ key: \"y\", to: y, duration: duration, easing: easing });\r\n        this._za = contents.animate({ key: \"scale\", to: scale, duration: duration, easing: easing });\r\n    }\r\n    _handleThisUp(_event) {\r\n        this._downPoints = {};\r\n    }\r\n    _handleThisDown(event) {\r\n        const contents = this.contents;\r\n        this._downScale = contents.get(\"scale\", 1);\r\n        const downPoints = contents._downPoints;\r\n        let count = $object.keys(downPoints).length;\r\n        if (count == 1) {\r\n            // workaround to solve a problem when events are added to some children of chart container (rotation stops working)\r\n            let downPoint = downPoints[1];\r\n            if (!downPoint) {\r\n                downPoint = downPoints[0];\r\n            }\r\n            if (downPoint && (downPoint.x == event.point.x && downPoint.y == event.point.y)) {\r\n                count = 0;\r\n            }\r\n        }\r\n        if (count > 0) {\r\n            this._downX = contents.x();\r\n            this._downY = contents.y();\r\n            const downId = contents._getDownPointId();\r\n            if (downId) {\r\n                let movePoint = this._movePoints[downId];\r\n                if (movePoint) {\r\n                    contents._downPoints[downId] = movePoint;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleThisMove(event) {\r\n        const originalEvent = event.originalEvent;\r\n        const pointerId = originalEvent.pointerId;\r\n        if (this.get(\"pinchZoom\")) {\r\n            if (pointerId) {\r\n                this._movePoints[pointerId] = event.point;\r\n                if ($object.keys(this.contents._downPoints).length > 1) {\r\n                    this._handlePinch();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handlePinch() {\r\n        let i = 0;\r\n        let downPoints = [];\r\n        let movePoints = [];\r\n        $object.each(this.contents._downPoints, (k, point) => {\r\n            downPoints[i] = point;\r\n            let movePoint = this._movePoints[k];\r\n            if (movePoint) {\r\n                movePoints[i] = movePoint;\r\n            }\r\n            i++;\r\n        });\r\n        if (downPoints.length > 1 && movePoints.length > 1) {\r\n            this.contents._isDragging = false;\r\n            let downPoint0 = downPoints[0];\r\n            let downPoint1 = downPoints[1];\r\n            let movePoint0 = movePoints[0];\r\n            let movePoint1 = movePoints[1];\r\n            if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n                downPoint0 = this.toLocal(downPoint0);\r\n                downPoint1 = this.toLocal(downPoint1);\r\n                movePoint0 = this.toLocal(movePoint0);\r\n                movePoint1 = this.toLocal(movePoint1);\r\n                let initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\r\n                let currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\r\n                let level = currentDistance / initialDistance * this._downScale;\r\n                let moveCenter = { x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2, y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2 };\r\n                let downCenter = { x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2, y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2 };\r\n                let tx = this._downX || 0;\r\n                let ty = this._downY || 0;\r\n                let zoomLevel = this._downScale;\r\n                let xx = moveCenter.x - (-tx + downCenter.x) / zoomLevel * level;\r\n                let yy = moveCenter.y - (-ty + downCenter.y) / zoomLevel * level;\r\n                this.contents.setAll({\r\n                    x: xx,\r\n                    y: yy,\r\n                    scale: level\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(ZoomableContainer, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ZoomableContainer\"\r\n});\r\nObject.defineProperty(ZoomableContainer, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([ZoomableContainer.className])\r\n});\r\n", "import { Entity } from \"../../util/Entity\";\r\n/**\r\n * Base class for gradients.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\r\nexport class Gradient extends Entity {\r\n    _afterNew() {\r\n        // Applying themes because gradient will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getFill(_target) {\r\n        return {\r\n            addColorStop: (_offset, _color) => { }\r\n        };\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        //if (this.isDirty(\"target\") && this.get(\"target\")) {\r\n        //\tthis.get(\"target\")!.events.on(\"boundschanged\", () => {\r\n        //\t});\r\n        //}\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getBounds(target) {\r\n        const gradientTarget = this.get(\"target\");\r\n        if (gradientTarget) {\r\n            let bounds = gradientTarget.globalBounds();\r\n            const p0 = target.toLocal({ x: bounds.left, y: bounds.top });\r\n            const p1 = target.toLocal({ x: bounds.right, y: bounds.top });\r\n            const p2 = target.toLocal({ x: bounds.right, y: bounds.bottom });\r\n            const p3 = target.toLocal({ x: bounds.left, y: bounds.bottom });\r\n            return {\r\n                left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n                top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n                right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n                bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n            };\r\n        }\r\n        return target._display.getLocalBounds();\r\n    }\r\n}\r\nObject.defineProperty(Gradient, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Gradient\"\r\n});\r\nObject.defineProperty(Gradient, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Gradient.className])\r\n});\r\n", "import { Gradient } from \"./Gradient\";\r\nimport { Color } from \"../../util/Color\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $math from \"../../util/Math\";\r\n/**\r\n * Linear gradient.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\r\nexport class LinearGradient extends Gradient {\r\n    /**\r\n     * @ignore\r\n     */\r\n    getFill(target) {\r\n        const rotation = this.get(\"rotation\", 0);\r\n        let bounds = this.getBounds(target);\r\n        let l = bounds.left || 0;\r\n        let r = bounds.right || 0;\r\n        let t = bounds.top || 0;\r\n        let b = bounds.bottom || 0;\r\n        let cos = $math.cos(rotation);\r\n        let sin = $math.sin(rotation);\r\n        let w = cos * (r - l);\r\n        let h = sin * (b - t);\r\n        if (w == 0) {\r\n            w = 1;\r\n        }\r\n        if (h == 0) {\r\n            h = 1;\r\n        }\r\n        let longer = Math.max(w, h);\r\n        const gradient = this._root._renderer.createLinearGradient(l, t, l + longer * cos, t + longer * sin);\r\n        const stops = this.get(\"stops\");\r\n        if (stops) {\r\n            let i = 0;\r\n            $array.each(stops, (stop) => {\r\n                let offset = stop.offset;\r\n                if (!$type.isNumber(offset)) {\r\n                    offset = i / (stops.length - 1);\r\n                }\r\n                let opacity = stop.opacity;\r\n                if (!$type.isNumber(opacity)) {\r\n                    opacity = 1;\r\n                }\r\n                let color = stop.color;\r\n                if (color) {\r\n                    const lighten = stop.lighten;\r\n                    if (lighten) {\r\n                        color = Color.lighten(color, lighten);\r\n                    }\r\n                    const brighten = stop.brighten;\r\n                    if (brighten) {\r\n                        color = Color.brighten(color, brighten);\r\n                    }\r\n                    gradient.addColorStop(offset, 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')');\r\n                }\r\n                i++;\r\n            });\r\n        }\r\n        return gradient;\r\n    }\r\n}\r\nObject.defineProperty(LinearGradient, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"LinearGradient\"\r\n});\r\nObject.defineProperty(LinearGradient, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Gradient.classNames.concat([LinearGradient.className])\r\n});\r\n", "import { Container } from \"./Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { Tooltip } from \"../../core/render/Tooltip\";\r\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Heat legend.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/} for more info\r\n */\r\nexport class HeatLegend extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] that all labels are placed in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"labelContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A [[Container]] that all markers are placed in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"markerContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A start [[Label]].\r\n         *\r\n         * @default Label.new()\r\n         */\r\n        Object.defineProperty(this, \"startLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.labelContainer.children.push(Label.new(this._root, { themeTags: [\"start\"] }))\r\n        });\r\n        /**\r\n         * An end [[Label]].\r\n         *\r\n         * @default Label.new()\r\n         */\r\n        Object.defineProperty(this, \"endLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.labelContainer.children.push(Label.new(this._root, { themeTags: [\"end\"] }))\r\n        });\r\n        /**\r\n         * List of rectangle elements used for default legend markers.\r\n         *\r\n         * @default new ListTemplate<RoundedRectangle>\r\n         */\r\n        Object.defineProperty(this, \"markers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [this.get(\"orientation\"), \"heatlegend\", \"marker\"])\r\n            }, [this.markers.template])))\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"heatlegend\", this._settings.orientation]);\r\n        super._afterNew();\r\n        this.set(\"tooltip\", Tooltip.new(this._root, {\r\n            themeTags: [\"heatlegend\"]\r\n        }));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarker() {\r\n        const marker = this.markers.make();\r\n        marker.states.create(\"disabled\", {});\r\n        return marker;\r\n    }\r\n    /**\r\n     * Moves and shows tooltip at specific value.\r\n     *\r\n     * Can also specify optional text to show in tooltip, as well as the color.\r\n     *\r\n     * @param  value  Value\r\n     * @param  text   Text\r\n     * @param  color  Color\r\n     */\r\n    showValue(value, text, color) {\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip && $type.isNumber(value)) {\r\n            const startValue = this.get(\"startValue\", 0);\r\n            const endValue = this.get(\"endValue\", 1);\r\n            let c = (value - startValue) / (endValue - startValue);\r\n            if (c == Infinity || c == -Infinity || isNaN(c)) {\r\n                c = 0.5;\r\n            }\r\n            const startColor = this.get(\"startColor\");\r\n            const endColor = this.get(\"endColor\");\r\n            if (!text) {\r\n                text = this.getNumberFormatter().format(value);\r\n            }\r\n            if (!color) {\r\n                color = Color.interpolate(c, startColor, endColor);\r\n            }\r\n            tooltip.label.set(\"text\", text);\r\n            let p;\r\n            if (this.get(\"orientation\") == \"vertical\") {\r\n                p = this.markerContainer.toGlobal({ x: 0, y: this.innerHeight() * (1 - c) });\r\n            }\r\n            else {\r\n                p = this.markerContainer.toGlobal({ x: this.innerWidth() * c, y: 0 });\r\n            }\r\n            let background = tooltip.get(\"background\");\r\n            if (background) {\r\n                background.set(\"fill\", color);\r\n            }\r\n            tooltip.set(\"pointTo\", p);\r\n            tooltip.show();\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const labelContainer = this.labelContainer;\r\n        const orientation = this.get(\"orientation\");\r\n        const startLabel = this.startLabel;\r\n        const endLabel = this.endLabel;\r\n        const tooltip = this.getTooltip();\r\n        if (this.isDirty(\"orientation\")) {\r\n            if (orientation == \"vertical\") {\r\n                this.markerContainer.setAll({ layout: this._root.verticalLayout, height: p100 });\r\n                this.set(\"layout\", this._root.horizontalLayout);\r\n                startLabel.setAll({ y: p100, x: undefined, centerY: p100, centerX: p100 });\r\n                endLabel.setAll({ y: 0, x: undefined, centerY: 0, centerX: p100 });\r\n                labelContainer.setAll({ height: p100, width: undefined });\r\n                if (tooltip) {\r\n                    tooltip.set(\"pointerOrientation\", \"horizontal\");\r\n                }\r\n            }\r\n            else {\r\n                this.markerContainer.setAll({ layout: this._root.horizontalLayout, width: p100 });\r\n                this.set(\"layout\", this._root.verticalLayout);\r\n                startLabel.setAll({ x: 0, y: undefined, centerX: 0, centerY: 0 });\r\n                endLabel.setAll({ x: p100, y: undefined, centerX: p100, centerY: 0 });\r\n                labelContainer.setAll({ width: p100, height: undefined });\r\n                if (tooltip) {\r\n                    tooltip.set(\"pointerOrientation\", \"vertical\");\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"stepCount\")) {\r\n            const stepCount = this.get(\"stepCount\", 1);\r\n            const startColor = this.get(\"startColor\");\r\n            const endColor = this.get(\"endColor\");\r\n            this.markerContainer.children.clear();\r\n            if (stepCount > 1) {\r\n                for (let i = 0; i < stepCount; i++) {\r\n                    const marker = this.makeMarker();\r\n                    if (orientation == \"vertical\") {\r\n                        this.markerContainer.children.moveValue(marker, 0);\r\n                    }\r\n                    else {\r\n                        this.markerContainer.children.push(marker);\r\n                    }\r\n                    if (startColor && endColor) {\r\n                        marker.set(\"fill\", Color.interpolate(i / stepCount, startColor, endColor));\r\n                    }\r\n                }\r\n            }\r\n            else if (stepCount == 1) {\r\n                const marker = this.makeMarker();\r\n                this.markerContainer.children.push(marker);\r\n                const gradient = LinearGradient.new(this._root, { stops: [{ color: startColor }, { color: endColor }] });\r\n                if (orientation == \"vertical\") {\r\n                    gradient.set(\"rotation\", 90);\r\n                    let stops = gradient.get(\"stops\");\r\n                    if (stops) {\r\n                        stops.reverse();\r\n                    }\r\n                }\r\n                else {\r\n                    gradient.set(\"rotation\", 0);\r\n                }\r\n                if (startColor && endColor) {\r\n                    marker.set(\"fillGradient\", gradient);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"startText\") || this.isDirty(\"startValue\")) {\r\n            startLabel.set(\"text\", this.get(\"startText\", this.getNumberFormatter().format(this.get(\"startValue\", 0))));\r\n        }\r\n        if (this.isDirty(\"endText\") || this.isDirty(\"endValue\")) {\r\n            endLabel.set(\"text\", this.get(\"endText\", this.getNumberFormatter().format(this.get(\"endValue\", 1))));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(HeatLegend, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HeatLegend\"\r\n});\r\nObject.defineProperty(HeatLegend, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([HeatLegend.className])\r\n});\r\n", "import { Label } from \"./Label\";\r\nimport { Container } from \"./Container\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { color } from \"../util/Color\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $array from \"../util/Array\";\r\n/**\r\n * Editable label.\r\n *\r\n * @since 5.9.5\r\n */\r\nexport class EditableLabel extends Label {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        const input = this.children.push(Container.new(this._root, {\r\n            html: \"<textarea class=\\\"am5-editable-label\\\"></textarea>\",\r\n            isMeasured: false\r\n        }));\r\n        input.hide();\r\n        const editOn = this.get(\"editOn\", \"click\");\r\n        if (editOn != \"none\") {\r\n            input.events.on(editOn, (_ev) => {\r\n                // this is here just to make it interactive\r\n            });\r\n            this.events.on(editOn, (_ev) => {\r\n                this.set(\"active\", true);\r\n            });\r\n        }\r\n        this.setPrivate(\"input\", input);\r\n        // Set background\r\n        let background = this.get(\"background\");\r\n        if (!background) {\r\n            background = this.set(\"background\", RoundedRectangle.new(this._root, {\r\n                themeTags: [\"editablelabel\", \"background\"]\r\n            }));\r\n        }\r\n        else {\r\n            background.set(\"themeTags\", [\"editablelabel\", \"background\"]);\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this._maybeInitTextarea();\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"active\")) {\r\n            const editing = this.get(\"active\", false);\r\n            if (editing) {\r\n                this._startEditing();\r\n            }\r\n            else {\r\n                this._stopEditing();\r\n            }\r\n            const bg = this.get(\"background\");\r\n            if (bg) {\r\n                bg.set(\"active\", editing);\r\n            }\r\n        }\r\n        ;\r\n        this._syncText();\r\n        this._syncStyle();\r\n    }\r\n    _maybeInitTextarea() {\r\n        if (!this._isInited()) {\r\n            const input = this.getPrivate(\"input\");\r\n            if (input && input.getPrivate(\"htmlElement\")) {\r\n                const el = input.getPrivate(\"htmlElement\");\r\n                const textarea = el.querySelector(\".am5-editable-label\");\r\n                if (textarea) {\r\n                    this.setPrivate(\"textarea\", textarea);\r\n                    // Resize textarea on keypress\r\n                    textarea.addEventListener(\"input\", _ev => {\r\n                        if (this.get(\"multiLine\") === false) {\r\n                            // replace line breaks with spaces for single-line labels\r\n                            textarea.value = textarea.value.replace(/\\n/g, \" \");\r\n                        }\r\n                        this.set(\"text\", textarea.value);\r\n                        this._syncStyle();\r\n                    });\r\n                    // Finish editing on blur\r\n                    textarea.addEventListener(\"blur\", _ev => this.set(\"active\", false));\r\n                    // Finish editing on ESC press\r\n                    if ($utils.supports(\"keyboardevents\")) {\r\n                        this._disposers.push($utils.addEventListener(document, \"keydown\", (ev) => {\r\n                            if ($utils.getEventKey(ev) == \"Escape\") {\r\n                                this.set(\"active\", false);\r\n                            }\r\n                        }));\r\n                    }\r\n                    // Intercept ENTER if necessary\r\n                    this._disposers.push($utils.addEventListener(document, \"keydown\", (ev) => {\r\n                        if ($utils.getEventKey(ev) == \"Enter\" && this.get(\"multiLine\") === false) {\r\n                            // Single-line label, save instead of breaking into new line\r\n                            ev.preventDefault();\r\n                            this.set(\"active\", false);\r\n                        }\r\n                    }));\r\n                    this.events.dispatch(\"inited\", {\r\n                        type: \"inited\",\r\n                        target: this\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _isInited() {\r\n        return this.getPrivate(\"textarea\") ? true : false;\r\n    }\r\n    _startEditing() {\r\n        if (!this._isInited()) {\r\n            this.events.once(\"inited\", () => {\r\n                this._startEditing();\r\n            });\r\n            return;\r\n        }\r\n        this._text.set(\"opacity\", 0);\r\n        const input = this.getPrivate(\"input\");\r\n        const textarea = this.getPrivate(\"textarea\");\r\n        if (textarea) {\r\n            if (this.get(\"text\", \"\") == \"\") {\r\n                this.set(\"text\", \" \");\r\n            }\r\n            input.show(0);\r\n            this.setTimeout(() => {\r\n                // size textarea to fit its actual content\r\n                this._syncStyle();\r\n                textarea.focus();\r\n            }, 100);\r\n        }\r\n    }\r\n    _stopEditing() {\r\n        if (!this._isInited()) {\r\n            this.events.once(\"inited\", () => {\r\n                this._stopEditing();\r\n            });\r\n            return;\r\n        }\r\n        const input = this.getPrivate(\"input\");\r\n        const textarea = this.getPrivate(\"textarea\");\r\n        if (textarea) {\r\n            this.set(\"text\", textarea.value);\r\n            input.hide(0);\r\n            this._text.set(\"opacity\", 1);\r\n        }\r\n    }\r\n    _syncStyle() {\r\n        const input = this.getPrivate(\"input\");\r\n        const textarea = this.getPrivate(\"textarea\");\r\n        if (textarea) {\r\n            // Set up HTML\r\n            const el = input.getPrivate(\"htmlElement\");\r\n            // Reset all styles\r\n            const computedStyles = window.getComputedStyle(textarea);\r\n            $array.each(computedStyles, (style) => {\r\n                textarea.style[style] = \"initial\";\r\n            });\r\n            // Remove textarea attributes\r\n            textarea.style.color = this.get(\"fill\", color(0x000000)).toCSS(this.get(\"fillOpacity\", 1));\r\n            textarea.style.backgroundColor = \"rgba(0, 0, 0, 0)\";\r\n            textarea.style.border = \"none\";\r\n            textarea.style.outline = \"none\";\r\n            textarea.style.padding = \"0\";\r\n            // Wrapping\r\n            textarea.wrap = \"off\";\r\n            textarea.style.resize = \"none\";\r\n            // Place carret under mouse cursor\r\n            // @todo\r\n            // Size\r\n            textarea.style.overflow = \"hidden\";\r\n            const maxWidth = this.get(\"maxWidth\", 0) - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0);\r\n            if (maxWidth > 0) {\r\n                textarea.style.maxWidth = maxWidth + \"px\";\r\n            }\r\n            else {\r\n                // The actual minWidth will be set on frameend\r\n                textarea.style.minWidth = \"\";\r\n            }\r\n            textarea.style.height = \"auto\";\r\n            textarea.style.minHeight = textarea.scrollHeight + \"px\";\r\n            // If width is explicitly set on a label, use it for textarea\r\n            if (this.get(\"width\")) {\r\n                textarea.style.width = (this.width() - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0)) + \"px\";\r\n                textarea.style.minWidth = \"\";\r\n            }\r\n            // Line height\r\n            const lineHeight = this.get(\"lineHeight\");\r\n            if (!lineHeight) {\r\n                textarea.style.lineHeight = \"1.2\";\r\n            }\r\n            else if (lineHeight instanceof Percent) {\r\n                textarea.style.lineHeight = lineHeight.value + \"\";\r\n            }\r\n            else if ($type.isNumber(lineHeight)) {\r\n                textarea.style.lineHeight = lineHeight + \"\";\r\n            }\r\n            // Font stuff\r\n            let fontFamily = this.get(\"fontFamily\");\r\n            if (!fontFamily) {\r\n                fontFamily = getComputedStyle(input.getPrivate(\"htmlElement\"), \"font-family\").getPropertyValue(\"font-family\");\r\n            }\r\n            textarea.style.fontFamily = fontFamily;\r\n            let fontSize = this.get(\"fontSize\");\r\n            if (!fontSize) {\r\n                fontSize = getComputedStyle(input.getPrivate(\"htmlElement\"), \"font-size\").getPropertyValue(\"font-size\");\r\n            }\r\n            else if ($type.isNumber(fontSize)) {\r\n                fontSize = fontSize + \"px\";\r\n            }\r\n            else {\r\n                fontSize = fontSize;\r\n            }\r\n            textarea.style.fontSize = fontSize;\r\n            let fontWeight = this.get(\"fontWeight\");\r\n            if (!fontWeight) {\r\n                fontWeight = getComputedStyle(input.getPrivate(\"htmlElement\"), \"font-weight\").getPropertyValue(\"font-weight\");\r\n            }\r\n            else {\r\n                fontWeight = fontWeight;\r\n            }\r\n            textarea.style.fontWeight = fontWeight;\r\n            let fontStyle = this.get(\"fontStyle\");\r\n            if (!fontStyle) {\r\n                fontStyle = getComputedStyle(input.getPrivate(\"htmlElement\"), \"font-style\").getPropertyValue(\"font-style\");\r\n            }\r\n            else {\r\n                fontStyle = fontStyle;\r\n            }\r\n            textarea.style.fontStyle = fontStyle;\r\n            const oversizeBehavior = this.get(\"oversizedBehavior\");\r\n            if (oversizeBehavior == \"wrap\") {\r\n                textarea.style.whiteSpace = \"pre-wrap\";\r\n            }\r\n            else {\r\n                textarea.style.whiteSpace = \"nowrap\";\r\n            }\r\n            // Adjust textarea postion based on textAlign setting\r\n            this._root.events.on(\"frameended\", () => {\r\n                if (textarea.style.minWidth == \"\") {\r\n                    textarea.style.minWidth = (textarea.scrollWidth + 20) + \"px\";\r\n                }\r\n                const textAlign = this.get(\"textAlign\", \"start\");\r\n                if (textAlign == \"center\") {\r\n                    textarea.style.textAlign = \"center\";\r\n                    if (!el.style.transform.match(/translateX/) && !this.get(\"width\")) {\r\n                        el.style.transform += \" translateX(-50%)\";\r\n                    }\r\n                }\r\n                else if (textAlign == \"end\") {\r\n                    textarea.style.textAlign = \"right\";\r\n                    if (!el.style.transform.match(/translateX/) && !this.get(\"width\")) {\r\n                        el.style.transform += \" translateX(-100%)\";\r\n                    }\r\n                }\r\n                else {\r\n                    textarea.style.textAlign = textAlign;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _syncText() {\r\n        const textarea = this.getPrivate(\"textarea\");\r\n        let text = this.get(\"text\", \"\");\r\n        if (text == \" \") {\r\n            text = \"\";\r\n        }\r\n        if (textarea) {\r\n            textarea.value = text;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(EditableLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"EditableLabel\"\r\n});\r\nObject.defineProperty(EditableLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([EditableLabel.className])\r\n});\r\n", "import { Series } from \"./Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * A universal legend control.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\r\n */\r\nexport class Legend extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * List of all [[Container]] elements for legend items.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"itemContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Container._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\r\n                themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\r\n                background: RoundedRectangle.new(this._root, {\r\n                    themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\r\n                    themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\r\n                })\r\n            }, [this.itemContainers.template])))\r\n        });\r\n        /**\r\n         * List of legend marker elements.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"markers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Container._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\r\n            }, [this.markers.template])))\r\n        });\r\n        /**\r\n         * List of legend label elements.\r\n         *\r\n         * @default new ListTemplate<Label>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\r\n            }, [this.labels.template])))\r\n        });\r\n        /**\r\n         * List of legend value label elements.\r\n         *\r\n         * @default new ListTemplate<label>\r\n         */\r\n        Object.defineProperty(this, \"valueLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\r\n            }, [this.valueLabels.template])))\r\n        });\r\n        /**\r\n         * List of rectangle elements used for default legend markers.\r\n         *\r\n         * @default new ListTemplate<RoundedRectangle>\r\n         */\r\n        Object.defineProperty(this, \"markerRectangles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\r\n            }, [this.markerRectangles.template])))\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\r\n        this.fields.push(\"name\", \"stroke\", \"fill\");\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeItemContainer(dataItem) {\r\n        const itemContainer = this.children.push(this.itemContainers.make());\r\n        itemContainer._setDataItem(dataItem);\r\n        this.itemContainers.push(itemContainer);\r\n        itemContainer.states.create(\"disabled\", {});\r\n        return itemContainer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarker() {\r\n        const marker = this.markers.make();\r\n        this.markers.push(marker);\r\n        marker.states.create(\"disabled\", {});\r\n        return marker;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel() {\r\n        const label = this.labels.make();\r\n        label.states.create(\"disabled\", {});\r\n        return label;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeValueLabel() {\r\n        const valueLabel = this.valueLabels.make();\r\n        valueLabel.states.create(\"disabled\", {});\r\n        return valueLabel;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarkerRectangle() {\r\n        const markerRectangle = this.markerRectangles.make();\r\n        markerRectangle.states.create(\"disabled\", {});\r\n        return markerRectangle;\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const itemContainer = this.makeItemContainer(dataItem);\r\n        const nameField = this.get(\"nameField\");\r\n        const fillField = this.get(\"fillField\");\r\n        const strokeField = this.get(\"strokeField\");\r\n        if (itemContainer) {\r\n            const clickTarget = this.get(\"clickTarget\", \"itemContainer\");\r\n            const item = dataItem.dataContext;\r\n            if (item && item.set) {\r\n                item.set(\"legendDataItem\", dataItem);\r\n            }\r\n            itemContainer._setDataItem(dataItem);\r\n            dataItem.set(\"itemContainer\", itemContainer);\r\n            const marker = this.makeMarker();\r\n            if (marker) {\r\n                itemContainer.children.push(marker);\r\n                marker._setDataItem(dataItem);\r\n                dataItem.set(\"marker\", marker);\r\n                const useDefaultMarker = this.get(\"useDefaultMarker\");\r\n                const markerRectangle = marker.children.push(this.makeMarkerRectangle());\r\n                let fill = dataItem.get(\"fill\");\r\n                let stroke = dataItem.get(\"stroke\");\r\n                dataItem.set(\"markerRectangle\", markerRectangle);\r\n                if (item && item.get) {\r\n                    fill = item.get(fillField, fill);\r\n                    stroke = item.get(strokeField, stroke);\r\n                }\r\n                if (!stroke) {\r\n                    stroke = fill;\r\n                }\r\n                if (!useDefaultMarker) {\r\n                    if (item && item.createLegendMarker) {\r\n                        item.createLegendMarker();\r\n                    }\r\n                }\r\n                else {\r\n                    if (item.on) {\r\n                        item.on(fillField, () => {\r\n                            markerRectangle.set(\"fill\", item.get(fillField));\r\n                        });\r\n                        item.on(strokeField, () => {\r\n                            markerRectangle.set(\"stroke\", item.get(strokeField));\r\n                        });\r\n                    }\r\n                }\r\n                markerRectangle.setAll({ fill, stroke });\r\n                // this solves if template field is set on slice\r\n                const component = item.component;\r\n                if (component && component.updateLegendMarker) {\r\n                    component.updateLegendMarker(item);\r\n                }\r\n            }\r\n            const label = this.makeLabel();\r\n            if (label) {\r\n                itemContainer.children.push(label);\r\n                label._setDataItem(dataItem);\r\n                dataItem.set(\"label\", label);\r\n                label.text.on(\"text\", () => {\r\n                    itemContainer.setRaw(\"ariaLabel\", label.text._getText() + (this.get(\"clickTarget\") !== \"none\" ? \"; \" + this._t(\"Press ENTER to toggle\") : \"\"));\r\n                    itemContainer.markDirtyAccessibility();\r\n                });\r\n                if (item && item.get) {\r\n                    dataItem.set(\"name\", item.get(nameField));\r\n                }\r\n                let name = dataItem.get(\"name\");\r\n                if (name) {\r\n                    label.set(\"text\", name);\r\n                }\r\n            }\r\n            const valueLabel = this.makeValueLabel();\r\n            if (valueLabel) {\r\n                itemContainer.children.push(valueLabel);\r\n                valueLabel._setDataItem(dataItem);\r\n                dataItem.set(\"valueLabel\", valueLabel);\r\n            }\r\n            if (item && item.show) {\r\n                item.on(\"visible\", (visible) => {\r\n                    itemContainer.set(\"disabled\", !visible);\r\n                });\r\n                if (!item.get(\"visible\")) {\r\n                    itemContainer.set(\"disabled\", true);\r\n                }\r\n                if (clickTarget != \"none\") {\r\n                    let clickContainer = itemContainer;\r\n                    if (clickTarget == \"marker\") {\r\n                        clickContainer = marker;\r\n                    }\r\n                    this._addClickEvents(clickContainer, item, dataItem);\r\n                }\r\n            }\r\n            // Sort children\r\n            this.children.values.sort((a, b) => {\r\n                const targetA = a.dataItem.dataContext;\r\n                const targetB = b.dataItem.dataContext;\r\n                if (targetA && targetB) {\r\n                    const indexA = this.data.indexOf(targetA);\r\n                    const indexB = this.data.indexOf(targetB);\r\n                    if (indexA > indexB) {\r\n                        return 1;\r\n                    }\r\n                    else if (indexA < indexB) {\r\n                        return -1;\r\n                    }\r\n                }\r\n                return 0;\r\n            });\r\n            if (item && item.updateLegendValue) {\r\n                item.updateLegendValue();\r\n            }\r\n        }\r\n    }\r\n    _addClickEvents(container, item, dataItem) {\r\n        container.set(\"cursorOverStyle\", \"pointer\");\r\n        container.events.on(\"pointerover\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.hoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"pointerout\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.unhoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"click\", () => {\r\n            const labelText = dataItem.get(\"label\").text._getText();\r\n            if (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\r\n                item.show();\r\n                container.set(\"disabled\", false);\r\n                this._root.readerAlert(this._t(\"%1 shown\", this._root.locale, labelText));\r\n            }\r\n            else if (item.hide) {\r\n                item.hide();\r\n                container.set(\"disabled\", true);\r\n                this._root.readerAlert(this._t(\"%1 hidden\", this._root.locale, labelText));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const dataContext = dataItem.dataContext;\r\n        if (dataContext && dataContext.get) {\r\n            const di = dataContext.get(\"legendDataItem\");\r\n            if (di == dataItem) {\r\n                dataContext.set(\"legendDataItem\", undefined);\r\n            }\r\n        }\r\n        let itemContainer = dataItem.get(\"itemContainer\");\r\n        if (itemContainer) {\r\n            this.itemContainers.removeValue(itemContainer);\r\n            itemContainer.dispose();\r\n        }\r\n        let marker = dataItem.get(\"marker\");\r\n        if (marker) {\r\n            this.markers.removeValue(marker);\r\n            marker.dispose();\r\n        }\r\n        let markerRectangle = dataItem.get(\"markerRectangle\");\r\n        if (markerRectangle) {\r\n            this.markerRectangles.removeValue(markerRectangle);\r\n            markerRectangle.dispose();\r\n        }\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        let valueLabel = dataItem.get(\"valueLabel\");\r\n        if (valueLabel) {\r\n            this.valueLabels.removeValue(valueLabel);\r\n            valueLabel.dispose();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Legend, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Legend\"\r\n});\r\nObject.defineProperty(Legend, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([Legend.className])\r\n});\r\n", "import { Sprite } from \"./Sprite\";\r\nimport * as $type from \"../util/Type\";\r\n/**\r\n * Displays an image.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/images/} for more info\r\n * @important\r\n */\r\nexport class Picture extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makePicture(undefined)\r\n        });\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"width\")) {\r\n            const width = this.get(\"width\");\r\n            this._display.width = $type.isNumber(width) ? width : undefined;\r\n        }\r\n        if (this.isDirty(\"height\")) {\r\n            const height = this.get(\"height\");\r\n            this._display.height = $type.isNumber(height) ? height : undefined;\r\n        }\r\n        if (this.isDirty(\"shadowColor\")) {\r\n            this._display.clear();\r\n            const shadowColor = this.get(\"shadowColor\");\r\n            this._display.shadowColor = shadowColor == null ? undefined : shadowColor;\r\n        }\r\n        if (this.isDirty(\"shadowBlur\")) {\r\n            this._display.clear();\r\n            this._display.shadowBlur = this.get(\"shadowBlur\");\r\n        }\r\n        if (this.isDirty(\"shadowOffsetX\")) {\r\n            this._display.clear();\r\n            this._display.shadowOffsetX = this.get(\"shadowOffsetX\");\r\n        }\r\n        if (this.isDirty(\"shadowOffsetY\")) {\r\n            this._display.clear();\r\n            this._display.shadowOffsetY = this.get(\"shadowOffsetY\");\r\n        }\r\n        if (this.isDirty(\"shadowOpacity\")) {\r\n            this._display.clear();\r\n            this._display.shadowOpacity = this.get(\"shadowOpacity\");\r\n        }\r\n        if (this.isDirty(\"src\") || this.isDirty(\"cors\")) {\r\n            this._display.clear();\r\n            this._load();\r\n        }\r\n    }\r\n    _load() {\r\n        const src = this.get(\"src\");\r\n        if (src) {\r\n            const image = new Image();\r\n            image.crossOrigin = this.get(\"cors\", \"anonymous\");\r\n            image.src = src;\r\n            const events = this.events;\r\n            image.decode().then(() => {\r\n                this._display.image = image;\r\n                this._updateSize();\r\n                if (!events.isDisposed() && events.isEnabled(\"loaded\")) {\r\n                    events.dispatch(\"loaded\", { type: \"loaded\", target: this });\r\n                }\r\n            }).catch((_error) => {\r\n                if (!events.isDisposed() && events.isEnabled(\"loaderror\")) {\r\n                    events.dispatch(\"loaderror\", { type: \"loaderror\", target: this });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        const image = this._display.image;\r\n        if (image) {\r\n            let w = this.getPrivate(\"width\", this.get(\"width\"));\r\n            let h = this.getPrivate(\"height\", this.get(\"height\"));\r\n            const r = image.width && image.height ? image.width / image.height : 0;\r\n            if ($type.isNumber(w) && $type.isNumber(h)) {\r\n                this._display.width = w;\r\n                this._display.height = h;\r\n            }\r\n            else if ($type.isNumber(w) && r) {\r\n                h = w / r;\r\n            }\r\n            else if ($type.isNumber(h) && r) {\r\n                w = h * r;\r\n            }\r\n            else {\r\n                w = image.width;\r\n                h = image.height;\r\n            }\r\n            if ($type.isNumber(w)) {\r\n                this._display.width = w;\r\n            }\r\n            if ($type.isNumber(h)) {\r\n                this._display.height = h;\r\n            }\r\n            this.markDirtyBounds();\r\n            this.markDirty();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Picture, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Picture\"\r\n});\r\nObject.defineProperty(Picture, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Picture.className])\r\n});\r\n", "import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a triangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Triangle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear && !this.get(\"draw\")) {\r\n            this._draw();\r\n        }\r\n    }\r\n    _draw() {\r\n        const w = this.width();\r\n        const h = this.height();\r\n        const display = this._display;\r\n        display.moveTo(-w / 2, h / 2);\r\n        display.lineTo(0, -h / 2);\r\n        display.lineTo(w / 2, h / 2);\r\n        display.lineTo(-w / 2, h / 2);\r\n        display.closePath();\r\n    }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n}\r\nObject.defineProperty(Triangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Triangle\"\r\n});\r\nObject.defineProperty(Triangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Triangle.className])\r\n});\r\n", "import { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport { Button } from \"./Button\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\r\n */\r\nexport class Scrollbar extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A thumb elment - a draggable square between the grips, used for panning\r\n         * the selection.\r\n         */\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeThumb()\r\n        });\r\n        /**\r\n         * Start grip button.\r\n         */\r\n        Object.defineProperty(this, \"startGrip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeButton()\r\n        });\r\n        /**\r\n         * End grip button.\r\n         */\r\n        Object.defineProperty(this, \"endGrip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeButton()\r\n        });\r\n        Object.defineProperty(this, \"_thumbBusy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_startDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_endDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_thumbDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_gripDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _addOrientationClass() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", this._settings.orientation]);\r\n        if (!this._settings.background) {\r\n            this._settings.background = RoundedRectangle.new(this._root, {\r\n                themeTags: $utils.mergeTags(this._settings.themeTags, [\"main\", \"background\"])\r\n            });\r\n        }\r\n    }\r\n    _makeButton() {\r\n        return this.children.push(Button.new(this._root, {\r\n            themeTags: [\"resize\", \"button\", this.get(\"orientation\")], icon: Graphics.new(this._root, {\r\n                themeTags: [\"icon\"]\r\n            })\r\n        }));\r\n    }\r\n    _makeThumb() {\r\n        return this.children.push(RoundedRectangle.new(this._root, {\r\n            themeTags: [\"thumb\", this.get(\"orientation\")]\r\n        }));\r\n    }\r\n    _handleAnimation(animation) {\r\n        if (animation) {\r\n            this._disposers.push(animation.events.on(\"stopped\", () => {\r\n                this.setPrivateRaw(\"isBusy\", false);\r\n                this._thumbBusy = false;\r\n            }));\r\n        }\r\n    }\r\n    _afterNew() {\r\n        this._addOrientationClass();\r\n        super._afterNew();\r\n        const startGrip = this.startGrip;\r\n        const endGrip = this.endGrip;\r\n        const thumb = this.thumb;\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            this._disposers.push(background.events.on(\"click\", (event) => {\r\n                this.setPrivateRaw(\"isBusy\", true);\r\n                const point = this._display.toLocal(event.point);\r\n                const w = this.width();\r\n                const h = this.height();\r\n                const orientation = this.get(\"orientation\");\r\n                let newMiddle;\r\n                if (orientation == \"vertical\") {\r\n                    newMiddle = (point.y - thumb.height() / 2) / h;\r\n                }\r\n                else {\r\n                    newMiddle = (point.x - thumb.width() / 2) / w;\r\n                }\r\n                let newCoordinate;\r\n                let key;\r\n                if (orientation == \"vertical\") {\r\n                    newCoordinate = newMiddle * h;\r\n                    key = \"y\";\r\n                }\r\n                else {\r\n                    newCoordinate = newMiddle * w;\r\n                    key = \"x\";\r\n                }\r\n                const duration = this.get(\"animationDuration\", 0);\r\n                if (duration > 0) {\r\n                    this._thumbBusy = true;\r\n                    this._handleAnimation(this.thumb.animate({ key: key, to: newCoordinate, duration: duration, easing: this.get(\"animationEasing\") }));\r\n                }\r\n                else {\r\n                    this.thumb.set(key, newCoordinate);\r\n                    this._root.events.once(\"frameended\", () => {\r\n                        this.setPrivateRaw(\"isBusy\", false);\r\n                    });\r\n                }\r\n            }));\r\n        }\r\n        this._disposers.push(thumb.events.on(\"dblclick\", (event) => {\r\n            if (!$utils.isLocalEvent(event.originalEvent, this)) {\r\n                return;\r\n            }\r\n            const duration = this.get(\"animationDuration\", 0);\r\n            const easing = this.get(\"animationEasing\");\r\n            this.animate({ key: \"start\", to: 0, duration: duration, easing: easing });\r\n            this.animate({ key: \"end\", to: 1, duration: duration, easing: easing });\r\n        }));\r\n        this._disposers.push(startGrip.events.on(\"pointerdown\", () => {\r\n            this.setPrivateRaw(\"isBusy\", true);\r\n            this._startDown = true;\r\n            this._gripDown = \"start\";\r\n        }));\r\n        this._disposers.push(endGrip.events.on(\"pointerdown\", () => {\r\n            this.setPrivateRaw(\"isBusy\", true);\r\n            this._endDown = true;\r\n            this._gripDown = \"end\";\r\n        }));\r\n        this._disposers.push(thumb.events.on(\"pointerdown\", () => {\r\n            this.setPrivateRaw(\"isBusy\", true);\r\n            this._thumbDown = true;\r\n            this._gripDown = undefined;\r\n        }));\r\n        this._disposers.push(startGrip.events.on(\"globalpointerup\", () => {\r\n            if (this._startDown) {\r\n                this.setPrivateRaw(\"isBusy\", false);\r\n                this._released();\r\n            }\r\n            this._startDown = false;\r\n        }));\r\n        this._disposers.push(endGrip.events.on(\"globalpointerup\", () => {\r\n            if (this._endDown) {\r\n                this.setPrivateRaw(\"isBusy\", false);\r\n                this._released();\r\n            }\r\n            this._endDown = false;\r\n        }));\r\n        this._disposers.push(thumb.events.on(\"globalpointerup\", () => {\r\n            if (this._thumbDown) {\r\n                this.setPrivateRaw(\"isBusy\", false);\r\n                this._released();\r\n            }\r\n            this._thumbDown = false;\r\n        }));\r\n        this._disposers.push(startGrip.on(\"x\", () => {\r\n            this._updateThumb();\r\n        }));\r\n        this._disposers.push(endGrip.on(\"x\", () => {\r\n            this._updateThumb();\r\n        }));\r\n        this._disposers.push(startGrip.on(\"y\", () => {\r\n            this._updateThumb();\r\n        }));\r\n        this._disposers.push(endGrip.on(\"y\", () => {\r\n            this._updateThumb();\r\n        }));\r\n        this._disposers.push(thumb.events.on(\"positionchanged\", () => {\r\n            this._updateGripsByThumb();\r\n        }));\r\n        if (this.get(\"orientation\") == \"vertical\") {\r\n            startGrip.set(\"x\", 0);\r\n            endGrip.set(\"x\", 0);\r\n            this._disposers.push(thumb.adapters.add(\"y\", (value) => {\r\n                return Math.max(Math.min(Number(value), this.height() - thumb.height()), 0);\r\n            }));\r\n            this._disposers.push(thumb.adapters.add(\"x\", (_value) => {\r\n                return this.width() / 2;\r\n            }));\r\n            this._disposers.push(startGrip.adapters.add(\"x\", (_value) => {\r\n                return this.width() / 2;\r\n            }));\r\n            this._disposers.push(endGrip.adapters.add(\"x\", (_value) => {\r\n                return this.width() / 2;\r\n            }));\r\n            this._disposers.push(startGrip.adapters.add(\"y\", (value) => {\r\n                return Math.max(Math.min(Number(value), this.height()), 0);\r\n            }));\r\n            this._disposers.push(endGrip.adapters.add(\"y\", (value) => {\r\n                return Math.max(Math.min(Number(value), this.height()), 0);\r\n            }));\r\n        }\r\n        else {\r\n            startGrip.set(\"y\", 0);\r\n            endGrip.set(\"y\", 0);\r\n            this._disposers.push(thumb.adapters.add(\"x\", (value) => {\r\n                return Math.max(Math.min(Number(value), this.width() - thumb.width()), 0);\r\n            }));\r\n            this._disposers.push(thumb.adapters.add(\"y\", (_value) => {\r\n                return this.height() / 2;\r\n            }));\r\n            this._disposers.push(startGrip.adapters.add(\"y\", (_value) => {\r\n                return this.height() / 2;\r\n            }));\r\n            this._disposers.push(endGrip.adapters.add(\"y\", (_value) => {\r\n                return this.height() / 2;\r\n            }));\r\n            this._disposers.push(startGrip.adapters.add(\"x\", (value) => {\r\n                return Math.max(Math.min(Number(value), this.width()), 0);\r\n            }));\r\n            this._disposers.push(endGrip.adapters.add(\"x\", (value) => {\r\n                return Math.max(Math.min(Number(value), this.width()), 0);\r\n            }));\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"end\") || this.isDirty(\"start\") || this._sizeDirty) {\r\n            this.updateGrips();\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\r\n            const eventType = \"rangechanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this, start: this.get(\"start\", 0), end: this.get(\"end\", 1), grip: this._gripDown });\r\n            }\r\n        }\r\n    }\r\n    _released() {\r\n        const eventType = \"released\";\r\n        if (this.events.isEnabled(eventType)) {\r\n            this.events.dispatch(eventType, { type: eventType, target: this });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrips() {\r\n        const startGrip = this.startGrip;\r\n        const endGrip = this.endGrip;\r\n        const orientation = this.get(\"orientation\");\r\n        const height = this.height();\r\n        const width = this.width();\r\n        if (orientation == \"vertical\") {\r\n            startGrip.set(\"y\", height * this.get(\"start\", 0));\r\n            endGrip.set(\"y\", height * this.get(\"end\", 1));\r\n        }\r\n        else {\r\n            startGrip.set(\"x\", width * this.get(\"start\", 0));\r\n            endGrip.set(\"x\", width * this.get(\"end\", 1));\r\n        }\r\n        const valueFunction = this.getPrivate(\"positionTextFunction\");\r\n        const from = Math.round(this.get(\"start\", 0) * 100);\r\n        const to = Math.round(this.get(\"end\", 0) * 100);\r\n        let fromValue;\r\n        let toValue;\r\n        if (valueFunction) {\r\n            fromValue = valueFunction.call(this, this.get(\"start\", 0));\r\n            toValue = valueFunction.call(this, this.get(\"end\", 0));\r\n        }\r\n        else {\r\n            fromValue = from + \"%\";\r\n            toValue = to + \"%\";\r\n        }\r\n        startGrip.set(\"ariaLabel\", this._t(\"From %1\", undefined, fromValue));\r\n        startGrip.set(\"ariaValueNow\", \"\" + from);\r\n        startGrip.set(\"ariaValueText\", from + \"%\");\r\n        startGrip.set(\"ariaValueMin\", \"0\");\r\n        startGrip.set(\"ariaValueMax\", \"100\");\r\n        endGrip.set(\"ariaLabel\", this._t(\"To %1\", undefined, toValue));\r\n        endGrip.set(\"ariaValueNow\", \"\" + to);\r\n        endGrip.set(\"ariaValueText\", to + \"%\");\r\n        endGrip.set(\"ariaValueMin\", \"0\");\r\n        endGrip.set(\"ariaValueMax\", \"100\");\r\n    }\r\n    _updateThumb() {\r\n        const thumb = this.thumb;\r\n        const startGrip = this.startGrip;\r\n        const endGrip = this.endGrip;\r\n        const height = this.height();\r\n        const width = this.width();\r\n        let x0 = startGrip.x();\r\n        let x1 = endGrip.x();\r\n        let y0 = startGrip.y();\r\n        let y1 = endGrip.y();\r\n        let start = 0;\r\n        let end = 1;\r\n        if (this.get(\"orientation\") == \"vertical\") {\r\n            if ($type.isNumber(y0) && $type.isNumber(y1)) {\r\n                if (!this._thumbBusy && !thumb.isDragging()) {\r\n                    thumb.set(\"height\", y1 - y0);\r\n                    thumb.set(\"y\", y0);\r\n                }\r\n                start = y0 / height;\r\n                end = y1 / height;\r\n            }\r\n        }\r\n        else {\r\n            if ($type.isNumber(x0) && $type.isNumber(x1)) {\r\n                if (!this._thumbBusy && !thumb.isDragging()) {\r\n                    thumb.set(\"width\", x1 - x0);\r\n                    thumb.set(\"x\", x0);\r\n                }\r\n                start = x0 / width;\r\n                end = x1 / width;\r\n            }\r\n        }\r\n        if (this.getPrivate(\"isBusy\") && (this.get(\"start\") != start || this.get(\"end\") != end)) {\r\n            this.set(\"start\", start);\r\n            this.set(\"end\", end);\r\n        }\r\n        const valueFunction = this.getPrivate(\"positionTextFunction\");\r\n        const from = Math.round(this.get(\"start\", 0) * 100);\r\n        const to = Math.round(this.get(\"end\", 0) * 100);\r\n        let fromValue;\r\n        let toValue;\r\n        if (valueFunction) {\r\n            fromValue = valueFunction.call(this, this.get(\"start\", 0));\r\n            toValue = valueFunction.call(this, this.get(\"end\", 0));\r\n        }\r\n        else {\r\n            fromValue = from + \"%\";\r\n            toValue = to + \"%\";\r\n        }\r\n        thumb.set(\"ariaLabel\", this._t(\"From %1 to %2\", undefined, fromValue, toValue));\r\n        thumb.set(\"ariaValueNow\", \"\" + from);\r\n        thumb.set(\"ariaValueText\", from + \"%\");\r\n    }\r\n    _updateGripsByThumb() {\r\n        const thumb = this.thumb;\r\n        const startGrip = this.startGrip;\r\n        const endGrip = this.endGrip;\r\n        if (this.get(\"orientation\") == \"vertical\") {\r\n            const thumbSize = thumb.height();\r\n            startGrip.set(\"y\", thumb.y());\r\n            endGrip.set(\"y\", thumb.y() + thumbSize);\r\n        }\r\n        else {\r\n            const thumbSize = thumb.width();\r\n            startGrip.set(\"x\", thumb.x());\r\n            endGrip.set(\"x\", thumb.x() + thumbSize);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Scrollbar, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Scrollbar\"\r\n});\r\nObject.defineProperty(Scrollbar, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Scrollbar.className])\r\n});\r\n", "import { Scrollbar } from \"./Scrollbar\";\r\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n */\r\nexport class Slider extends Scrollbar {\r\n    _afterNew() {\r\n        this._addOrientationClass();\r\n        super._afterNew();\r\n        this.endGrip.setPrivate(\"visible\", false);\r\n        this.thumb.setPrivate(\"visible\", false);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrips() {\r\n        super.updateGrips();\r\n        const startGrip = this.startGrip;\r\n        this.endGrip.setAll({ x: startGrip.x(), y: startGrip.y() });\r\n        this.setRaw(\"end\", this.get(\"start\"));\r\n    }\r\n}\r\nObject.defineProperty(Slider, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Slider\"\r\n});\r\nObject.defineProperty(Slider, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Scrollbar.classNames.concat([Slider.className])\r\n});\r\n", "import { Container } from \"../../core/render/Container\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { MultiDisposer } from \"../../core/util/Disposer\";\r\nimport { ZoomableContainer } from \"./ZoomableContainer\";\r\n/**\r\n * A tool that displays button for zoomable targets.\r\n *\r\n * @since 5.8.0\r\n * @important\r\n */\r\nexport class ZoomTools extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Button]] for home.\r\n         */\r\n        Object.defineProperty(this, \"homeButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"home\"] }))\r\n        });\r\n        /**\r\n         * A [[Button]] for zoom in.\r\n         */\r\n        Object.defineProperty(this, \"plusButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"plus\"] }))\r\n        });\r\n        /**\r\n         * A [[Button]] for zoom out.\r\n         */\r\n        Object.defineProperty(this, \"minusButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"minus\"] }))\r\n        });\r\n        Object.defineProperty(this, \"_disposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_targetDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.set(\"position\", \"absolute\");\r\n        this.set(\"layout\", this._root.verticalLayout);\r\n        this.addTag(\"zoomtools\");\r\n        this.plusButton.setAll({\r\n            icon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n            layout: undefined\r\n        });\r\n        this.minusButton.setAll({\r\n            icon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n            layout: undefined\r\n        });\r\n        this.homeButton.setAll({\r\n            icon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n            layout: undefined\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"target\")) {\r\n            const target = this.get(\"target\");\r\n            const previous = this._prevSettings.target;\r\n            if (target) {\r\n                if (target instanceof ZoomableContainer) {\r\n                    this._targetDisposer = this.addDisposer(target.contents.on(\"scale\", (scale) => {\r\n                        if (scale == target.get(\"minZoomLevel\")) {\r\n                            this.minusButton.set(\"disabled\", true);\r\n                        }\r\n                        else {\r\n                            this.minusButton.set(\"disabled\", false);\r\n                        }\r\n                        if (scale == target.get(\"maxZoomLevel\")) {\r\n                            this.plusButton.set(\"disabled\", true);\r\n                        }\r\n                        else {\r\n                            this.plusButton.set(\"disabled\", false);\r\n                        }\r\n                    }));\r\n                    this.root.events.once(\"frameended\", () => {\r\n                        if (target.get(\"scale\") == target.get(\"minZoomLevel\")) {\r\n                            this.minusButton.set(\"disabled\", true);\r\n                        }\r\n                    });\r\n                }\r\n                this._disposer = new MultiDisposer([\r\n                    this.plusButton.events.on(\"click\", () => {\r\n                        target.zoomIn();\r\n                    }),\r\n                    this.minusButton.events.on(\"click\", () => {\r\n                        target.zoomOut();\r\n                    }),\r\n                    this.homeButton.events.on(\"click\", () => {\r\n                        target.goHome();\r\n                    })\r\n                ]);\r\n            }\r\n            if (previous) {\r\n                if (this._disposer) {\r\n                    this._disposer.dispose();\r\n                }\r\n                if (this._targetDisposer) {\r\n                    this._targetDisposer.dispose();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(ZoomTools, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ZoomTools\"\r\n});\r\nObject.defineProperty(ZoomTools, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([ZoomTools.className])\r\n});\r\n", "import { Pattern } from \"./Pattern\";\r\nimport { Color } from \"../../util/Color\";\r\n/**\r\n * Grain pattern.\r\n *\r\n * Allows to add grain (noise) effect to your [[Graphics]] objects.\r\n *\r\n * Note, grain pattern does not support `fill` and `color` setting.\r\n * Use `colors` setting to define colors of a grain pixels.\r\n *\r\n * Note, rotation setting is not supported by this pattern.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Grain_patterns} for more info\r\n * @since 5.5.0\r\n */\r\nexport class GrainPattern extends Pattern {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"canvas\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"canvas\")\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.canvas.getContext(\"2d\")\r\n        });\r\n        Object.defineProperty(this, \"_clearGrain\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        //document.body.appendChild(this.canvas); // temp\r\n        this.canvas.width = this.get(\"width\", 200);\r\n        this.canvas.height = this.get(\"height\", 200);\r\n        if (this.isDirty(\"size\") || this.isDirty(\"density\") || this.isDirty(\"minOpacity\") || this.isDirty(\"maxOpacity\") || this.isDirty(\"colors\") || this.isDirty(\"horizontalGap\") || this.isDirty(\"verticalGap\")) {\r\n            this._clearGrain = true;\r\n        }\r\n        super._beforeChanged();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clearGrain) {\r\n            const width = this.get(\"width\", 200);\r\n            const height = this.get(\"height\", 200);\r\n            const patternData = this.context.getImageData(0, 0, width, height);\r\n            const size = Math.max(1, this.get(\"size\", 1));\r\n            const minOpacity = this.get(\"minOpacity\", 0);\r\n            const maxOpacity = this.get(\"maxOpacity\", 0.3);\r\n            const colors = this.get(\"colors\", [this.get(\"color\", Color.fromHex(0x000000))]);\r\n            const cols = width / size;\r\n            const rows = height / size;\r\n            const density = this.get(\"density\", 1);\r\n            const horizontalGap = this.get(\"horizontalGap\", 0) + 1;\r\n            const verticalGap = this.get(\"verticalGap\", 0) + 1;\r\n            for (let r = 0; r < rows; r++) {\r\n                if (verticalGap > 0) {\r\n                    if (r / verticalGap != Math.round(r / verticalGap)) {\r\n                        continue;\r\n                    }\r\n                }\r\n                for (let c = 0; c < cols; c++) {\r\n                    const color = colors[Math.floor(Math.random() * colors.length)];\r\n                    const alpha = (minOpacity + Math.random() * (maxOpacity - minOpacity)) * 255;\r\n                    const rnd = Math.random();\r\n                    if (horizontalGap > 0) {\r\n                        if (c / horizontalGap != Math.round(c / horizontalGap)) {\r\n                            continue;\r\n                        }\r\n                    }\r\n                    if (rnd < density) {\r\n                        this._setRectData(c, r, size, width, patternData.data, color.r, color.g, color.b, alpha);\r\n                    }\r\n                }\r\n            }\r\n            this.context.putImageData(patternData, 0, 0);\r\n            this._pattern = this.context.createPattern(this.canvas, \"repeat\");\r\n        }\r\n        this._clearGrain = false;\r\n    }\r\n    _checkDirtyFill() {\r\n        return false;\r\n    }\r\n    _setRectData(col, row, size, width, data, rc, gc, bc, ac) {\r\n        for (var c = col * size; c < col * size + size; c++) {\r\n            for (var r = row * size; r < row * size + size; r++) {\r\n                var i = (r * width + c) * 4;\r\n                data[i] = rc;\r\n                data[i + 1] = gc;\r\n                data[i + 2] = bc;\r\n                data[i + 3] = ac;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(GrainPattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"GrainPattern\"\r\n});\r\nObject.defineProperty(GrainPattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([GrainPattern.className])\r\n});\r\n", "import { Gradient } from \"./Gradient\";\r\nimport { Color } from \"../../util/Color\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $utils from \"../../util/Utils\";\r\n/**\r\n * Radial gradient.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\r\nexport class RadialGradient extends Gradient {\r\n    /**\r\n     * @ignore\r\n     */\r\n    getFill(target) {\r\n        const bounds = this.getBounds(target);\r\n        let x = 0;\r\n        let y = 0;\r\n        let l = bounds.left || 0;\r\n        let r = bounds.right || 0;\r\n        let t = bounds.top || 0;\r\n        let b = bounds.bottom || 0;\r\n        const width = r - l;\r\n        const height = b - t;\r\n        let radius = target.get(\"radius\");\r\n        if ($type.isNumber(radius)) {\r\n            x = 0;\r\n            y = 0;\r\n        }\r\n        else {\r\n            radius = Math.min(width, height) / 2;\r\n            x = width / 2;\r\n            y = height / 2;\r\n        }\r\n        let ux = this.get(\"x\");\r\n        let uy = this.get(\"y\");\r\n        if (ux != null) {\r\n            x = $utils.relativeToValue(ux, width);\r\n        }\r\n        if (uy != null) {\r\n            y = $utils.relativeToValue(uy, height);\r\n        }\r\n        const gradient = this._root._renderer.createRadialGradient(x, y, 0, x, y, radius);\r\n        const stops = this.get(\"stops\");\r\n        if (stops) {\r\n            let i = 0;\r\n            $array.each(stops, (stop) => {\r\n                let offset = stop.offset;\r\n                if (!$type.isNumber(offset)) {\r\n                    offset = i / (stops.length - 1);\r\n                }\r\n                let opacity = stop.opacity;\r\n                if (!$type.isNumber(opacity)) {\r\n                    opacity = 1;\r\n                }\r\n                let color = stop.color;\r\n                if (color) {\r\n                    const lighten = stop.lighten;\r\n                    if (lighten) {\r\n                        color = Color.lighten(color, lighten);\r\n                    }\r\n                    const brighten = stop.brighten;\r\n                    if (brighten) {\r\n                        color = Color.brighten(color, brighten);\r\n                    }\r\n                    gradient.addColorStop(offset, 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')');\r\n                }\r\n                i++;\r\n            });\r\n        }\r\n        return gradient;\r\n    }\r\n}\r\nObject.defineProperty(RadialGradient, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialGradient\"\r\n});\r\nObject.defineProperty(RadialGradient, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Gradient.classNames.concat([RadialGradient.className])\r\n});\r\n", "import { Pattern } from \"./Pattern\";\r\nimport * as $math from \"../../util/Math\";\r\n/**\r\n * Circle pattern.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class CirclePattern extends Pattern {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"gap\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const checkered = this.get(\"checkered\", false);\r\n        const centered = this.get(\"centered\", true);\r\n        const gap = this.get(\"gap\", 0);\r\n        const rotation = this.get(\"rotation\", 0);\r\n        let w = this.get(\"width\", 100);\r\n        let h = this.get(\"height\", 100);\r\n        let radius = this.get(\"radius\", 3);\r\n        let cellW = radius * 2 + gap;\r\n        let cellH = radius * 2 + gap;\r\n        let cols = Math.round(w / cellW);\r\n        let rows = Math.round(h / cellH);\r\n        cellW = w / cols;\r\n        cellH = h / rows;\r\n        if (rotation != 0) {\r\n            // @todo this is probably not right\r\n            this._display.x = cellW * $math.cos(rotation);\r\n            this._display.y = cellH * $math.sin(rotation);\r\n        }\r\n        const color = this.get(\"color\");\r\n        const colorOpacity = this.get(\"colorOpacity\");\r\n        if (color || colorOpacity) {\r\n            this._display.beginFill(color, colorOpacity);\r\n        }\r\n        for (let r = rotation == 0 ? 0 : -rows * 2; r < rows * 2; r++) {\r\n            for (let c = rotation == 0 ? 0 : -cols * 2; c < cols * 2; c++) {\r\n                if (!checkered || ((r & 1) != 1 && (c & 1) != 1) || ((r & 1) == 1 && (c & 1) == 1)) {\r\n                    let x = c * cellW;\r\n                    let y = r * cellH;\r\n                    if (centered) {\r\n                        x += cellW + gap / 2;\r\n                        y += cellH + gap / 2;\r\n                    }\r\n                    this._display.drawCircle(x - radius, y - radius, radius);\r\n                }\r\n            }\r\n        }\r\n        if (checkered) {\r\n            w = w / 2 - gap * 2;\r\n            h = h / 2 - gap * 2;\r\n        }\r\n        else {\r\n            w -= gap;\r\n            h -= gap;\r\n        }\r\n        if (color || colorOpacity) {\r\n            this._display.endFill();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(CirclePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"CirclePattern\"\r\n});\r\nObject.defineProperty(CirclePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([CirclePattern.className])\r\n});\r\n", "import { Pattern } from \"./Pattern\";\r\nimport * as $type from \"../../util//Type\";\r\n/**\r\n * Line pattern.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class LinePattern extends Pattern {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"gap\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const w = this.get(\"width\", 100);\r\n        const h = this.get(\"height\", 100);\r\n        const gap = this.get(\"gap\", 0);\r\n        const strokeWidth = this.get(\"strokeWidth\", 1);\r\n        if (!gap) {\r\n            this._display.moveTo(0, 0);\r\n            this._display.lineTo(w, 0);\r\n        }\r\n        else {\r\n            let step = gap + strokeWidth;\r\n            let count = h / step;\r\n            for (let i = -count; i < count * 2; i++) {\r\n                const y = Math.round(i * step - step / 2) + 0.5;\r\n                this._display.moveTo(-w, y);\r\n                this._display.lineTo(w * 2, y);\r\n            }\r\n        }\r\n        this._display.lineStyle(strokeWidth, this.get(\"color\"), this.get(\"colorOpacity\"));\r\n        let strokeDasharray = this.get(\"strokeDasharray\");\r\n        if ($type.isNumber(strokeDasharray)) {\r\n            if (strokeDasharray < 0.5) {\r\n                strokeDasharray = [0];\r\n            }\r\n            else {\r\n                strokeDasharray = [strokeDasharray];\r\n            }\r\n        }\r\n        this._display.setLineDash(strokeDasharray);\r\n        const strokeDashoffset = this.get(\"strokeDashoffset\");\r\n        if (strokeDashoffset) {\r\n            this._display.setLineDashOffset(strokeDashoffset);\r\n        }\r\n        this._display.endStroke();\r\n    }\r\n}\r\nObject.defineProperty(LinePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"LinePattern\"\r\n});\r\nObject.defineProperty(LinePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([LinePattern.className])\r\n});\r\n", "import { Pattern } from \"./Pattern\";\r\nimport * as $math from \"../../util/Math\";\r\n/**\r\n * Rectangle pattern.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class RectanglePattern extends Pattern {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"gap\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const checkered = this.get(\"checkered\", false);\r\n        const centered = this.get(\"centered\", true);\r\n        const gap = this.get(\"gap\", 0);\r\n        const rotation = this.get(\"rotation\", 0);\r\n        let w = this.get(\"width\", 100);\r\n        let h = this.get(\"height\", 100);\r\n        let rectW = this.get(\"maxWidth\", 5);\r\n        let rectH = this.get(\"maxHeight\", 5);\r\n        const display = this._display;\r\n        let cellW = rectW + gap;\r\n        let cellH = rectH + gap;\r\n        let cols = Math.round(w / cellW);\r\n        let rows = Math.round(h / cellH);\r\n        cellW = w / cols;\r\n        cellH = h / rows;\r\n        if (rotation != 0) {\r\n            // @todo this is probably not right\r\n            display.x = cellW / 2 * $math.cos(rotation);\r\n            display.y = -cellH / 2 * $math.sin(rotation);\r\n        }\r\n        for (let r = rotation == 0 ? 0 : -rows * 2; r < rows * 2; r++) {\r\n            for (let c = rotation == 0 ? 0 : -cols * 2; c < cols * 2; c++) {\r\n                if (!checkered || ((r & 1) != 1 && (c & 1) != 1) || ((r & 1) == 1 && (c & 1) == 1)) {\r\n                    let x = c * cellW;\r\n                    let y = r * cellH;\r\n                    if (centered) {\r\n                        x += (cellW - rectW) / 2;\r\n                        y += (cellH - rectH) / 2;\r\n                    }\r\n                    display.drawRect(x, y, rectW, rectH);\r\n                }\r\n            }\r\n        }\r\n        if (checkered) {\r\n            w = w / 2 - gap * 2;\r\n            h = h / 2 - gap * 2;\r\n        }\r\n        else {\r\n            w -= gap;\r\n            h -= gap;\r\n        }\r\n        const color = this.get(\"color\");\r\n        const colorOpacity = this.get(\"colorOpacity\");\r\n        if (color || colorOpacity) {\r\n            // this._display.lineStyle(strokeWidth, stroke, colorOpacity);\r\n            // this._display.endStroke();\r\n            display.beginFill(color, colorOpacity);\r\n            display.endFill();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RectanglePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RectanglePattern\"\r\n});\r\nObject.defineProperty(RectanglePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([RectanglePattern.className])\r\n});\r\n", "import { Pattern } from \"./Pattern\";\r\n/**\r\n * A pattern that uses an SVG path.\r\n *\r\n * @since 5.2.33\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class PathPattern extends Pattern {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"svgPath\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        // const checkered = this.get(\"checkered\", false);\r\n        // const centered = this.get(\"centered\", true);\r\n        // const gap = this.get(\"gap\", 0);\r\n        // const rotation = this.get(\"rotation\", 0);\r\n        // let w = this.get(\"width\", 100);\r\n        // let h = this.get(\"height\", 100);\r\n        // let rectW = this.get(\"maxWidth\", 5);\r\n        // let rectH = this.get(\"maxHeight\", 5);\r\n        // let cellW = rectW + gap;\r\n        // let cellH = rectH + gap;\r\n        // let cols = Math.round(w / cellW);\r\n        // let rows = Math.round(h / cellH);\r\n        // cellW = w / cols;\r\n        // cellH = h / rows;\r\n        // if (rotation != 0) {\r\n        // \t// @todo this is probably not right\r\n        // \tthis._display.x = cellW / 2 * $math.cos(rotation);\r\n        // \tthis._display.y = -cellH / 2 * $math.sin(rotation);\r\n        // }\r\n        // for (let r = rotation == 0 ? 0 : -rows * 2; r < rows * 2; r++) {\r\n        // \tfor (let c = rotation == 0 ? 0 : -cols * 2; c < cols * 2; c++) {\r\n        // \t\tif (!checkered || ((r & 1) != 1 && (c & 1) != 1) || ((r & 1) == 1 && (c & 1) == 1)) {\r\n        // \t\t\tlet x = c * cellW;\r\n        // \t\t\tlet y = r * cellH;\r\n        // \t\t\tif (centered) {\r\n        // \t\t\t\tx += (cellW - rectW) / 2;\r\n        // \t\t\t\ty += (cellH - rectH) / 2;\r\n        // \t\t\t}\r\n        // \t\t\tthis._display.drawRect(x, y, rectW, rectH);\r\n        // \t\t}\r\n        // \t}\r\n        // }\r\n        // if (checkered) {\r\n        // \tw = w / 2 - gap * 2;\r\n        // \th = h / 2 - gap * 2;\r\n        // }\r\n        // else {\r\n        // \tw -= gap;\r\n        // \th -= gap;\r\n        // }\r\n        const svgPath = this.get(\"svgPath\");\r\n        if (svgPath != null) {\r\n            this._display.svgPath(svgPath);\r\n        }\r\n        const color = this.get(\"color\");\r\n        const colorOpacity = this.get(\"colorOpacity\");\r\n        if (color || colorOpacity) {\r\n            // this._display.lineStyle(strokeWidth, stroke, colorOpacity);\r\n            // this._display.endStroke();\r\n            this._display.beginFill(color, colorOpacity);\r\n            this._display.endFill();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PathPattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PathPattern\"\r\n});\r\nObject.defineProperty(PathPattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([PathPattern.className])\r\n});\r\n", "import { LinePattern } from \"../render/patterns/LinePattern\";\r\nimport { RectanglePattern } from \"../render/patterns/RectanglePattern\";\r\nimport { CirclePattern } from \"../render/patterns/CirclePattern\";\r\nimport { Entity } from \"./Entity\";\r\n/**\r\n * An object which holds list of [[Pattern]] objects and can serve them up in\r\n * an interative way.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Pattern_sets} for more info\r\n * @since 5.10.0\r\n */\r\nexport class PatternSet extends Entity {\r\n    _afterNew() {\r\n        // Applying themes because pattern set will not have parent\r\n        super._afterNewApplyThemes();\r\n        if (this.get(\"patterns\", []).length === 0) {\r\n            const color = this.get(\"color\", this.root.interfaceColors.get(\"stroke\"));\r\n            this.set(\"patterns\", [\r\n                this.getLinePattern({\r\n                    width: 1000,\r\n                    height: 1000,\r\n                    rotation: 45,\r\n                    strokeWidth: 1,\r\n                    //gap: 6,\r\n                    color: color\r\n                }),\r\n                this.getRectanglePattern({\r\n                    width: 10,\r\n                    height: 10,\r\n                    rotation: 0,\r\n                    maxWidth: 4,\r\n                    maxHeight: 4,\r\n                    color: color\r\n                }),\r\n                this.getLinePattern({\r\n                    width: 1000,\r\n                    height: 1000,\r\n                    rotation: -45,\r\n                    strokeWidth: 1,\r\n                    gap: 6,\r\n                    color: color\r\n                }),\r\n                this.getCirclePattern({\r\n                    width: 11,\r\n                    height: 11,\r\n                    radius: 2,\r\n                    color: color\r\n                }),\r\n                this.getLinePattern({\r\n                    width: 6,\r\n                    height: 6,\r\n                    rotation: 90,\r\n                    strokeWidth: 1,\r\n                    color: color\r\n                }),\r\n                this.getRectanglePattern({\r\n                    width: 14,\r\n                    height: 14,\r\n                    rotation: 45,\r\n                    gap: 4,\r\n                    maxWidth: 6,\r\n                    maxHeight: 6,\r\n                    checkered: true,\r\n                    color: color\r\n                }),\r\n                this.getLinePattern({\r\n                    width: 6,\r\n                    height: 6,\r\n                    rotation: 0,\r\n                    strokeWidth: 1,\r\n                    color: color\r\n                }),\r\n                this.getRectanglePattern({\r\n                    width: 15,\r\n                    height: 15,\r\n                    rotation: 0,\r\n                    gap: 5,\r\n                    maxWidth: 5,\r\n                    maxHeight: 5,\r\n                    checkered: true,\r\n                    color: color\r\n                }),\r\n                this.getLinePattern({\r\n                    width: 1000,\r\n                    height: 1000,\r\n                    rotation: 45,\r\n                    strokeWidth: 2,\r\n                    gap: 3,\r\n                    strokeDasharray: [4, 2],\r\n                    color: color\r\n                }),\r\n                this.getCirclePattern({\r\n                    width: 20,\r\n                    height: 20,\r\n                    radius: 3,\r\n                    gap: 4,\r\n                    checkered: true,\r\n                    color: color\r\n                }),\r\n                this.getLinePattern({\r\n                    width: 1000,\r\n                    height: 1000,\r\n                    rotation: -45,\r\n                    strokeWidth: 2,\r\n                    gap: 3,\r\n                    strokeDasharray: [4, 2],\r\n                    color: color\r\n                }),\r\n                this.getRectanglePattern({\r\n                    width: 10,\r\n                    height: 10,\r\n                    rotation: 0,\r\n                    gap: 1,\r\n                    maxWidth: 9,\r\n                    maxHeight: 9,\r\n                    color: color\r\n                }),\r\n                this.getLinePattern({\r\n                    width: 1000,\r\n                    height: 1000,\r\n                    rotation: -45,\r\n                    strokeWidth: 2,\r\n                    gap: 1,\r\n                    color: color\r\n                }),\r\n                this.getLinePattern({\r\n                    width: 1000,\r\n                    height: 1000,\r\n                    rotation: 45,\r\n                    strokeWidth: 2,\r\n                    gap: 1,\r\n                    color: color\r\n                }),\r\n                this.getLinePattern({\r\n                    width: 1000,\r\n                    height: 1000,\r\n                    rotation: 0,\r\n                    strokeWidth: 3,\r\n                    gap: 1,\r\n                    color: color\r\n                }),\r\n                this.getLinePattern({\r\n                    width: 1000,\r\n                    height: 1000,\r\n                    rotation: 90,\r\n                    strokeWidth: 3,\r\n                    gap: 1,\r\n                    color: color\r\n                }),\r\n            ]);\r\n        }\r\n        this._dirty[\"patterns\"] = false;\r\n    }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"patterns\")) {\r\n            this.reset();\r\n        }\r\n    }\r\n    /**\r\n     * Returns a [[Pattern]] at specific index.\r\n     *\r\n     * @param   index  Index\r\n     * @return         Color\r\n     */\r\n    getIndex(index) {\r\n        const patterns = this.get(\"patterns\", []);\r\n        if ((index < patterns.length) && patterns[index] !== null) {\r\n            return patterns[index];\r\n        }\r\n        if (index > (patterns.length - 1)) {\r\n            const adjustedIndex = index - Math.floor(index * (index / patterns.length));\r\n            return patterns[adjustedIndex];\r\n        }\r\n        return patterns[index];\r\n    }\r\n    /**\r\n     * Returns next [[Color]] in the list.\r\n     *\r\n     * If the list is out of colors, new ones are generated dynamically.\r\n     */\r\n    next() {\r\n        let currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\r\n        return this.getIndex(currentStep);\r\n    }\r\n    /**\r\n     * Resets counter to the start of the list, so the next call for `next()` will\r\n     * return the first pattern.\r\n     */\r\n    reset() {\r\n        this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n    }\r\n    /**\r\n     * Returns a [[LinePattern].\r\n     *\r\n     * @param   settings  Pattern settings\r\n     * @return            Pattern object\r\n     */\r\n    getLinePattern(settings) {\r\n        let pattern = LinePattern.new(this.root, settings);\r\n        return pattern;\r\n    }\r\n    /**\r\n     * Returns a [[RectanglePattern].\r\n     *\r\n     * @param   settings  Pattern settings\r\n     * @return            Pattern object\r\n     */\r\n    getRectanglePattern(settings) {\r\n        let pattern = RectanglePattern.new(this.root, settings);\r\n        return pattern;\r\n    }\r\n    /**\r\n     * Returns a [[CirclePattern].\r\n     *\r\n     * @param   settings  Pattern settings\r\n     * @return            Pattern object\r\n     */\r\n    getCirclePattern(settings) {\r\n        let pattern = CirclePattern.new(this.root, settings);\r\n        return pattern;\r\n    }\r\n}\r\nObject.defineProperty(PatternSet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PatternSet\"\r\n});\r\nObject.defineProperty(PatternSet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([PatternSet.className])\r\n});\r\n", "import * as $type from \"./Type\";\r\nimport * as $object from \"./Object\";\r\n/**\r\n * Tool to parse JSON string into structured data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Parsing} for more info\r\n * @important\r\n */\r\nexport class JSONParser {\r\n    /**\r\n     * Parses JSON string.\r\n     *\r\n     * @param   input    JSON\r\n     * @param   options  Options\r\n     * @return           Data\r\n     */\r\n    static parse(input, options) {\r\n        options = this._applyDefaults(options);\r\n        try {\r\n            if ($type.isString(input)) {\r\n                let data = JSON.parse(input);\r\n                if (options.reverse && $type.isArray(data)) {\r\n                    data.reverse();\r\n                }\r\n                return data;\r\n            }\r\n            else if ($type.isArray(input) || $type.isObject(input)) {\r\n                return input;\r\n            }\r\n            else {\r\n                throw (\"Unable to parse JSON data\");\r\n            }\r\n        }\r\n        catch (e) {\r\n            return undefined;\r\n        }\r\n    }\r\n    static _applyDefaults(options) {\r\n        const normalized = {};\r\n        const defaults = {\r\n            reverse: false\r\n        };\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        $object.each(defaults, (key, val) => {\r\n            normalized[key] = options[key] || val;\r\n        });\r\n        return normalized;\r\n    }\r\n}\r\n/**\r\n * Tool to parse JSON string into structured data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Parsing} for more info\r\n * @important\r\n */\r\nexport class CSVParser {\r\n    /**\r\n     * Parses CSV string.\r\n     *\r\n     * @param   input    CSV\r\n     * @param   options  Options\r\n     * @return           Data\r\n     */\r\n    static parse(input, options) {\r\n        options = this._applyDefaults(options);\r\n        // Get CSV data as array\r\n        let data = this.CSVToArray(input, options.delimiter);\r\n        // Init resuling array\r\n        let res = [], cols = [], col, i;\r\n        // Skip rows\r\n        for (i = 0; i < options.skipRows; i++) {\r\n            data.shift();\r\n        }\r\n        // First row holds column names?\r\n        if (options.useColumnNames) {\r\n            cols = data.shift();\r\n            // Normalize column names\r\n            for (let x = 0; x < cols.length; x++) {\r\n                // trim\r\n                col = cols[x] != null ? cols[x].replace(/^\\s+|\\s+$/gm, \"\") : \"\";\r\n                // Check for empty\r\n                if (\"\" === col) {\r\n                    col = \"col\" + x;\r\n                }\r\n                cols[x] = col;\r\n            }\r\n        }\r\n        // Iterate through the result set\r\n        let row;\r\n        while (true) {\r\n            row = options.reverse ? data.pop() : data.shift();\r\n            if (!row) {\r\n                break;\r\n            }\r\n            if (options.skipEmpty && row.length === 1 && row[0] === \"\") {\r\n                continue;\r\n            }\r\n            let dataPoint = {};\r\n            for (i = 0; i < row.length; i++) {\r\n                col = undefined === cols[i] ? \"col\" + i : cols[i];\r\n                dataPoint[col] = row[i];\r\n            }\r\n            res.push(dataPoint);\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    static CSVToArray(data, delimiter) {\r\n        // Check to see if the delimiter is defined. If not,\r\n        // then default to comma.\r\n        delimiter = (delimiter || ',');\r\n        // Create a regular expression to parse the CSV values.\r\n        let objPattern = new RegExp((\r\n        // Delimiters.\r\n        \"(\\\\\" + delimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\r\n            // Quoted fields.\r\n            \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\r\n            // Standard fields.\r\n            \"([^\\\"\\\\\" + delimiter + \"\\\\r\\\\n]*))\"), \"gi\");\r\n        // Create an array to hold our data. Give the array\r\n        // a default empty first row.\r\n        let arrData = [\r\n            []\r\n        ];\r\n        // Create an array to hold our individual pattern\r\n        // matching groups.\r\n        let arrMatches = null;\r\n        // Keep looping over the regular expression matches\r\n        // until we can no longer find a match.\r\n        while (true) {\r\n            arrMatches = objPattern.exec(data);\r\n            if (!arrMatches) {\r\n                break;\r\n            }\r\n            // Get the delimiter that was found.\r\n            let strMatchedDelimiter = arrMatches[1];\r\n            // Check to see if the given delimiter has a length\r\n            // (is not the start of string) and if it matches\r\n            // field delimiter. If id does not, then we know\r\n            // that this delimiter is a row delimiter.\r\n            if (strMatchedDelimiter.length &&\r\n                (strMatchedDelimiter !== delimiter)) {\r\n                // Since we have reached a new row of data,\r\n                // add an empty row to our data array.\r\n                arrData.push([]);\r\n            }\r\n            // Now that we have our delimiter out of the way,\r\n            // let's check to see which kind of value we\r\n            // captured (quoted or unquoted).\r\n            let strMatchedValue;\r\n            if (arrMatches[2]) {\r\n                // We found a quoted value. When we capture\r\n                // this value, unescape any double quotes.\r\n                strMatchedValue = arrMatches[2].replace(new RegExp(\"\\\"\\\"\", \"g\"), \"\\\"\");\r\n            }\r\n            else {\r\n                // We found a non-quoted value.\r\n                strMatchedValue = arrMatches[3];\r\n            }\r\n            // Now that we have our value string, let's add\r\n            // it to the data array.\r\n            arrData[arrData.length - 1].push(strMatchedValue);\r\n        }\r\n        // Return the parsed data.\r\n        return (arrData);\r\n    }\r\n    static _applyDefaults(options) {\r\n        const normalized = {};\r\n        const defaults = {\r\n            delimiter: \",\",\r\n            reverse: false,\r\n            skipRows: 0,\r\n            skipEmpty: true,\r\n            useColumnNames: false\r\n        };\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        $object.each(defaults, (key, val) => {\r\n            normalized[key] = options[key] || val;\r\n        });\r\n        return normalized;\r\n    }\r\n}\r\n", "import { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nimport * as $object from \"./Object\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A tool that can process the data before it is being used in charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n * @important\r\n */\r\nexport class DataProcessor extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_checkDates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkNumbers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkEmpty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkDeep\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._checkFeatures();\r\n        this.on(\"dateFields\", () => this._checkFeatures());\r\n        this.on(\"dateFormat\", () => this._checkFeatures());\r\n        this.on(\"numericFields\", () => this._checkFeatures());\r\n        this.on(\"colorFields\", () => this._checkFeatures());\r\n        this.on(\"emptyAs\", () => this._checkFeatures());\r\n    }\r\n    _checkFeatures() {\r\n        if (this.isDirty(\"dateFields\") || this.isDirty(\"dateFormat\")) {\r\n            this._checkDates = this.get(\"dateFields\") && (this.get(\"dateFields\").length > 0);\r\n        }\r\n        if (this.isDirty(\"numericFields\")) {\r\n            this._checkNumbers = this.get(\"numericFields\") && (this.get(\"numericFields\").length > 0);\r\n        }\r\n        if (this.isDirty(\"colorFields\")) {\r\n            this._checkColors = this.get(\"colorFields\") && (this.get(\"colorFields\").length > 0);\r\n        }\r\n        if (this.isDirty(\"emptyAs\")) {\r\n            this._checkEmpty = this.get(\"emptyAs\") != null;\r\n        }\r\n        this._checkDeepFeatures();\r\n    }\r\n    _checkDeepFeatures() {\r\n        const deepFields = [];\r\n        $array.each([\"dateFields\", \"numericFields\", \"colorFields\"], (where) => {\r\n            $array.each(this.get(where, []), (field) => {\r\n                const steps = field.split(\".\");\r\n                steps.pop();\r\n                while (steps.length > 0) {\r\n                    deepFields.push(steps.join(\".\"));\r\n                    steps.pop();\r\n                }\r\n            });\r\n        });\r\n        this._checkDeep = deepFields.length > 0;\r\n        this.setPrivate(\"deepFields\", deepFields);\r\n    }\r\n    /**\r\n     * Processess entire array of data.\r\n     *\r\n     * NOTE: calling this will modify original array!\r\n     */\r\n    processMany(data) {\r\n        if ($type.isArray(data) && (this._checkDates || this._checkNumbers || this._checkColors || this._checkEmpty)) {\r\n            $array.each(data, (row) => {\r\n                this.processRow(row);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Processes a row (object) of data.\r\n     *\r\n     * NOTE: calling this will modify values of the original object!\r\n     */\r\n    processRow(row, prefix = \"\") {\r\n        $object.each(row, (key, _value) => {\r\n            const lookupKey = prefix + key;\r\n            if (this._checkEmpty) {\r\n                row[key] = this._maybeToEmpty(row[key]);\r\n            }\r\n            if (this._checkNumbers) {\r\n                row[key] = this._maybeToNumber(lookupKey, row[key]);\r\n            }\r\n            if (this._checkDates) {\r\n                row[key] = this._maybeToDate(lookupKey, row[key]);\r\n            }\r\n            if (this._checkColors) {\r\n                row[key] = this._maybeToColor(lookupKey, row[key]);\r\n            }\r\n            if (this._checkDeep && this.getPrivate(\"deepFields\", []).indexOf(lookupKey) !== -1 && $type.isObject(row[key])) {\r\n                this.processRow(row[key], lookupKey + \".\");\r\n            }\r\n        });\r\n    }\r\n    _maybeToNumber(field, value) {\r\n        if (this.get(\"numericFields\").indexOf(field) !== -1) {\r\n            return $type.toNumber(value);\r\n        }\r\n        return value;\r\n    }\r\n    _maybeToDate(field, value) {\r\n        if (this.get(\"dateFields\").indexOf(field) !== -1) {\r\n            return this._root.dateFormatter.parse(value, this.get(\"dateFormat\", \"\")).getTime();\r\n        }\r\n        return value;\r\n    }\r\n    _maybeToEmpty(value) {\r\n        if ((value == null || value == \"\") && this.get(\"emptyAs\") != null) {\r\n            return this.get(\"emptyAs\");\r\n        }\r\n        return value;\r\n    }\r\n    _maybeToColor(field, value) {\r\n        if (this.get(\"colorFields\").indexOf(field) !== -1) {\r\n            return Color.fromAny(value);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n", "import { Container } from \"./Container\";\r\nimport { p50, Percent } from \"../util/Percent\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { color } from \"../util/Color\";\r\nimport * as $math from \"../util/Math\";\r\nexport class SpriteResizer extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"rectangle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Rectangle.new(this._root, { themeTags: [\"rectangle\"], fillOpacity: 0, fill: color(0xFFFFFF) }))\r\n        });\r\n        Object.defineProperty(this, \"gripL\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createGrip(\"left\")\r\n        });\r\n        Object.defineProperty(this, \"gripR\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createGrip(\"right\")\r\n        });\r\n        Object.defineProperty(this, \"gripT\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createGrip(\"top\")\r\n        });\r\n        Object.defineProperty(this, \"gripB\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createGrip(\"bottom\")\r\n        });\r\n        Object.defineProperty(this, \"_is\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_ix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_iw\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_positionDP\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isHover\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.addTag(\"resizer\");\r\n        this.set(\"visible\", false);\r\n        this.gripL.events.on(\"dragged\", (e) => {\r\n            this._resize(e.target, -1);\r\n        });\r\n        this.gripR.events.on(\"dragged\", (e) => {\r\n            this._resize(e.target, 1);\r\n        });\r\n        this.gripL.events.on(\"dragstart\", (e) => {\r\n            this._resizeStart(e.target);\r\n        });\r\n        this.gripR.events.on(\"dragstart\", (e) => {\r\n            this._resizeStart(e.target);\r\n        });\r\n        this.gripT.events.on(\"dragged\", (e) => {\r\n            this._rotate(e, 90);\r\n        });\r\n        this.gripB.events.on(\"dragged\", (e) => {\r\n            this._rotate(e, -90);\r\n        });\r\n        this.gripT.events.on(\"dragstart\", (e) => {\r\n            this._resizeStart(e.target);\r\n        });\r\n        this.gripB.events.on(\"dragstart\", (e) => {\r\n            this._resizeStart(e.target);\r\n        });\r\n    }\r\n    _resizeStart(grip) {\r\n        const sprite = this.get(\"sprite\");\r\n        if (sprite) {\r\n            this._is = sprite.get(\"scale\", 1);\r\n            this._ix = grip.x();\r\n            this._iw = this.width() / 2;\r\n        }\r\n    }\r\n    _resize(grip, c) {\r\n        const sprite = this.get(\"sprite\");\r\n        const spriteTemplate = this.get(\"spriteTemplate\");\r\n        if (sprite) {\r\n            const scale = Math.max(0.01, this._is * (1 + c * (grip.x() - this._ix) / this._iw));\r\n            if (spriteTemplate) {\r\n                spriteTemplate.set(\"scale\", scale);\r\n            }\r\n            else {\r\n                sprite.set(\"scale\", scale);\r\n            }\r\n            sprite.states.lookup(\"default\").set(\"scale\", scale);\r\n            this._updatePositions();\r\n        }\r\n    }\r\n    _rotate(e, delta) {\r\n        const sprite = this.get(\"sprite\");\r\n        const spriteTemplate = this.get(\"spriteTemplate\");\r\n        if (sprite) {\r\n            const parent = this.parent;\r\n            if (parent) {\r\n                const rotationStep = this.get(\"rotationStep\", 10);\r\n                let angle = Math.round((($math.getAngle({ x: this.x(), y: this.y() }, parent.toLocal(e.point)) + delta) / rotationStep)) * rotationStep;\r\n                if (spriteTemplate) {\r\n                    spriteTemplate.set(\"rotation\", angle);\r\n                }\r\n                else {\r\n                    sprite.set(\"rotation\", angle);\r\n                }\r\n                sprite.states.lookup(\"default\").set(\"rotation\", angle);\r\n                this._updatePositions();\r\n            }\r\n        }\r\n    }\r\n    _createGrip(themeTag) {\r\n        const container = this.children.push(Container.new(this._root, {\r\n            themeTags: [\"grip\", themeTag],\r\n            setStateOnChildren: true,\r\n            draggable: true\r\n        }));\r\n        container.children.push(RoundedRectangle.new(this._root, {\r\n            themeTags: [\"outline\"],\r\n            centerX: p50,\r\n            centerY: p50\r\n        }));\r\n        container.children.push(RoundedRectangle.new(this._root, {\r\n            centerX: p50,\r\n            centerY: p50\r\n        }));\r\n        return container;\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"sprite\")) {\r\n            const sprite = this.get(\"sprite\");\r\n            if (sprite) {\r\n                this.show(0);\r\n                this.setPrivate(\"visible\", true);\r\n                this._updatePositions();\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    parent.children.moveValue(this, 0);\r\n                }\r\n                this._positionDP = sprite.events.on(\"positionchanged\", () => {\r\n                    this._updatePositions();\r\n                });\r\n                this._positionDP = sprite.events.on(\"boundschanged\", () => {\r\n                    this._updatePositions();\r\n                });\r\n            }\r\n            else {\r\n                this.hide(0);\r\n                this.setPrivate(\"visible\", false);\r\n                if (this._positionDP) {\r\n                    this._positionDP.dispose();\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\")) {\r\n            this._updatePositions();\r\n        }\r\n    }\r\n    _updatePositions() {\r\n        const sprite = this.get(\"sprite\");\r\n        if (sprite) {\r\n            let bounds = sprite.localBounds();\r\n            let scale = sprite.get(\"scale\", 1);\r\n            let d = 20;\r\n            let w = (bounds.right - bounds.left) * scale + d;\r\n            let h = (bounds.bottom - bounds.top) * scale + d;\r\n            let a = sprite.get(\"rotation\", 0);\r\n            const rectangle = this.rectangle;\r\n            let cx = sprite.get(\"centerX\", p50);\r\n            let cy = sprite.get(\"centerY\", p50);\r\n            let cxr = 0;\r\n            if (cx instanceof Percent) {\r\n                cxr = cx.value;\r\n            }\r\n            let cyr = 0;\r\n            if (cy instanceof Percent) {\r\n                cyr = cy.value;\r\n            }\r\n            rectangle.setAll({ centerX: cx, centerY: cy, width: w, height: h });\r\n            this.setAll({ x: sprite.x() + d * (cxr - 0.5) * $math.cos(a) - d * (cyr - 0.5) * $math.sin(a), y: sprite.y() + d * (cyr - 0.5) * $math.cos(a) + d * (cxr - 0.5) * $math.sin(a), width: w, height: h, rotation: a });\r\n            this.gripT.setAll({ x: (0.5 - cxr) * w, y: -cyr * h });\r\n            this.gripB.setAll({ x: (0.5 - cxr) * w, y: (1 - cyr) * h });\r\n            this.gripL.setAll({ x: -cxr * w, y: (0.5 - cyr) * h });\r\n            this.gripR.setAll({ x: (1 - cxr) * w, y: (0.5 - cyr) * h });\r\n            this.rectangle.setAll({ width: w, height: h });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SpriteResizer, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SpriteResizer\"\r\n});\r\nObject.defineProperty(SpriteResizer, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([SpriteResizer.className])\r\n});\r\n", "/**\r\n * A collection of network-related functions\r\n */\r\n/**\r\n * Loads an external file via its URL.\r\n *\r\n * Please note that this is an asynchronous function.\r\n *\r\n * It will not return the result, but rather a `Promise`.\r\n *\r\n * You can use the `await` notion, or `then()`.\r\n *\r\n * ```TypeScript\r\n * // Using await\r\n * let response = await Net.load( \"http://www.my.com/data.json\" );\r\n * console.log( response.response );\r\n *\r\n * // Using then()\r\n * Net.load( \"http://www.my.com/data.json\" ).then( ( response ) => {\r\n *   console.log( response.response );\r\n * } );\r\n * ```\r\n * ```JavaScript\r\n * // Using then()\r\n * Net.load( \"http://www.my.com/data.json\" ).then( function( response ) {\r\n *   console.log( response.response );\r\n * } );\r\n * ```\r\n *\r\n * @async\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/net-load-utility/} for more info\r\n * @param url      URL for the file to load\r\n * @param target   A target element that is requesting the net load\r\n * @param options  Request options\r\n * @return Result (Promise)\r\n */\r\nexport function load(url, target, options) {\r\n    return new Promise((success, error) => {\r\n        // Is return type Blob?\r\n        let isBlob = options != null && options.responseType == \"blob\";\r\n        // Create request and set up handlers\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.onload = () => {\r\n            if (xhr.status === 200) {\r\n                let response;\r\n                let blob;\r\n                if (isBlob) {\r\n                    blob = xhr.response;\r\n                    readBlob(blob).then((response) => {\r\n                        let output = {\r\n                            xhr: xhr,\r\n                            error: false,\r\n                            response: response,\r\n                            blob: blob,\r\n                            type: xhr.getResponseHeader(\"Content-Type\"),\r\n                            target: target\r\n                        };\r\n                        success(output);\r\n                    });\r\n                    return;\r\n                }\r\n                else {\r\n                    response = xhr.responseText || xhr.response;\r\n                }\r\n                let output = {\r\n                    xhr: xhr,\r\n                    error: false,\r\n                    response: response,\r\n                    blob: blob,\r\n                    type: xhr.getResponseHeader(\"Content-Type\"),\r\n                    target: target\r\n                };\r\n                success(output);\r\n            }\r\n            else {\r\n                error({\r\n                    xhr: xhr,\r\n                    error: true,\r\n                    type: xhr.getResponseHeader(\"Content-Type\"),\r\n                    target: target\r\n                });\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            error({\r\n                xhr: xhr,\r\n                error: true,\r\n                type: xhr.getResponseHeader(\"Content-Type\"),\r\n                target: target\r\n            });\r\n        };\r\n        // Open request\r\n        xhr.open(\"GET\", url, true);\r\n        if (options && options.withCredentials) {\r\n            xhr.withCredentials = true;\r\n        }\r\n        // Process options\r\n        if (options != null) {\r\n            if (options.requestHeaders != null) {\r\n                for (let i = 0; i < options.requestHeaders.length; i++) {\r\n                    let header = options.requestHeaders[i];\r\n                    xhr.setRequestHeader(header.key, header.value);\r\n                }\r\n            }\r\n            if (options.responseType != null) {\r\n                xhr.responseType = options.responseType;\r\n            }\r\n        }\r\n        // Send request\r\n        xhr.send();\r\n    });\r\n}\r\n/**\r\n * Returns textual representation of a Blob object.\r\n *\r\n * @param   blob  Target blob\r\n * @return        Text promise\r\n */\r\nexport function readBlob(blob) {\r\n    return new Promise((success, error) => {\r\n        const reader = new FileReader();\r\n        reader.onload = _event => {\r\n            success(reader.result);\r\n        };\r\n        reader.onerror = (e) => {\r\n            error(e);\r\n        };\r\n        reader.readAsText(blob);\r\n    });\r\n}\r\n"],
  "mappings": "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",
  "names": ["fill", "copy", "each", "a", "each", "value", "eachContinue", "each", "mapToEllipse", "approxUnitArc", "vectorAngle", "getArcCenter", "arcToBezier", "p0", "color", "blur", "_index", "metrics", "height", "w", "deltaAngle", "each", "ev", "canvas", "group", "each", "copy", "each", "p0", "cos", "sin", "color", "color", "color", "color", "color", "color", "color", "color", "each", "each", "response", "output"]
}
